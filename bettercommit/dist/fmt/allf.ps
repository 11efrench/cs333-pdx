%!PS-Adobe-2.0
%%DocumentFonts: Courier Times-Bold
%%Title: <stdin> (mpage)
%%Creator: mpage 2.5.6 Januari 2008
%%CreationDate: Sun Nov  6 23:34:23 2016
%%Orientation: Landscape
%%DocumentMedia: letter 612 792
%%BoundingBox: 18 50 594 742
%%Pages: (atend)
%%EndComments

%%BeginProlog

/mp_stm usertime def
/mp_pgc statusdict begin pagecount end def
statusdict begin /jobname (<stdin>) def end
/reencsmalldict 12 dict def /ReEncodeSmall { reencsmalldict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq { exch dup length array copy newfont 3 1 roll put } { exch newfont 3 1 roll put }
ifelse }
  { pop pop }
  ifelse } forall
newfont /FontName newfontname put
newcodesandnames aload pop newcodesandnames length 2 idiv
{ newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/charvec [
026 /Scaron
027 /Ydieresis
028 /Zcaron
029 /scaron
030 /trademark
031 /zcaron
032 /space
033 /exclam
034 /quotedbl
035 /numbersign
036 /dollar
037 /percent
038 /ampersand
039 /quoteright
040 /parenleft
041 /parenright
042 /asterisk
043 /plus
044 /comma
045 /minus
046 /period
047 /slash
048 /zero
049 /one
050 /two
051 /three
052 /four
053 /five
054 /six
055 /seven
056 /eight
057 /nine
058 /colon
059 /semicolon
060 /less
061 /equal
062 /greater
063 /question
064 /at
065 /A
066 /B
067 /C
068 /D
069 /E
070 /F
071 /G
072 /H
073 /I
074 /J
075 /K
076 /L
077 /M
078 /N
079 /O
080 /P
081 /Q
082 /R
083 /S
084 /T
085 /U
086 /V
087 /W
088 /X
089 /Y
090 /Z
091 /bracketleft
092 /backslash
093 /bracketright
094 /asciicircum
095 /underscore
096 /quoteleft
097 /a
098 /b
099 /c
100 /d
101 /e
102 /f
103 /g
104 /h
105 /i
106 /j
107 /k
108 /l
109 /m
110 /n
111 /o
112 /p
113 /q
114 /r
115 /s
116 /t
117 /u
118 /v
119 /w
120 /x
121 /y
122 /z
123 /braceleft
124 /bar
125 /braceright
126 /asciitilde
127 /.notdef
128 /fraction
129 /florin
130 /quotesingle
131 /quotedblleft
132 /guilsinglleft
133 /guilsinglright
134 /fi
135 /fl
136 /endash
137 /dagger
138 /daggerdbl
139 /bullet
140 /quotesinglbase
141 /quotedblbase
142 /quotedblright
143 /ellipsis
144 /dotlessi
145 /grave
146 /acute
147 /circumflex
148 /tilde
149 /oe
150 /breve
151 /dotaccent
152 /perthousand
153 /emdash
154 /ring
155 /Lslash
156 /OE
157 /hungarumlaut
158 /ogonek
159 /caron
160 /lslash
161 /exclamdown
162 /cent
163 /sterling
164 /currency
165 /yen
166 /brokenbar
167 /section
168 /dieresis
169 /copyright
170 /ordfeminine
171 /guillemotleft
172 /logicalnot
173 /hyphen
174 /registered
175 /macron
176 /degree
177 /plusminus
178 /twosuperior
179 /threesuperior
180 /acute
181 /mu
182 /paragraph
183 /periodcentered
184 /cedilla
185 /onesuperior
186 /ordmasculine
187 /guillemotright
188 /onequarter
189 /onehalf
190 /threequarters
191 /questiondown
192 /Agrave
193 /Aacute
194 /Acircumflex
195 /Atilde
196 /Adieresis
197 /Aring
198 /AE
199 /Ccedilla
200 /Egrave
201 /Eacute
202 /Ecircumflex
203 /Edieresis
204 /Igrave
205 /Iacute
206 /Icircumflex
207 /Idieresis
208 /Eth
209 /Ntilde
210 /Ograve
211 /Oacute
212 /Ocircumflex
213 /Otilde
214 /Odieresis
215 /multiply
216 /Oslash
217 /Ugrave
218 /Uacute
219 /Ucircumflex
220 /Udieresis
221 /Yacute
222 /Thorn
223 /germandbls
224 /agrave
225 /aacute
226 /acircumflex
227 /atilde
228 /adieresis
229 /aring
230 /ae
231 /ccedilla
232 /egrave
233 /eacute
234 /ecircumflex
235 /edieresis
236 /igrave
237 /iacute
238 /icircumflex
239 /idieresis
240 /eth
241 /ntilde
242 /ograve
243 /oacute
244 /ocircumflex
245 /otilde
246 /odieresis
247 /divide
248 /oslash
249 /ugrave
250 /uacute
251 /ucircumflex
252 /udieresis
253 /yacute
254 /thorn
255 /ydieresis
] def
/Courier /OurCharSet charvec ReEncodeSmall
/textfont /OurCharSet findfont 11 scalefont def
/textfontbold /OurCharSet-Bold findfont 11 scalefont def
/fnamefont /Times-Bold findfont 14 scalefont def
/headerfont /Times-Bold findfont 12 scalefont def
textfont setfont
(a) stringwidth pop /mp_a_x exch def
%%EndProlog
%%Page: 1 1
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  README  Page 1) show
0 648 moveto (xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix) show
0 636 moveto (Version 6 \(v6\).  xv6 loosely follows the structure and style of v6,) show
0 624 moveto (but is implemented for a modern x86-based multiprocessor using ANSI C.) show
0 600 moveto (ACKNOWLEDGMENTS) show
0 576 moveto (xv6 is inspired by John Lions's Commentary on UNIX 6th Edition \(Peer) show
0 564 moveto (to Peer Communications; ISBN: 1-57398-013-7; 1st edition \(June 14,) show
0 552 moveto (2000\)\). See also http://pdos.csail.mit.edu/6.828/2014/xv6.html, which) show
0 540 moveto (provides pointers to on-line resources for v6.) show
0 516 moveto (xv6 borrows code from the following sources:) show
4 mp_a_x mul 504 moveto (JOS \(asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others\)) show
4 mp_a_x mul 492 moveto (Plan 9 \(entryother.S, mp.h, mp.c, lapic.c\)) show
4 mp_a_x mul 480 moveto (FreeBSD \(ioapic.c\)) show
4 mp_a_x mul 468 moveto (NetBSD \(console.c\)) show
0 444 moveto (The following people have made contributions:) show
4 mp_a_x mul 432 moveto (Russ Cox \(context switching, locking\)) show
4 mp_a_x mul 420 moveto (Cliff Frey \(MP\)) show
4 mp_a_x mul 408 moveto (Xiao Yu \(MP\)) show
4 mp_a_x mul 396 moveto (Nickolai Zeldovich) show
4 mp_a_x mul 384 moveto (Austin Clements) show
0 360 moveto (In addition, we are grateful for the bug reports and patches contributed by) show
0 348 moveto (Silas Boyd-Wickizer, Peter Froehlich, Shivam Handa, Anders Kaseorg, Eddie) show
0 336 moveto (Kohler, Yandong Mao, Hitoshi Mitake, Carmi Merimovich, Joel Nider, Greg Price,) show
0 324 moveto (Eldar Sehayek, Yongming Shen, Stephen Tu, and Zouchangwei.) show
0 300 moveto (The code in the files that constitute xv6 is) show
0 288 moveto (Copyright 2006-2014 Frans Kaashoek, Robert Morris, and Russ Cox.) show
0 264 moveto (ERROR REPORTS) show
0 240 moveto (If you spot errors or have suggestions for improvement, please send) show
0 228 moveto (email to Frans Kaashoek and Robert Morris \(kaashoek,rtm@csail.mit.edu\). ) show
0 204 moveto (BUILDING AND RUNNING XV6) show
0 180 moveto (To build xv6 on an x86 ELF machine \(like Linux or FreeBSD\), run "make".) show
0 168 moveto (On non-x86 or non-ELF machines \(like OS X, even on x86\), you will) show
0 156 moveto (need to install a cross-compiler gcc suite capable of producing x86 ELF) show
0 144 moveto (binaries.  See http://pdos.csail.mit.edu/6.828/2014/tools.html.) show
0 132 moveto (Then run "make TOOLPREFIX=i386-jos-elf-".) show
0 108 moveto (To run xv6, install the QEMU PC simulators.  To run in QEMU, run "make qemu".) show
0 84 moveto (To create a typeset version of the code, run "make xv6.pdf".  This) show
0 72 moveto (requires the "mpage" utility.  See http://www.mesa.nl/pub/mpage/.) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  table of contents  Page 1) show
0 648 moveto (The numbers to the left of the file names in the table are sheet numbers.) show
0 636 moveto (The source code has been printed in a double column format with fifty) show
0 624 moveto (lines per column, giving one hundred lines per sheet \(or page\).) show
0 612 moveto (Thus there is a convenient relationship between line numbers and sheet numbers.) show
0 576 moveto (# basic headers) show
24 mp_a_x mul 576 moveto (31 vectors.pl) show
48 mp_a_x mul 576 moveto (# low-level hardware) show
0 564 moveto (01 types.h) show
24 mp_a_x mul 564 moveto (32 trapasm.S) show
48 mp_a_x mul 564 moveto (66 mp.h) show
0 552 moveto (01 param.h) show
24 mp_a_x mul 552 moveto (32 trap.c) show
48 mp_a_x mul 552 moveto (67 mp.c) show
0 540 moveto (02 memlayout.h) show
24 mp_a_x mul 540 moveto (34 syscall.h) show
48 mp_a_x mul 540 moveto (69 lapic.c) show
0 528 moveto (02 date.h) show
24 mp_a_x mul 528 moveto (34 syscall.c) show
48 mp_a_x mul 528 moveto (72 ioapic.c) show
0 516 moveto (03 defs.h) show
24 mp_a_x mul 516 moveto (37 sysproc.c) show
48 mp_a_x mul 516 moveto (73 picirq.c) show
0 504 moveto (05 x86.h) show
24 mp_a_x mul 504 moveto (39 halt.c) show
48 mp_a_x mul 504 moveto (74 kbd.h) show
0 492 moveto (07 asm.h) show
48 mp_a_x mul 492 moveto (75 kbd.c) show
0 480 moveto (07 mmu.h) show
24 mp_a_x mul 480 moveto (# file system) show
48 mp_a_x mul 480 moveto (76 console.c) show
0 468 moveto (10 elf.h) show
24 mp_a_x mul 468 moveto (39 buf.h) show
48 mp_a_x mul 468 moveto (79 timer.c) show
24 mp_a_x mul 456 moveto (40 fcntl.h) show
48 mp_a_x mul 456 moveto (79 uart.c) show
0 444 moveto (# entering xv6) show
24 mp_a_x mul 444 moveto (40 stat.h) show
0 432 moveto (10 entry.S) show
24 mp_a_x mul 432 moveto (41 fs.h) show
48 mp_a_x mul 432 moveto (# user-level) show
0 420 moveto (11 entryother.S) show
24 mp_a_x mul 420 moveto (42 file.h) show
48 mp_a_x mul 420 moveto (80 initcode.S) show
0 408 moveto (12 main.c) show
24 mp_a_x mul 408 moveto (42 ide.c) show
48 mp_a_x mul 408 moveto (81 usys.S) show
24 mp_a_x mul 396 moveto (44 bio.c) show
48 mp_a_x mul 396 moveto (81 init.c) show
0 384 moveto (# locks) show
24 mp_a_x mul 384 moveto (46 log.c) show
48 mp_a_x mul 384 moveto (82 sh.c) show
0 372 moveto (14 spinlock.h) show
24 mp_a_x mul 372 moveto (48 fs.c) show
0 360 moveto (14 spinlock.c) show
24 mp_a_x mul 360 moveto (55 file.c) show
48 mp_a_x mul 360 moveto (# bootloader) show
24 mp_a_x mul 348 moveto (57 sysfile.c) show
48 mp_a_x mul 348 moveto (88 bootasm.S) show
0 336 moveto (# processes) show
24 mp_a_x mul 336 moveto (62 exec.c) show
48 mp_a_x mul 336 moveto (89 bootmain.c) show
0 324 moveto (16 vm.c) show
0 312 moveto (20 proc.h) show
24 mp_a_x mul 312 moveto (# pipes) show
48 mp_a_x mul 312 moveto (# add student files her) show
0 300 moveto (21 proc.c) show
24 mp_a_x mul 300 moveto (63 pipe.c) show
48 mp_a_x mul 300 moveto (90 print_mode.c) show
0 288 moveto (29 swtch.S) show
48 mp_a_x mul 288 moveto (91 date.c) show
0 276 moveto (30 kalloc.c) show
24 mp_a_x mul 276 moveto (# string operations) show
48 mp_a_x mul 276 moveto (92 time.c) show
24 mp_a_x mul 264 moveto (65 string.c) show
48 mp_a_x mul 264 moveto (92 ps.c) show
0 252 moveto (# system calls) show
48 mp_a_x mul 252 moveto (93 queue.h) show
0 240 moveto (31 traps.h) show
0 204 moveto (The source listing is preceded by a cross-reference that lists every defined ) show
0 192 moveto (constant, struct, global variable, and function in xv6.  Each entry gives,) show
0 180 moveto (on the same line as the name, the line number \(or, in a few cases, numbers\)) show
0 168 moveto (where the name is defined.  Successive lines in an entry list the line) show
0 156 moveto (numbers where the name is used.  For example, this entry:) show
4 mp_a_x mul 132 moveto (swtch 2658) show
8 mp_a_x mul 120 moveto (0374 2428 2466 2657 2658) show
0 96 moveto (indicates that swtch is defined on line 2658 and is mentioned on five lines) show
0 84 moveto (on sheets 03, 24, and 26.) show
grestore
restore
showpage
%%Page: 2 2
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 1) show
0 648 moveto (acquire 1474) show
40 mp_a_x mul 648 moveto (3959 4389 4521 4522 4535) show
4 mp_a_x mul 636 moveto (0426 1474 1478 2210 2218) show
40 mp_a_x mul 636 moveto (4538 4567 4578 4590) show
4 mp_a_x mul 624 moveto (2257 2277 2309 2355 2380) show
36 mp_a_x mul 624 moveto (B_DIRTY 3961) show
4 mp_a_x mul 612 moveto (2425 2458 2520 2532 2573) show
40 mp_a_x mul 612 moveto (3961 4343 4366 4371 4391) show
4 mp_a_x mul 600 moveto (2587 2622 2642 2689 2703) show
40 mp_a_x mul 600 moveto (4411 4535 4569 4839) show
4 mp_a_x mul 588 moveto (2726 2739 2777 2817 2833) show
36 mp_a_x mul 588 moveto (begin_op 4728) show
4 mp_a_x mul 576 moveto (3075 3092 3300 3772 3792) show
40 mp_a_x mul 576 moveto (0385 2420 4728 5633 5707) show
4 mp_a_x mul 564 moveto (4357 4396 4515 4581 4730) show
40 mp_a_x mul 564 moveto (5871 5938 6040 6085 6108) show
4 mp_a_x mul 552 moveto (4757 4774 4831 5079 5115) show
40 mp_a_x mul 552 moveto (6127 6220) show
4 mp_a_x mul 540 moveto (5132 5161 5177 5187 5579) show
36 mp_a_x mul 540 moveto (bfree 4929) show
4 mp_a_x mul 528 moveto (5604 5618 6413 6433 6455) show
40 mp_a_x mul 528 moveto (4929 5264 5274 5277) show
4 mp_a_x mul 516 moveto (7660 7794 7840 7876) show
36 mp_a_x mul 516 moveto (bget 4511) show
0 504 moveto (allocproc 2205) show
40 mp_a_x mul 504 moveto (4511 4543 4556) show
4 mp_a_x mul 492 moveto (2205 2285 2344) show
36 mp_a_x mul 492 moveto (binit 4489) show
0 480 moveto (allocuvm 1853) show
40 mp_a_x mul 480 moveto (0312 1281 4489) show
4 mp_a_x mul 468 moveto (0470 1853 1867 2323 6246) show
36 mp_a_x mul 468 moveto (bmap 5218) show
4 mp_a_x mul 456 moveto (6258) show
40 mp_a_x mul 456 moveto (5022 5218 5244 5319 5346) show
0 444 moveto (alltraps 3204) show
36 mp_a_x mul 444 moveto (bootmain 8967) show
4 mp_a_x mul 432 moveto (3159 3167 3180 3185 3203) show
40 mp_a_x mul 432 moveto (8913 8967) show
4 mp_a_x mul 420 moveto (3204) show
36 mp_a_x mul 420 moveto (BPB 4157) show
0 408 moveto (ALT 7410) show
40 mp_a_x mul 408 moveto (4157 4160 4910 4912 4936) show
4 mp_a_x mul 396 moveto (7410 7438 7440) show
36 mp_a_x mul 396 moveto (bread 4552) show
0 384 moveto (argfd 5769) show
40 mp_a_x mul 384 moveto (0313 4552 4677 4678 4690) show
4 mp_a_x mul 372 moveto (5769 5806 5821 5833 5844) show
40 mp_a_x mul 372 moveto (4706 4788 4789 4882 4893) show
4 mp_a_x mul 360 moveto (5856) show
40 mp_a_x mul 360 moveto (4911 4935 5038 5059 5139) show
0 348 moveto (argint 3495) show
40 mp_a_x mul 348 moveto (5234 5270 5319 5346) show
4 mp_a_x mul 336 moveto (0444 2827 3495 3508 3524) show
36 mp_a_x mul 336 moveto (brelse 4576) show
4 mp_a_x mul 324 moveto (3733 3756 3770 3855 3870) show
40 mp_a_x mul 324 moveto (0314 4576 4579 4681 4682) show
4 mp_a_x mul 312 moveto (3886 3888 5774 5821 5833) show
40 mp_a_x mul 312 moveto (4697 4714 4792 4793 4884) show
4 mp_a_x mul 300 moveto (6037 6110 6111 6157) show
40 mp_a_x mul 300 moveto (4896 4917 4922 4942 5044) show
0 288 moveto (argptr 3504) show
40 mp_a_x mul 288 moveto (5047 5068 5147 5240 5276) show
4 mp_a_x mul 276 moveto (0445 2830 3504 3811 5821) show
40 mp_a_x mul 276 moveto (5322 5350) show
4 mp_a_x mul 264 moveto (5833 5856 6183) show
36 mp_a_x mul 264 moveto (BSIZE 4105) show
0 252 moveto (argstr 3521) show
40 mp_a_x mul 252 moveto (3957 4105 4123 4151 4157) show
4 mp_a_x mul 240 moveto (0446 3521 5868 5935 6037) show
40 mp_a_x mul 240 moveto (4331 4345 4367 4658 4679) show
4 mp_a_x mul 228 moveto (6086 6109 6128 6157) show
40 mp_a_x mul 228 moveto (4790 4894 5319 5320 5321) show
0 216 moveto (__attribute__ 1360) show
40 mp_a_x mul 216 moveto (5342 5346 5347 5348) show
4 mp_a_x mul 204 moveto (0321 0414 1259 1360) show
36 mp_a_x mul 204 moveto (buf 3950) show
0 192 moveto (BACK 8212) show
40 mp_a_x mul 192 moveto (0300 0313 0314 0315 0357) show
4 mp_a_x mul 180 moveto (8212 8327 8583 8839) show
40 mp_a_x mul 180 moveto (0384 2006 2009 2018 2020) show
0 168 moveto (backcmd 8250 8577) show
40 mp_a_x mul 168 moveto (3950 3954 3955 3956 4262) show
4 mp_a_x mul 156 moveto (8250 8264 8328 8577 8579) show
40 mp_a_x mul 156 moveto (4278 4281 4325 4354 4385) show
4 mp_a_x mul 144 moveto (8692 8805 8840) show
40 mp_a_x mul 144 moveto (4387 4390 4477 4481 4485) show
0 132 moveto (BACKSPACE 7723) show
40 mp_a_x mul 132 moveto (4491 4498 4510 4513 4551) show
4 mp_a_x mul 120 moveto (7723 7740 7772 7804 7810) show
40 mp_a_x mul 120 moveto (4554 4565 4576 4605 4677) show
0 108 moveto (balloc 4904) show
40 mp_a_x mul 108 moveto (4678 4690 4691 4697 4706) show
4 mp_a_x mul 96 moveto (4904 4924 5225 5233 5237) show
40 mp_a_x mul 96 moveto (4707 4713 4714 4788 4789) show
0 84 moveto (BBLOCK 4160) show
40 mp_a_x mul 84 moveto (4822 4869 4880 4891 4907) show
4 mp_a_x mul 72 moveto (4160 4911 4935) show
40 mp_a_x mul 72 moveto (4931 5034 5056 5126 5221) show
0 60 moveto (B_BUSY 3959) show
40 mp_a_x mul 60 moveto (5259 5305 5332 7629 7640) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 2) show
4 mp_a_x mul 648 moveto (7644 7647 7781 7802 7816) show
36 mp_a_x mul 648 moveto (CMOS_PORT 7085) show
4 mp_a_x mul 636 moveto (7850 7871 7878 8337 8340) show
40 mp_a_x mul 636 moveto (7085 7099 7100 7138) show
4 mp_a_x mul 624 moveto (8341 8342 8456 8468 8470) show
36 mp_a_x mul 624 moveto (CMOS_RETURN 7086) show
4 mp_a_x mul 612 moveto (8473 8474 8475 8479 8480) show
40 mp_a_x mul 612 moveto (7086 7141) show
4 mp_a_x mul 600 moveto (8485) show
36 mp_a_x mul 600 moveto (CMOS_STATA 7125) show
0 588 moveto (B_VALID 3960) show
40 mp_a_x mul 588 moveto (7125 7173) show
4 mp_a_x mul 576 moveto (3960 4370 4391 4411 4557) show
36 mp_a_x mul 576 moveto (CMOS_STATB 7126) show
0 564 moveto (bwrite 4565) show
40 mp_a_x mul 564 moveto (7126 7166) show
4 mp_a_x mul 552 moveto (0315 4565 4568 4680 4713) show
36 mp_a_x mul 552 moveto (CMOS_UIP 7127) show
4 mp_a_x mul 540 moveto (4791) show
40 mp_a_x mul 540 moveto (7127 7173) show
0 528 moveto (bzero 4889) show
36 mp_a_x mul 528 moveto (COM1 7963) show
4 mp_a_x mul 516 moveto (4889 4918) show
40 mp_a_x mul 516 moveto (7963 7973 7976 7977 7978) show
0 504 moveto (C 7431 7787) show
40 mp_a_x mul 504 moveto (7979 7980 7981 7984 7990) show
4 mp_a_x mul 492 moveto (7431 7479 7504 7505 7506) show
40 mp_a_x mul 492 moveto (7991 8007 8009 8017 8019) show
4 mp_a_x mul 480 moveto (7507 7508 7510 7787 7797) show
36 mp_a_x mul 480 moveto (commit 4801) show
4 mp_a_x mul 468 moveto (7800 7807 7818 7851) show
40 mp_a_x mul 468 moveto (4653 4773 4801) show
0 456 moveto (CAPSLOCK 7412) show
36 mp_a_x mul 456 moveto (CONSOLE 4237) show
4 mp_a_x mul 444 moveto (7412 7445 7586) show
40 mp_a_x mul 444 moveto (4237 7890 7891) show
0 432 moveto (cgaputc 7728) show
36 mp_a_x mul 432 moveto (consoleinit 7886) show
4 mp_a_x mul 420 moveto (7728 7776) show
40 mp_a_x mul 420 moveto (0318 1277 7886) show
0 408 moveto (clearpteu 1929) show
36 mp_a_x mul 408 moveto (consoleintr 7790) show
4 mp_a_x mul 396 moveto (0479 1929 1935 6260) show
40 mp_a_x mul 396 moveto (0320 7598 7790 8025) show
0 384 moveto (cli 0607) show
36 mp_a_x mul 384 moveto (consoleread 7833) show
4 mp_a_x mul 372 moveto (0607 0609 1176 1560 7710) show
40 mp_a_x mul 372 moveto (7833 7891) show
4 mp_a_x mul 360 moveto (7767 8862) show
36 mp_a_x mul 360 moveto (consolewrite 7871) show
0 348 moveto (cmd 8216) show
40 mp_a_x mul 348 moveto (7871 7890) show
4 mp_a_x mul 336 moveto (8216 8228 8237 8238 8243) show
36 mp_a_x mul 336 moveto (consputc 7764) show
4 mp_a_x mul 324 moveto (8244 8252 8257 8261 8270) show
40 mp_a_x mul 324 moveto (7616 7647 7668 7686 7689) show
4 mp_a_x mul 312 moveto (8273 8278 8286 8292 8296) show
40 mp_a_x mul 312 moveto (7693 7694 7764 7804 7810) show
4 mp_a_x mul 300 moveto (8304 8328 8330 8419 8431) show
40 mp_a_x mul 300 moveto (7817 7878) show
4 mp_a_x mul 288 moveto (8435 8436 8513 8516 8518) show
36 mp_a_x mul 288 moveto (context 2097) show
4 mp_a_x mul 276 moveto (8519 8520 8521 8524 8525) show
40 mp_a_x mul 276 moveto (0301 0423 2061 2097 2116) show
4 mp_a_x mul 264 moveto (8527 8529 8530 8531 8532) show
40 mp_a_x mul 264 moveto (2250 2251 2252 2253 2537) show
4 mp_a_x mul 252 moveto (8533 8534 8535 8536 8537) show
40 mp_a_x mul 252 moveto (2592 2634 2794) show
4 mp_a_x mul 240 moveto (8550 8551 8553 8555 8556) show
36 mp_a_x mul 240 moveto (CONV 7182) show
4 mp_a_x mul 228 moveto (8557 8558 8559 8560 8563) show
40 mp_a_x mul 228 moveto (7182 7183 7184 7185 7186) show
4 mp_a_x mul 216 moveto (8564 8566 8568 8569 8570) show
40 mp_a_x mul 216 moveto (7187 7188 7189) show
4 mp_a_x mul 204 moveto (8571 8572 8573 8576 8577) show
36 mp_a_x mul 204 moveto (copyout 2004) show
4 mp_a_x mul 192 moveto (8579 8581 8582 8583 8584) show
40 mp_a_x mul 192 moveto (0478 2004 6268 6279) show
4 mp_a_x mul 180 moveto (8585 8662 8663 8664 8665) show
36 mp_a_x mul 180 moveto (copyuvm 1953) show
4 mp_a_x mul 168 moveto (8667 8671 8674 8680 8681) show
40 mp_a_x mul 168 moveto (0475 1953 1964 1966 2351) show
4 mp_a_x mul 156 moveto (8684 8687 8689 8692 8696) show
36 mp_a_x mul 156 moveto (cprintf 7652) show
4 mp_a_x mul 144 moveto (8698 8700 8703 8705 8708) show
40 mp_a_x mul 144 moveto (0319 1274 1314 1867 2630) show
4 mp_a_x mul 132 moveto (8710 8713 8714 8725 8728) show
40 mp_a_x mul 132 moveto (2788 2796 2798 3324 3332) show
4 mp_a_x mul 120 moveto (8731 8735 8750 8753 8758) show
40 mp_a_x mul 120 moveto (3337 3651 3655 3802 5022) show
4 mp_a_x mul 108 moveto (8762 8763 8766 8771 8772) show
40 mp_a_x mul 108 moveto (6869 6889 7061 7262 7652) show
4 mp_a_x mul 96 moveto (8778 8787 8788 8794 8795) show
40 mp_a_x mul 96 moveto (7712 7713 7714 7717) show
4 mp_a_x mul 84 moveto (8801 8802 8811 8814 8816) show
36 mp_a_x mul 84 moveto (cpu 2059) show
4 mp_a_x mul 72 moveto (8822 8823 8828 8834 8840) show
40 mp_a_x mul 72 moveto (0360 1274 1314 1316 1328) show
4 mp_a_x mul 60 moveto (8841 8844) show
40 mp_a_x mul 60 moveto (1406 1466 1487 1508 1546) show
grestore
restore
showpage
%%Page: 3 3
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 3) show
4 mp_a_x mul 648 moveto (1561 1562 1570 1572 1618) show
40 mp_a_x mul 648 moveto (5459 5511 5865 5932 5989) show
4 mp_a_x mul 636 moveto (1631 1637 1776 1777 1778) show
36 mp_a_x mul 636 moveto (dobuiltin 8431) show
4 mp_a_x mul 624 moveto (1779 2059 2069 2073 2084) show
40 mp_a_x mul 624 moveto (8431 8480) show
4 mp_a_x mul 612 moveto (2537 2592 2614 2620 2634) show
36 mp_a_x mul 612 moveto (DPL_USER 0829) show
4 mp_a_x mul 600 moveto (2635 3299 3324 3325 3332) show
40 mp_a_x mul 600 moveto (0829 1627 1628 2292 2293) show
4 mp_a_x mul 588 moveto (3333 3337 3339 6763 6764) show
40 mp_a_x mul 588 moveto (3273 3347 3356) show
4 mp_a_x mul 576 moveto (7061 7712) show
36 mp_a_x mul 576 moveto (E0ESC 7416) show
0 564 moveto (cpunum 7051) show
40 mp_a_x mul 564 moveto (7416 7570 7574 7575 7577) show
4 mp_a_x mul 552 moveto (0375 1338 1624 7051 7273) show
40 mp_a_x mul 552 moveto (7580) show
4 mp_a_x mul 540 moveto (7282) show
36 mp_a_x mul 540 moveto (elfhdr 1005) show
0 528 moveto (CR0_PE 0777) show
40 mp_a_x mul 528 moveto (1005 6215 8969 8974) show
4 mp_a_x mul 516 moveto (0777 1185 1209 8893) show
36 mp_a_x mul 516 moveto (ELF_MAGIC 1002) show
0 504 moveto (CR0_PG 0787) show
40 mp_a_x mul 504 moveto (1002 6231 8980) show
4 mp_a_x mul 492 moveto (0787 1100 1209) show
36 mp_a_x mul 492 moveto (ELF_PROG_LOAD 1036) show
0 480 moveto (CR0_WP 0783) show
40 mp_a_x mul 480 moveto (1036 6242) show
4 mp_a_x mul 468 moveto (0783 1100 1209) show
36 mp_a_x mul 468 moveto (end_op 4753) show
0 456 moveto (CR4_PSE 0789) show
40 mp_a_x mul 456 moveto (0386 2422 4753 5635 5712) show
4 mp_a_x mul 444 moveto (0789 1093 1202) show
40 mp_a_x mul 444 moveto (5873 5880 5898 5907 5940) show
0 432 moveto (create 5985) show
40 mp_a_x mul 432 moveto (5974 5980 6045 6050 6056) show
4 mp_a_x mul 420 moveto (5985 6005 6018 6022 6043) show
40 mp_a_x mul 420 moveto (6065 6069 6087 6091 6113) show
4 mp_a_x mul 408 moveto (6086 6112) show
40 mp_a_x mul 408 moveto (6117 6129 6135 6140 6222) show
0 396 moveto (CRTPORT 7724) show
40 mp_a_x mul 396 moveto (6252 6305) show
4 mp_a_x mul 384 moveto (7724 7733 7734 7735 7736) show
36 mp_a_x mul 384 moveto (enqueue 2873) show
4 mp_a_x mul 372 moveto (7756 7757 7758 7759) show
40 mp_a_x mul 372 moveto (2180 2235 2280 2310 2356) show
0 360 moveto (CTL 7409) show
40 mp_a_x mul 360 moveto (2382 2477 2644 2717 2746) show
4 mp_a_x mul 348 moveto (7409 7435 7439 7585) show
40 mp_a_x mul 348 moveto (2873 2943) show
0 336 moveto (DAY 7132) show
36 mp_a_x mul 336 moveto (entry 1090) show
4 mp_a_x mul 324 moveto (7132 7155) show
40 mp_a_x mul 324 moveto (1011 1086 1089 1090 3152) show
0 312 moveto (deallocuvm 1882) show
40 mp_a_x mul 312 moveto (3153 6292 6671 8971 8995) show
4 mp_a_x mul 300 moveto (0471 1868 1882 1916 2326) show
40 mp_a_x mul 300 moveto (8996) show
0 288 moveto (dequeue 2902) show
36 mp_a_x mul 288 moveto (EOI 6966) show
4 mp_a_x mul 276 moveto (2181 2220 2574 2902 2938) show
40 mp_a_x mul 276 moveto (6966 7036 7075) show
0 264 moveto (DEVSPACE 0204) show
36 mp_a_x mul 264 moveto (ERROR 6987) show
4 mp_a_x mul 252 moveto (0204 1732 1745) show
40 mp_a_x mul 252 moveto (6987 7029) show
0 240 moveto (devsw 4230) show
36 mp_a_x mul 240 moveto (ESR 6969) show
4 mp_a_x mul 228 moveto (4230 4235 5308 5310 5335) show
40 mp_a_x mul 228 moveto (6969 7032 7033) show
4 mp_a_x mul 216 moveto (5337 5561 7890 7891) show
36 mp_a_x mul 216 moveto (exec 6210) show
0 204 moveto (dinode 4127) show
40 mp_a_x mul 204 moveto (0324 6173 6210 8118 8179) show
4 mp_a_x mul 192 moveto (4127 4151 5035 5039 5057) show
40 mp_a_x mul 192 moveto (8180 8281 8282 9219) show
4 mp_a_x mul 180 moveto (5060 5127 5140) show
36 mp_a_x mul 180 moveto (EXEC 8208) show
0 168 moveto (dirent 4165) show
40 mp_a_x mul 168 moveto (8208 8277 8520 8815) show
4 mp_a_x mul 156 moveto (4165 5374 5405 5916 5931) show
36 mp_a_x mul 156 moveto (execcmd 8220 8514) show
0 144 moveto (dirlink 5402) show
40 mp_a_x mul 144 moveto (8220 8265 8278 8514 8516) show
4 mp_a_x mul 132 moveto (0337 5381 5402 5417 5425) show
40 mp_a_x mul 132 moveto (8771 8777 8778 8806 8816) show
4 mp_a_x mul 120 moveto (5891 6017 6021 6022) show
36 mp_a_x mul 120 moveto (exit 2404) show
0 108 moveto (dirlookup 5371) show
40 mp_a_x mul 108 moveto (0408 2404 2441 3289 3293) show
4 mp_a_x mul 96 moveto (0338 5371 5377 5409 5494) show
40 mp_a_x mul 96 moveto (3348 3357 3718 8066 8069) show
4 mp_a_x mul 84 moveto (5950 5995) show
40 mp_a_x mul 84 moveto (8111 8176 8181 8271 8280) show
0 72 moveto (DIRSIZ 4163) show
40 mp_a_x mul 72 moveto (8290 8333 8488 8495 9167) show
4 mp_a_x mul 60 moveto (4163 4167 5365 5422 5458) show
40 mp_a_x mul 60 moveto (9172 9221 9231 9280 9296) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 4) show
0 648 moveto (EXTMEM 0202) show
40 mp_a_x mul 648 moveto (0162 4329) show
4 mp_a_x mul 636 moveto (0202 0208 1729) show
36 mp_a_x mul 636 moveto (gatedesc 0951) show
0 624 moveto (fdalloc 5788) show
40 mp_a_x mul 624 moveto (0573 0576 0951 3261) show
4 mp_a_x mul 612 moveto (5788 5808 6061 6188) show
36 mp_a_x mul 612 moveto (getbuiltin 8401) show
0 600 moveto (fetchint 3467) show
40 mp_a_x mul 600 moveto (8401 8426) show
4 mp_a_x mul 588 moveto (0447 3467 3497 6164) show
36 mp_a_x mul 588 moveto (getcallerpcs 1526) show
0 576 moveto (fetchstr 3479) show
40 mp_a_x mul 576 moveto (0427 1488 1526 2794 7715) show
4 mp_a_x mul 564 moveto (0448 3479 3526 6170) show
36 mp_a_x mul 564 moveto (getcmd 8337) show
0 552 moveto (file 4200) show
40 mp_a_x mul 552 moveto (8337 8468) show
4 mp_a_x mul 540 moveto (0302 0327 0328 0329 0331) show
36 mp_a_x mul 540 moveto (gettoken 8606) show
4 mp_a_x mul 528 moveto (0332 0333 0401 2119 4200) show
40 mp_a_x mul 528 moveto (8606 8691 8695 8707 8720) show
4 mp_a_x mul 516 moveto (4870 5558 5564 5574 5577) show
40 mp_a_x mul 516 moveto (8721 8757 8761 8783) show
4 mp_a_x mul 504 moveto (5580 5601 5602 5614 5616) show
36 mp_a_x mul 504 moveto (growproc 2317) show
4 mp_a_x mul 492 moveto (5652 5665 5685 5763 5769) show
40 mp_a_x mul 492 moveto (0410 2317 3759) show
4 mp_a_x mul 480 moveto (5772 5788 5803 5817 5829) show
36 mp_a_x mul 480 moveto (havedisk1 4280) show
4 mp_a_x mul 468 moveto (5842 5853 6034 6180 6356) show
40 mp_a_x mul 468 moveto (4280 4314 4393) show
4 mp_a_x mul 456 moveto (6371 7610 7958 8229 8288) show
36 mp_a_x mul 456 moveto (holding 1544) show
4 mp_a_x mul 444 moveto (8289 8525 8533 8722) show
40 mp_a_x mul 444 moveto (0428 1477 1504 1544 2612) show
0 432 moveto (filealloc 5575) show
36 mp_a_x mul 432 moveto (HOURS 7131) show
4 mp_a_x mul 420 moveto (0327 5575 6061 6377) show
40 mp_a_x mul 420 moveto (7131 7154) show
0 408 moveto (fileclose 5614) show
36 mp_a_x mul 408 moveto (ialloc 5031) show
4 mp_a_x mul 396 moveto (0328 2415 5614 5620 5847) show
40 mp_a_x mul 396 moveto (0339 5031 5049 6004 6005) show
4 mp_a_x mul 384 moveto (6063 6191 6192 6404 6406) show
36 mp_a_x mul 384 moveto (IBLOCK 4154) show
0 372 moveto (filedup 5602) show
40 mp_a_x mul 372 moveto (4154 5038 5059 5139) show
4 mp_a_x mul 360 moveto (0329 2369 5602 5606 5810) show
36 mp_a_x mul 360 moveto (I_BUSY 4225) show
0 348 moveto (fileinit 5568) show
40 mp_a_x mul 348 moveto (4225 5133 5135 5158 5162) show
4 mp_a_x mul 336 moveto (0330 1282 5568) show
40 mp_a_x mul 336 moveto (5180 5182) show
0 324 moveto (fileread 5665) show
36 mp_a_x mul 324 moveto (ICRHI 6980) show
4 mp_a_x mul 312 moveto (0331 5665 5680 5823) show
40 mp_a_x mul 312 moveto (6980 7039 7107 7119) show
0 300 moveto (filestat 5652) show
36 mp_a_x mul 300 moveto (ICRLO 6970) show
4 mp_a_x mul 288 moveto (0332 5652 5858) show
40 mp_a_x mul 288 moveto (6970 7040 7041 7108 7110) show
0 276 moveto (filewrite 5685) show
40 mp_a_x mul 276 moveto (7120) show
4 mp_a_x mul 264 moveto (0333 5685 5717 5722 5835) show
36 mp_a_x mul 264 moveto (ID 6963) show
0 252 moveto (FL_IF 0760) show
40 mp_a_x mul 252 moveto (6963 6999 7066) show
4 mp_a_x mul 240 moveto (0760 1562 1568 2296 2618) show
36 mp_a_x mul 240 moveto (IDE_BSY 4265) show
4 mp_a_x mul 228 moveto (7058) show
40 mp_a_x mul 228 moveto (4265 4289) show
0 216 moveto (fork 2338) show
36 mp_a_x mul 216 moveto (IDE_CMD_READ 4270) show
4 mp_a_x mul 204 moveto (0409 2338 3712 8110 8173) show
40 mp_a_x mul 204 moveto (4270 4347) show
4 mp_a_x mul 192 moveto (8175 8505 8507 9215) show
36 mp_a_x mul 192 moveto (IDE_CMD_WRITE 4271) show
0 180 moveto (fork1 8501) show
40 mp_a_x mul 180 moveto (4271 4344) show
4 mp_a_x mul 168 moveto (8255 8297 8307 8314 8329) show
36 mp_a_x mul 168 moveto (IDE_DF 4267) show
4 mp_a_x mul 156 moveto (8484 8501) show
40 mp_a_x mul 156 moveto (4267 4291) show
0 144 moveto (forkret 2653) show
36 mp_a_x mul 144 moveto (IDE_DRDY 4266) show
4 mp_a_x mul 132 moveto (2174 2253 2653) show
40 mp_a_x mul 132 moveto (4266 4289) show
0 120 moveto (freerange 3051) show
36 mp_a_x mul 120 moveto (IDE_ERR 4268) show
4 mp_a_x mul 108 moveto (3011 3034 3040 3051) show
40 mp_a_x mul 108 moveto (4268 4291) show
0 96 moveto (freevm 1910) show
36 mp_a_x mul 96 moveto (ideinit 4301) show
4 mp_a_x mul 84 moveto (0472 1910 1915 1978 2471) show
40 mp_a_x mul 84 moveto (0355 1283 4301) show
4 mp_a_x mul 72 moveto (6295 6302) show
36 mp_a_x mul 72 moveto (ideintr 4352) show
0 60 moveto (FSSIZE 0162) show
40 mp_a_x mul 60 moveto (0356 3308 4352) show
grestore
restore
showpage
%%Page: 4 4
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 5) show
0 648 moveto (idelock 4277) show
40 mp_a_x mul 648 moveto (4231 4232 4873 5014 5026) show
4 mp_a_x mul 636 moveto (4277 4305 4357 4359 4378) show
40 mp_a_x mul 636 moveto (5030 5054 5074 5077 5083) show
4 mp_a_x mul 624 moveto (4396 4412 4415) show
40 mp_a_x mul 624 moveto (5112 5113 5124 5156 5175) show
0 612 moveto (iderw 4385) show
40 mp_a_x mul 612 moveto (5202 5218 5256 5287 5302) show
4 mp_a_x mul 600 moveto (0357 4385 4390 4392 4394) show
40 mp_a_x mul 600 moveto (5329 5370 5371 5402 5406) show
4 mp_a_x mul 588 moveto (4558 4570) show
40 mp_a_x mul 588 moveto (5473 5476 5508 5515 5866) show
0 576 moveto (idestart 4325) show
40 mp_a_x mul 576 moveto (5913 5930 5984 5988 6035) show
4 mp_a_x mul 564 moveto (4281 4325 4328 4334 4376) show
40 mp_a_x mul 564 moveto (6083 6103 6125 6216 7833) show
4 mp_a_x mul 552 moveto (4408) show
40 mp_a_x mul 552 moveto (7871) show
0 540 moveto (idewait 4285) show
36 mp_a_x mul 540 moveto (INPUT_BUF 7779) show
4 mp_a_x mul 528 moveto (4285 4308 4336 4366) show
40 mp_a_x mul 528 moveto (7779 7781 7802 7814 7816) show
0 516 moveto (idtinit 3279) show
40 mp_a_x mul 516 moveto (7818 7850) show
4 mp_a_x mul 504 moveto (0454 1315 3279) show
36 mp_a_x mul 504 moveto (insl 0512) show
0 492 moveto (idup 5113) show
40 mp_a_x mul 492 moveto (0512 0514 4367 9023) show
4 mp_a_x mul 480 moveto (0340 2370 5113 5481) show
36 mp_a_x mul 480 moveto (install_trans 4672) show
0 468 moveto (iget 5075) show
40 mp_a_x mul 468 moveto (4672 4721 4806) show
4 mp_a_x mul 456 moveto (5026 5045 5075 5095 5389) show
36 mp_a_x mul 456 moveto (INT_DISABLED 7219) show
4 mp_a_x mul 444 moveto (5479) show
40 mp_a_x mul 444 moveto (7219 7267) show
0 432 moveto (iinit 5018) show
36 mp_a_x mul 432 moveto (ioapic 7227) show
4 mp_a_x mul 420 moveto (0341 2664 5018) show
40 mp_a_x mul 420 moveto (6857 6879 6880 7224 7227) show
0 408 moveto (ilock 5124) show
40 mp_a_x mul 408 moveto (7236 7237 7243 7244 7258) show
4 mp_a_x mul 396 moveto (0342 5124 5130 5150 5484) show
36 mp_a_x mul 396 moveto (IOAPIC 7208) show
4 mp_a_x mul 384 moveto (5655 5674 5708 5877 5890) show
40 mp_a_x mul 384 moveto (7208 7258) show
4 mp_a_x mul 372 moveto (5903 5944 5952 5993 5997) show
36 mp_a_x mul 372 moveto (ioapicenable 7273) show
4 mp_a_x mul 360 moveto (6007 6053 6132 6225 7845) show
40 mp_a_x mul 360 moveto (0360 4307 7273 7895 7993) show
4 mp_a_x mul 348 moveto (7865 7880) show
36 mp_a_x mul 348 moveto (ioapicid 6767) show
0 336 moveto (inb 0503) show
40 mp_a_x mul 336 moveto (0361 6767 6880 6897 7261) show
4 mp_a_x mul 324 moveto (0503 4289 4313 6904 7141) show
40 mp_a_x mul 324 moveto (7262) show
4 mp_a_x mul 312 moveto (7564 7567 7734 7736 7984) show
36 mp_a_x mul 312 moveto (ioapicinit 7251) show
4 mp_a_x mul 300 moveto (7990 7991 8007 8017 8019) show
40 mp_a_x mul 300 moveto (0362 1276 7251 7262) show
4 mp_a_x mul 288 moveto (8873 8881 9004) show
36 mp_a_x mul 288 moveto (ioapicread 7234) show
0 276 moveto (INITBUDGET 2056) show
40 mp_a_x mul 276 moveto (7234 7259 7260) show
4 mp_a_x mul 264 moveto (2056 2307 2926 2941) show
36 mp_a_x mul 264 moveto (ioapicwrite 7241) show
0 252 moveto (INITGID 2053) show
40 mp_a_x mul 252 moveto (7241 7267 7268 7281 7282) show
4 mp_a_x mul 240 moveto (2053 2306) show
36 mp_a_x mul 240 moveto (IO_PIC1 7307) show
0 228 moveto (initlock 1462) show
40 mp_a_x mul 228 moveto (7307 7320 7335 7344 7347) show
4 mp_a_x mul 216 moveto (0429 1462 2190 3032 3275) show
40 mp_a_x mul 216 moveto (7352 7362 7376 7377) show
4 mp_a_x mul 204 moveto (4305 4493 4662 5020 5570) show
36 mp_a_x mul 204 moveto (IO_PIC2 7308) show
4 mp_a_x mul 192 moveto (6385 7888) show
40 mp_a_x mul 192 moveto (7308 7321 7336 7365 7366) show
0 180 moveto (initlog 4656) show
40 mp_a_x mul 180 moveto (7367 7370 7379 7380) show
4 mp_a_x mul 168 moveto (0383 2665 4656 4659) show
36 mp_a_x mul 168 moveto (IO_TIMER1 7909) show
0 156 moveto (INITUID 2052) show
40 mp_a_x mul 156 moveto (7909 7918 7928 7929) show
4 mp_a_x mul 144 moveto (2052 2305) show
36 mp_a_x mul 144 moveto (IPB 4151) show
0 132 moveto (inituvm 1803) show
40 mp_a_x mul 132 moveto (4151 4154 5039 5060 5140) show
4 mp_a_x mul 120 moveto (0473 1803 1808 2289) show
36 mp_a_x mul 120 moveto (iput 5175) show
0 108 moveto (inode 4212) show
40 mp_a_x mul 108 moveto (0343 2421 5175 5181 5205) show
4 mp_a_x mul 96 moveto (0303 0337 0338 0339 0340) show
40 mp_a_x mul 96 moveto (5410 5502 5634 5896 6139) show
4 mp_a_x mul 84 moveto (0342 0343 0344 0345 0346) show
36 mp_a_x mul 84 moveto (IRQ_COM1 3133) show
4 mp_a_x mul 72 moveto (0348 0349 0350 0351 0352) show
40 mp_a_x mul 72 moveto (3133 3318 7992 7993) show
4 mp_a_x mul 60 moveto (0474 1818 2120 4206 4212) show
36 mp_a_x mul 60 moveto (IRQ_ERROR 3135) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 6) show
4 mp_a_x mul 648 moveto (3135 7029) show
40 mp_a_x mul 648 moveto (1729 1858 1916) show
0 636 moveto (IRQ_IDE 3134) show
36 mp_a_x mul 636 moveto (KERNLINK 0208) show
4 mp_a_x mul 624 moveto (3134 3307 3311 4306 4307) show
40 mp_a_x mul 624 moveto (0208 1730) show
0 612 moveto (IRQ_KBD 3132) show
36 mp_a_x mul 612 moveto (KEY_DEL 7428) show
4 mp_a_x mul 600 moveto (3132 3314 7894 7895) show
40 mp_a_x mul 600 moveto (7428 7469 7491 7515) show
0 588 moveto (IRQ_SLAVE 7310) show
36 mp_a_x mul 588 moveto (KEY_DN 7422) show
4 mp_a_x mul 576 moveto (7310 7314 7352 7367) show
40 mp_a_x mul 576 moveto (7422 7465 7487 7511) show
0 564 moveto (IRQ_SPURIOUS 3136) show
36 mp_a_x mul 564 moveto (KEY_END 7420) show
4 mp_a_x mul 552 moveto (3136 3323 7009) show
40 mp_a_x mul 552 moveto (7420 7468 7490 7514) show
0 540 moveto (IRQ_TIMER 3131) show
36 mp_a_x mul 540 moveto (KEY_HOME 7419) show
4 mp_a_x mul 528 moveto (3131 3298 3352 7016 7930) show
40 mp_a_x mul 528 moveto (7419 7468 7490 7514) show
0 516 moveto (isdirempty 5913) show
36 mp_a_x mul 516 moveto (KEY_INS 7427) show
4 mp_a_x mul 504 moveto (5913 5920 5956) show
40 mp_a_x mul 504 moveto (7427 7469 7491 7515) show
0 492 moveto (ismp 6765) show
36 mp_a_x mul 492 moveto (KEY_LF 7423) show
4 mp_a_x mul 480 moveto (0389 1284 6765 6862 6870) show
40 mp_a_x mul 480 moveto (7423 7467 7489 7513) show
4 mp_a_x mul 468 moveto (6890 6893 7255 7275) show
36 mp_a_x mul 468 moveto (KEY_PGDN 7426) show
0 456 moveto (itrunc 5256) show
40 mp_a_x mul 456 moveto (7426 7466 7488 7512) show
4 mp_a_x mul 444 moveto (4873 5184 5256) show
36 mp_a_x mul 444 moveto (KEY_PGUP 7425) show
0 432 moveto (iunlock 5156) show
40 mp_a_x mul 432 moveto (7425 7466 7488 7512) show
4 mp_a_x mul 420 moveto (0344 5156 5159 5204 5491) show
36 mp_a_x mul 420 moveto (KEY_RT 7424) show
4 mp_a_x mul 408 moveto (5657 5677 5711 5886 6068) show
40 mp_a_x mul 408 moveto (7424 7467 7489 7513) show
4 mp_a_x mul 396 moveto (6138 7838 7875) show
36 mp_a_x mul 396 moveto (KEY_UP 7421) show
0 384 moveto (iunlockput 5202) show
40 mp_a_x mul 384 moveto (7421 7465 7487 7511) show
4 mp_a_x mul 372 moveto (0345 5202 5486 5495 5498) show
36 mp_a_x mul 372 moveto (kfree 3064) show
4 mp_a_x mul 360 moveto (5879 5892 5895 5906 5957) show
40 mp_a_x mul 360 moveto (0366 1898 1900 1920 1923) show
4 mp_a_x mul 348 moveto (5968 5972 5979 5996 6000) show
40 mp_a_x mul 348 moveto (2352 2469 3056 3064 3069) show
4 mp_a_x mul 336 moveto (6024 6055 6064 6090 6116) show
40 mp_a_x mul 336 moveto (6402 6423) show
4 mp_a_x mul 324 moveto (6134 6251 6304) show
36 mp_a_x mul 324 moveto (kill 2735) show
0 312 moveto (iupdate 5054) show
40 mp_a_x mul 312 moveto (0411 2735 3338 3735 8117) show
4 mp_a_x mul 300 moveto (0346 5054 5186 5282 5355) show
36 mp_a_x mul 300 moveto (kinit1 3030) show
4 mp_a_x mul 288 moveto (5885 5905 5966 5971 6011) show
40 mp_a_x mul 288 moveto (0367 1269 3030) show
4 mp_a_x mul 276 moveto (6015) show
36 mp_a_x mul 276 moveto (kinit2 3038) show
0 264 moveto (I_VALID 4226) show
40 mp_a_x mul 264 moveto (0368 1287 3038) show
4 mp_a_x mul 252 moveto (4226 5138 5148 5178) show
36 mp_a_x mul 252 moveto (KSTACKSIZE 0151) show
0 240 moveto (kalloc 3087) show
40 mp_a_x mul 240 moveto (0151 1104 1113 1345 1779) show
4 mp_a_x mul 228 moveto (0365 1344 1663 1742 1809) show
40 mp_a_x mul 228 moveto (2238) show
4 mp_a_x mul 216 moveto (1865 1969 2233 3087 6379) show
36 mp_a_x mul 216 moveto (kvmalloc 1757) show
0 204 moveto (KBDATAP 7404) show
40 mp_a_x mul 204 moveto (0466 1270 1757) show
4 mp_a_x mul 192 moveto (7404 7567) show
36 mp_a_x mul 192 moveto (lapiceoi 7072) show
0 180 moveto (kbdgetc 7556) show
40 mp_a_x mul 180 moveto (0377 3305 3309 3316 3320) show
4 mp_a_x mul 168 moveto (7556 7598) show
40 mp_a_x mul 168 moveto (3326 7072) show
0 156 moveto (kbdintr 7596) show
36 mp_a_x mul 156 moveto (lapicinit 7003) show
4 mp_a_x mul 144 moveto (0371 3315 7596) show
40 mp_a_x mul 144 moveto (0378 1272 1306 7003) show
0 132 moveto (KBS_DIB 7403) show
36 mp_a_x mul 132 moveto (lapicstartap 7091) show
4 mp_a_x mul 120 moveto (7403 7565) show
40 mp_a_x mul 120 moveto (0379 1349 7091) show
0 108 moveto (KBSTATP 7402) show
36 mp_a_x mul 108 moveto (lapicw 6996) show
4 mp_a_x mul 96 moveto (7402 7564) show
40 mp_a_x mul 96 moveto (6996 7009 7015 7016 7017) show
0 84 moveto (KERNBASE 0207) show
40 mp_a_x mul 84 moveto (7020 7021 7026 7029 7032) show
4 mp_a_x mul 72 moveto (0207 0208 0212 0213 0217) show
40 mp_a_x mul 72 moveto (7033 7036 7039 7040 7045) show
4 mp_a_x mul 60 moveto (0218 0220 0221 1365 1533) show
40 mp_a_x mul 60 moveto (7075 7107 7108 7110 7119) show
grestore
restore
showpage
%%Page: 5 5
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 7) show
4 mp_a_x mul 648 moveto (7120) show
36 mp_a_x mul 648 moveto (MAXFILE 4124) show
0 636 moveto (lcr3 0640) show
40 mp_a_x mul 636 moveto (4124 5342) show
4 mp_a_x mul 624 moveto (0640 1768 1783) show
36 mp_a_x mul 624 moveto (MAXOPBLOCKS 0159) show
0 612 moveto (lgdt 0562) show
40 mp_a_x mul 612 moveto (0159 0160 0161 4734) show
4 mp_a_x mul 600 moveto (0562 0570 1183 1633 8891) show
36 mp_a_x mul 600 moveto (memcmp 6515) show
0 588 moveto (lidt 0576) show
40 mp_a_x mul 588 moveto (0435 6515 6795 6838 7176) show
4 mp_a_x mul 576 moveto (0576 0584 3281) show
36 mp_a_x mul 576 moveto (memmove 6531) show
0 564 moveto (LINT0 6985) show
40 mp_a_x mul 564 moveto (0436 1335 1812 1971 2018) show
4 mp_a_x mul 552 moveto (6985 7020) show
40 mp_a_x mul 552 moveto (4679 4790 4883 5066 5146) show
0 540 moveto (LINT1 6986) show
40 mp_a_x mul 540 moveto (5321 5348 5459 5461 6531) show
4 mp_a_x mul 528 moveto (6986 7021) show
40 mp_a_x mul 528 moveto (6554 7751) show
0 516 moveto (LIST 8211) show
36 mp_a_x mul 516 moveto (memset 6504) show
4 mp_a_x mul 504 moveto (8211 8295 8570 8833) show
40 mp_a_x mul 504 moveto (0437 1666 1744 1810 1871) show
0 492 moveto (listcmd 8241 8564) show
40 mp_a_x mul 492 moveto (2252 2291 3072 4894 5041) show
4 mp_a_x mul 480 moveto (8241 8266 8296 8564 8566) show
40 mp_a_x mul 480 moveto (5961 6160 6504 7753 8340) show
4 mp_a_x mul 468 moveto (8696 8807 8834) show
40 mp_a_x mul 468 moveto (8519 8530 8556 8569 8582) show
0 456 moveto (loadgs 0601) show
36 mp_a_x mul 456 moveto (microdelay 7081) show
4 mp_a_x mul 444 moveto (0601 1634) show
40 mp_a_x mul 444 moveto (0380 7081 7109 7111 7121) show
0 432 moveto (loaduvm 1818) show
40 mp_a_x mul 432 moveto (7139 8008) show
4 mp_a_x mul 420 moveto (0474 1818 1824 1827 6248) show
36 mp_a_x mul 420 moveto (min 4872) show
0 408 moveto (log 4637 4650) show
40 mp_a_x mul 408 moveto (4872 5320 5347) show
4 mp_a_x mul 396 moveto (4637 4650 4662 4664 4665) show
36 mp_a_x mul 396 moveto (MINS 7130) show
4 mp_a_x mul 384 moveto (4666 4676 4677 4678 4690) show
40 mp_a_x mul 384 moveto (7130 7153) show
4 mp_a_x mul 372 moveto (4693 4694 4695 4706 4709) show
36 mp_a_x mul 372 moveto (MONTH 7133) show
4 mp_a_x mul 360 moveto (4710 4711 4722 4730 4732) show
40 mp_a_x mul 360 moveto (7133 7156) show
4 mp_a_x mul 348 moveto (4733 4734 4736 4738 4739) show
36 mp_a_x mul 348 moveto (mp 6652) show
4 mp_a_x mul 336 moveto (4757 4758 4759 4760 4761) show
40 mp_a_x mul 336 moveto (6652 6758 6787 6794 6795) show
4 mp_a_x mul 324 moveto (4763 4766 4768 4774 4775) show
40 mp_a_x mul 324 moveto (6796 6805 6810 6814 6815) show
4 mp_a_x mul 312 moveto (4776 4777 4787 4788 4789) show
40 mp_a_x mul 312 moveto (6818 6819 6830 6833 6835) show
4 mp_a_x mul 300 moveto (4803 4807 4826 4828 4831) show
40 mp_a_x mul 300 moveto (6837 6844 6854 6860 6900) show
4 mp_a_x mul 288 moveto (4832 4833 4836 4837 4838) show
36 mp_a_x mul 288 moveto (mpbcpu 6770) show
4 mp_a_x mul 276 moveto (4840) show
40 mp_a_x mul 276 moveto (0390 6770) show
0 264 moveto (logheader 4632) show
36 mp_a_x mul 264 moveto (MPBUS 6702) show
4 mp_a_x mul 252 moveto (4632 4644 4658 4659 4691) show
40 mp_a_x mul 252 moveto (6702 6883) show
4 mp_a_x mul 240 moveto (4707) show
36 mp_a_x mul 240 moveto (mpconf 6663) show
0 228 moveto (LOGSIZE 0160) show
40 mp_a_x mul 228 moveto (6663 6829 6832 6837 6855) show
4 mp_a_x mul 216 moveto (0160 4634 4734 4826 5700) show
36 mp_a_x mul 216 moveto (mpconfig 6830) show
0 204 moveto (log_write 4822) show
40 mp_a_x mul 204 moveto (6830 6860) show
4 mp_a_x mul 192 moveto (0384 4822 4829 4895 4916) show
36 mp_a_x mul 192 moveto (mpenter 1302) show
4 mp_a_x mul 180 moveto (4941 5043 5067 5238 5349) show
40 mp_a_x mul 180 moveto (1302 1346) show
0 168 moveto (ltr 0588) show
36 mp_a_x mul 168 moveto (mpinit 6851) show
4 mp_a_x mul 156 moveto (0588 0590 1780) show
40 mp_a_x mul 156 moveto (0391 1271 6851 6869 6889) show
0 144 moveto (makeint 8364) show
36 mp_a_x mul 144 moveto (mpioapic 6689) show
4 mp_a_x mul 132 moveto (8364 8385 8391) show
40 mp_a_x mul 132 moveto (6689 6857 6879 6881) show
0 120 moveto (mappages 1679) show
36 mp_a_x mul 120 moveto (MPIOAPIC 6703) show
4 mp_a_x mul 108 moveto (1679 1748 1811 1872 1972) show
40 mp_a_x mul 108 moveto (6703 6878) show
0 96 moveto (MAXARG 0158) show
36 mp_a_x mul 96 moveto (MPIOINTR 6704) show
4 mp_a_x mul 84 moveto (0158 6153 6214 6265) show
40 mp_a_x mul 84 moveto (6704 6884) show
0 72 moveto (MAXARGS 8214) show
36 mp_a_x mul 72 moveto (MPLINTR 6705) show
4 mp_a_x mul 60 moveto (8214 8222 8223 8790) show
40 mp_a_x mul 60 moveto (6705 6885) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 8) show
0 648 moveto (mpmain 1312) show
40 mp_a_x mul 648 moveto (7502 7503 7505 7506 7507) show
4 mp_a_x mul 636 moveto (1259 1290 1307 1312) show
40 mp_a_x mul 636 moveto (7508) show
0 624 moveto (mpproc 6678) show
36 mp_a_x mul 624 moveto (NOFILE 0153) show
4 mp_a_x mul 612 moveto (6678 6856 6867 6876) show
40 mp_a_x mul 612 moveto (0153 2119 2367 2413 5776) show
0 600 moveto (MPPROC 6701) show
40 mp_a_x mul 600 moveto (5792) show
4 mp_a_x mul 588 moveto (6701 6866) show
36 mp_a_x mul 588 moveto (NPDENTRIES 0871) show
0 576 moveto (mpsearch 6806) show
40 mp_a_x mul 576 moveto (0871 1361 1917) show
4 mp_a_x mul 564 moveto (6806 6835) show
36 mp_a_x mul 564 moveto (NPROC 0150) show
0 552 moveto (mpsearch1 6788) show
40 mp_a_x mul 552 moveto (0150 2164 2211 2279 2431) show
4 mp_a_x mul 540 moveto (6788 6814 6818 6821) show
40 mp_a_x mul 540 moveto (2462 2521 2714 2740 2781) show
0 528 moveto (multiboot_header 1075) show
40 mp_a_x mul 528 moveto (2835) show
4 mp_a_x mul 516 moveto (1074 1075) show
36 mp_a_x mul 516 moveto (NPTENTRIES 0872) show
0 504 moveto (namecmp 5363) show
40 mp_a_x mul 504 moveto (0872 1894) show
4 mp_a_x mul 492 moveto (0347 5363 5384 5947) show
36 mp_a_x mul 492 moveto (NSEGS 2051) show
0 480 moveto (namei 5509) show
40 mp_a_x mul 480 moveto (1611 2051 2063) show
4 mp_a_x mul 468 moveto (0348 2301 5509 5872 6049) show
36 mp_a_x mul 468 moveto (nulterminate 8802) show
4 mp_a_x mul 456 moveto (6128 6221) show
40 mp_a_x mul 456 moveto (8665 8680 8802 8823 8829) show
0 444 moveto (nameiparent 5516) show
40 mp_a_x mul 444 moveto (8830 8835 8836 8841) show
4 mp_a_x mul 432 moveto (0349 5474 5489 5501 5516) show
36 mp_a_x mul 432 moveto (NUMLOCK 7413) show
4 mp_a_x mul 420 moveto (5888 5939 5991) show
40 mp_a_x mul 420 moveto (7413 7446) show
0 408 moveto (namex 5474) show
36 mp_a_x mul 408 moveto (NUM_READY_LISTS 2054) show
4 mp_a_x mul 396 moveto (5474 5512 5518) show
40 mp_a_x mul 396 moveto (2054 2165 2570 2629 2937) show
0 384 moveto (NBUF 0161) show
40 mp_a_x mul 384 moveto (3888) show
4 mp_a_x mul 372 moveto (0161 4481 4498) show
36 mp_a_x mul 372 moveto (O_CREATE 4003) show
0 360 moveto (ncpu 6766) show
40 mp_a_x mul 360 moveto (4003 6042 8728 8731) show
4 mp_a_x mul 348 moveto (1274 1337 2074 4307 6766) show
36 mp_a_x mul 348 moveto (O_RDONLY 4000) show
4 mp_a_x mul 336 moveto (6868 6869 6873 6874 6875) show
40 mp_a_x mul 336 moveto (4000 6054 8725) show
4 mp_a_x mul 324 moveto (6895) show
36 mp_a_x mul 324 moveto (O_RDWR 4002) show
0 312 moveto (NCPU 0152) show
40 mp_a_x mul 312 moveto (4002 6075 8164 8166 8460) show
4 mp_a_x mul 300 moveto (0152 2073 6763) show
36 mp_a_x mul 300 moveto (outb 0521) show
0 288 moveto (NDEV 0156) show
40 mp_a_x mul 288 moveto (0521 4311 4320 4337 4338) show
4 mp_a_x mul 276 moveto (0156 5308 5335 5561) show
40 mp_a_x mul 276 moveto (4339 4340 4341 4342 4344) show
0 264 moveto (NDIRECT 4122) show
40 mp_a_x mul 264 moveto (4347 6903 6904 7099 7100) show
4 mp_a_x mul 252 moveto (4122 4124 4133 4223 5223) show
40 mp_a_x mul 252 moveto (7138 7320 7321 7335 7336) show
4 mp_a_x mul 240 moveto (5228 5232 5233 5262 5269) show
40 mp_a_x mul 240 moveto (7344 7347 7352 7362 7365) show
4 mp_a_x mul 228 moveto (5270 5277 5278) show
40 mp_a_x mul 228 moveto (7366 7367 7370 7376 7377) show
0 216 moveto (NELEM 0482) show
40 mp_a_x mul 216 moveto (7379 7380 7733 7735 7756) show
4 mp_a_x mul 204 moveto (0482 1747 2784 3643 6162) show
40 mp_a_x mul 204 moveto (7757 7758 7759 7927 7928) show
0 192 moveto (nextpid 2173) show
40 mp_a_x mul 192 moveto (7929 7973 7976 7977 7978) show
4 mp_a_x mul 180 moveto (2173 2229) show
40 mp_a_x mul 180 moveto (7979 7980 7981 8009 8878) show
0 168 moveto (NFILE 0154) show
40 mp_a_x mul 168 moveto (8886 9014 9015 9016 9017) show
4 mp_a_x mul 156 moveto (0154 5564 5580) show
40 mp_a_x mul 156 moveto (9018 9019) show
0 144 moveto (NINDIRECT 4123) show
36 mp_a_x mul 144 moveto (outsl 0533) show
4 mp_a_x mul 132 moveto (4123 4124 5230 5272) show
40 mp_a_x mul 132 moveto (0533 0535 4345) show
0 120 moveto (NINODE 0155) show
36 mp_a_x mul 120 moveto (outw 0527) show
4 mp_a_x mul 108 moveto (0155 5014 5083) show
40 mp_a_x mul 108 moveto (0527 1219 1221 3803 8919) show
0 96 moveto (NO 7406) show
40 mp_a_x mul 96 moveto (8921) show
4 mp_a_x mul 84 moveto (7406 7452 7455 7457 7458) show
36 mp_a_x mul 84 moveto (O_WRONLY 4001) show
4 mp_a_x mul 72 moveto (7459 7460 7462 7474 7477) show
40 mp_a_x mul 72 moveto (4001 6074 6075 8728 8731) show
4 mp_a_x mul 60 moveto (7479 7480 7481 7482 7484) show
36 mp_a_x mul 60 moveto (P2V 0218) show
grestore
restore
showpage
%%Page: 6 6
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 9) show
4 mp_a_x mul 648 moveto (0218 1269 1287 6812 7101) show
36 mp_a_x mul 648 moveto (PGROUNDDOWN 0880) show
4 mp_a_x mul 636 moveto (7725) show
40 mp_a_x mul 636 moveto (0880 1684 1685 2011) show
0 624 moveto (panic 7705 8492) show
36 mp_a_x mul 624 moveto (PGROUNDUP 0879) show
4 mp_a_x mul 612 moveto (0321 1478 1505 1569 1571) show
40 mp_a_x mul 612 moveto (0879 1863 1890 3054 6257) show
4 mp_a_x mul 600 moveto (1690 1746 1782 1808 1824) show
36 mp_a_x mul 600 moveto (PGSIZE 0873) show
4 mp_a_x mul 588 moveto (1827 1898 1915 1935 1964) show
40 mp_a_x mul 588 moveto (0873 0879 0880 1360 1666) show
4 mp_a_x mul 576 moveto (1966 2288 2410 2441 2613) show
40 mp_a_x mul 576 moveto (1694 1695 1744 1807 1810) show
4 mp_a_x mul 564 moveto (2615 2617 2619 2677 2680) show
40 mp_a_x mul 564 moveto (1811 1823 1825 1829 1832) show
4 mp_a_x mul 552 moveto (3069 3334 4328 4330 4334) show
40 mp_a_x mul 552 moveto (1864 1871 1872 1891 1894) show
4 mp_a_x mul 540 moveto (4390 4392 4394 4543 4568) show
40 mp_a_x mul 540 moveto (1962 1971 1972 2015 2021) show
4 mp_a_x mul 528 moveto (4579 4659 4760 4827 4829) show
40 mp_a_x mul 528 moveto (2290 2297 3055 3068 3072) show
4 mp_a_x mul 516 moveto (4924 4939 5049 5095 5130) show
40 mp_a_x mul 516 moveto (6258 6260) show
4 mp_a_x mul 504 moveto (5150 5159 5181 5244 5377) show
36 mp_a_x mul 504 moveto (PHYSTOP 0203) show
4 mp_a_x mul 492 moveto (5381 5417 5425 5606 5620) show
40 mp_a_x mul 492 moveto (0203 1287 1731 1745 1746) show
4 mp_a_x mul 480 moveto (5680 5717 5722 5920 5955) show
40 mp_a_x mul 480 moveto (3068) show
4 mp_a_x mul 468 moveto (5963 6005 6018 6022 7663) show
36 mp_a_x mul 468 moveto (picenable 7325) show
4 mp_a_x mul 456 moveto (7705 7712 7746 8256 8275) show
40 mp_a_x mul 456 moveto (0395 4306 7325 7894 7930) show
4 mp_a_x mul 444 moveto (8306 8492 8507 8678 8722) show
40 mp_a_x mul 444 moveto (7992) show
4 mp_a_x mul 432 moveto (8756 8760 8786 8791) show
36 mp_a_x mul 432 moveto (picinit 7332) show
0 420 moveto (panicked 7618) show
40 mp_a_x mul 420 moveto (0396 1275 7332) show
4 mp_a_x mul 408 moveto (7618 7718 7766) show
36 mp_a_x mul 408 moveto (picsetmask 7317) show
0 396 moveto (parseblock 8751) show
40 mp_a_x mul 396 moveto (7317 7327 7383) show
4 mp_a_x mul 384 moveto (8751 8756 8775) show
36 mp_a_x mul 384 moveto (pinit 2188) show
0 372 moveto (parsecmd 8668) show
40 mp_a_x mul 372 moveto (0412 1279 2188) show
4 mp_a_x mul 360 moveto (8257 8485 8668) show
36 mp_a_x mul 360 moveto (pipe 6361) show
0 348 moveto (parseexec 8767) show
40 mp_a_x mul 348 moveto (0304 0402 0403 0404 4205) show
4 mp_a_x mul 336 moveto (8664 8705 8767) show
40 mp_a_x mul 336 moveto (5631 5672 5692 6361 6373) show
0 324 moveto (parseline 8685) show
40 mp_a_x mul 324 moveto (6379 6385 6389 6393 6411) show
4 mp_a_x mul 312 moveto (8662 8674 8685 8696 8758) show
40 mp_a_x mul 312 moveto (6429 6451 8113 8305 8306) show
0 300 moveto (parsepipe 8701) show
36 mp_a_x mul 300 moveto (PIPE 8210) show
4 mp_a_x mul 288 moveto (8663 8689 8701 8708) show
40 mp_a_x mul 288 moveto (8210 8303 8557 8827) show
0 276 moveto (parseredirs 8714) show
36 mp_a_x mul 276 moveto (pipealloc 6371) show
4 mp_a_x mul 264 moveto (8714 8762 8781 8792) show
40 mp_a_x mul 264 moveto (0401 6185 6371) show
0 252 moveto (PCINT 6984) show
36 mp_a_x mul 252 moveto (pipeclose 6411) show
4 mp_a_x mul 240 moveto (6984 7026) show
40 mp_a_x mul 240 moveto (0402 5631 6411) show
0 228 moveto (pde_t 0103) show
36 mp_a_x mul 228 moveto (pipecmd 8235 8551) show
4 mp_a_x mul 216 moveto (0103 0468 0469 0470 0471) show
40 mp_a_x mul 216 moveto (8235 8267 8304 8551 8553) show
4 mp_a_x mul 204 moveto (0472 0473 0474 0475 0478) show
40 mp_a_x mul 204 moveto (8708 8808 8828) show
4 mp_a_x mul 192 moveto (0479 1260 1320 1361 1610) show
36 mp_a_x mul 192 moveto (piperead 6451) show
4 mp_a_x mul 180 moveto (1654 1656 1679 1736 1739) show
40 mp_a_x mul 180 moveto (0403 5672 6451) show
4 mp_a_x mul 168 moveto (1742 1803 1818 1853 1882) show
36 mp_a_x mul 168 moveto (PIPESIZE 6359) show
4 mp_a_x mul 156 moveto (1910 1929 1952 1953 1955) show
40 mp_a_x mul 156 moveto (6359 6363 6435 6443 6466) show
4 mp_a_x mul 144 moveto (1984 2004 2110 6218) show
36 mp_a_x mul 144 moveto (pipewrite 6429) show
0 132 moveto (PDX 0862) show
40 mp_a_x mul 132 moveto (0404 5692 6429) show
4 mp_a_x mul 120 moveto (0862 1659) show
36 mp_a_x mul 120 moveto (popcli 1566) show
0 108 moveto (PDXSHIFT 0877) show
40 mp_a_x mul 108 moveto (0432 1521 1566 1569 1571) show
4 mp_a_x mul 96 moveto (0862 0868 0877 1365) show
40 mp_a_x mul 96 moveto (1784) show
0 84 moveto (peek 8651) show
36 mp_a_x mul 84 moveto (printint 7626) show
4 mp_a_x mul 72 moveto (8651 8675 8690 8694 8706) show
40 mp_a_x mul 72 moveto (7626 7676 7680) show
4 mp_a_x mul 60 moveto (8719 8755 8759 8774 8782) show
36 mp_a_x mul 60 moveto (proc 2108) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 10) show
4 mp_a_x mul 648 moveto (0305 0407 0476 1255 1458) show
40 mp_a_x mul 648 moveto (0890 1363 1365) show
4 mp_a_x mul 636 moveto (1606 1638 1773 1779 2070) show
36 mp_a_x mul 636 moveto (pte_t 0898) show
4 mp_a_x mul 624 moveto (2085 2108 2114 2130 2156) show
40 mp_a_x mul 624 moveto (0898 1653 1657 1661 1663) show
4 mp_a_x mul 612 moveto (2164 2171 2179 2180 2181) show
40 mp_a_x mul 612 moveto (1682 1821 1884 1931 1956) show
4 mp_a_x mul 600 moveto (2182 2204 2207 2211 2270) show
40 mp_a_x mul 600 moveto (1986) show
4 mp_a_x mul 588 moveto (2278 2280 2321 2323 2326) show
36 mp_a_x mul 588 moveto (PTE_U 0885) show
4 mp_a_x mul 576 moveto (2329 2330 2341 2351 2360) show
40 mp_a_x mul 576 moveto (0885 1670 1811 1872 1936) show
4 mp_a_x mul 564 moveto (2361 2362 2368 2369 2370) show
40 mp_a_x mul 564 moveto (1991) show
4 mp_a_x mul 552 moveto (2372 2376 2377 2406 2409) show
36 mp_a_x mul 552 moveto (PTE_W 0884) show
4 mp_a_x mul 540 moveto (2414 2415 2416 2421 2423) show
40 mp_a_x mul 540 moveto (0884 1363 1365 1670 1729) show
4 mp_a_x mul 528 moveto (2428 2431 2432 2439 2455) show
40 mp_a_x mul 528 moveto (1731 1732 1811 1872) show
4 mp_a_x mul 516 moveto (2462 2463 2484 2490 2512) show
36 mp_a_x mul 516 moveto (PTX 0865) show
4 mp_a_x mul 504 moveto (2521 2528 2537 2542 2557) show
40 mp_a_x mul 504 moveto (0865 1672) show
4 mp_a_x mul 492 moveto (2583 2592 2597 2616 2626) show
36 mp_a_x mul 492 moveto (PTXSHIFT 0876) show
4 mp_a_x mul 480 moveto (2628 2629 2630 2631 2634) show
40 mp_a_x mul 480 moveto (0865 0868 0876) show
4 mp_a_x mul 468 moveto (2643 2644 2676 2694 2695) show
36 mp_a_x mul 468 moveto (pushcli 1555) show
4 mp_a_x mul 456 moveto (2699 2712 2714 2737 2740) show
40 mp_a_x mul 456 moveto (0431 1476 1555 1775) show
4 mp_a_x mul 444 moveto (2771 2781 2822 2835 2864) show
36 mp_a_x mul 444 moveto (queue 9300 2864) show
4 mp_a_x mul 432 moveto (2873 2901 2904 2922 2936) show
40 mp_a_x mul 432 moveto (2160 2165 2166 2179 2180) show
4 mp_a_x mul 420 moveto (3255 3288 3290 3292 3330) show
40 mp_a_x mul 420 moveto (2181 2278 2864 2873 2876) show
4 mp_a_x mul 408 moveto (3338 3339 3341 3347 3352) show
40 mp_a_x mul 408 moveto (2902 9300) show
4 mp_a_x mul 396 moveto (3356 3455 3469 3483 3486) show
36 mp_a_x mul 396 moveto (rcr2 0632) show
4 mp_a_x mul 384 moveto (3497 3510 3642 3644 3651) show
40 mp_a_x mul 384 moveto (0632 3333 3340) show
4 mp_a_x mul 372 moveto (3656 3657 3707 3741 3758) show
36 mp_a_x mul 372 moveto (readeflags 0594) show
4 mp_a_x mul 360 moveto (3775 3822 3828 3835 3837) show
40 mp_a_x mul 360 moveto (0594 1559 1568 2618 7058) show
4 mp_a_x mul 348 moveto (3855 3858 3859 3870 3872) show
36 mp_a_x mul 348 moveto (read_head 4688) show
4 mp_a_x mul 336 moveto (3873 3890 3891 4257 4866) show
40 mp_a_x mul 336 moveto (4688 4720) show
4 mp_a_x mul 324 moveto (5481 5761 5776 5793 5794) show
36 mp_a_x mul 324 moveto (readi 5302) show
4 mp_a_x mul 312 moveto (5846 6139 6141 6190 6204) show
40 mp_a_x mul 312 moveto (0350 1833 5302 5380 5416) show
4 mp_a_x mul 300 moveto (6286 6289 6290 6291 6292) show
40 mp_a_x mul 300 moveto (5675 5919 5920 6229 6240) show
4 mp_a_x mul 288 moveto (6293 6294 6354 6436 6457) show
36 mp_a_x mul 288 moveto (readsb 4878) show
4 mp_a_x mul 276 moveto (6761 6856 6867 6868 6869) show
40 mp_a_x mul 276 moveto (0336 4663 4878 4934 5021) show
4 mp_a_x mul 264 moveto (6872 7613 7843 7960 9302) show
36 mp_a_x mul 264 moveto (readsect 9010) show
4 mp_a_x mul 252 moveto (9303) show
40 mp_a_x mul 252 moveto (9010 9045) show
0 240 moveto (procdump 2760) show
36 mp_a_x mul 240 moveto (readseg 9029) show
4 mp_a_x mul 228 moveto (0413 2760 7828) show
40 mp_a_x mul 228 moveto (8964 8977 8988 9029) show
0 216 moveto (proghdr 1024) show
36 mp_a_x mul 216 moveto (recover_from_log 4718) show
4 mp_a_x mul 204 moveto (1024 6217 8970 8984) show
40 mp_a_x mul 204 moveto (4652 4667 4718) show
0 192 moveto (promote 2933) show
36 mp_a_x mul 192 moveto (REDIR 8209) show
4 mp_a_x mul 180 moveto (2183 2933) show
40 mp_a_x mul 180 moveto (8209 8285 8531 8821) show
0 168 moveto (PTE_ADDR 0894) show
36 mp_a_x mul 168 moveto (redircmd 8226 8525) show
4 mp_a_x mul 156 moveto (0894 1661 1828 1896 1919) show
40 mp_a_x mul 156 moveto (8226 8268 8286 8525 8527) show
4 mp_a_x mul 144 moveto (1967 1993) show
40 mp_a_x mul 144 moveto (8725 8728 8731 8809 8822) show
0 132 moveto (PTE_FLAGS 0895) show
36 mp_a_x mul 132 moveto (REG_ID 7210) show
4 mp_a_x mul 120 moveto (0895 1968) show
40 mp_a_x mul 120 moveto (7210 7260) show
0 108 moveto (PTE_P 0883) show
36 mp_a_x mul 108 moveto (REG_TABLE 7212) show
4 mp_a_x mul 96 moveto (0883 1363 1365 1660 1670) show
40 mp_a_x mul 96 moveto (7212 7267 7268 7281 7282) show
4 mp_a_x mul 84 moveto (1689 1691 1895 1918 1965) show
36 mp_a_x mul 84 moveto (REG_VER 7211) show
4 mp_a_x mul 72 moveto (1989) show
40 mp_a_x mul 72 moveto (7211 7259) show
0 60 moveto (PTE_PS 0890) show
36 mp_a_x mul 60 moveto (release 1502) show
grestore
restore
showpage
%%Page: 7 7
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 11) show
4 mp_a_x mul 648 moveto (0430 1502 1505 2214 2224) show
40 mp_a_x mul 648 moveto (4264 4331) show
4 mp_a_x mul 636 moveto (2230 2259 2282 2311 2357) show
36 mp_a_x mul 636 moveto (SECTSIZE 8962) show
4 mp_a_x mul 624 moveto (2383 2478 2485 2534 2544) show
40 mp_a_x mul 624 moveto (8962 9023 9036 9039 9044) show
4 mp_a_x mul 612 moveto (2577 2589 2598 2624 2646) show
36 mp_a_x mul 612 moveto (SEG 0819) show
4 mp_a_x mul 600 moveto (2657 2690 2702 2728 2748) show
40 mp_a_x mul 600 moveto (0819 1625 1626 1627 1628) show
4 mp_a_x mul 588 moveto (2752 2779 2819 2856 3080) show
40 mp_a_x mul 588 moveto (1631) show
4 mp_a_x mul 576 moveto (3097 3302 3776 3781 3794) show
36 mp_a_x mul 576 moveto (SEG16 0823) show
4 mp_a_x mul 564 moveto (4359 4378 4415 4523 4539) show
40 mp_a_x mul 564 moveto (0823 1776) show
4 mp_a_x mul 552 moveto (4593 4739 4768 4777 4840) show
36 mp_a_x mul 552 moveto (SEG_ASM 0710) show
4 mp_a_x mul 540 moveto (5086 5105 5117 5136 5164) show
40 mp_a_x mul 540 moveto (0710 1228 1229 8929 8930) show
4 mp_a_x mul 528 moveto (5183 5192 5583 5587 5608) show
36 mp_a_x mul 528 moveto (segdesc 0802) show
4 mp_a_x mul 516 moveto (5622 5628 6422 6425 6437) show
40 mp_a_x mul 516 moveto (0559 0562 0802 0819 0823) show
4 mp_a_x mul 504 moveto (6446 6458 6469 7701 7826) show
40 mp_a_x mul 504 moveto (1611 2063) show
4 mp_a_x mul 492 moveto (7844 7864 7879) show
36 mp_a_x mul 492 moveto (seginit 1616) show
0 480 moveto (ROOTDEV 0157) show
40 mp_a_x mul 480 moveto (0465 1273 1305 1616) show
4 mp_a_x mul 468 moveto (0157 2664 2665 5479) show
36 mp_a_x mul 468 moveto (SEG_KCODE 0791) show
0 456 moveto (ROOTINO 4104) show
40 mp_a_x mul 456 moveto (0791 1188 1625 3272 3273) show
4 mp_a_x mul 444 moveto (4104 5479) show
40 mp_a_x mul 444 moveto (8899) show
0 432 moveto (rtcdate 0250) show
36 mp_a_x mul 432 moveto (SEG_KCPU 0793) show
4 mp_a_x mul 420 moveto (0250 0306 0374 3809 7150) show
40 mp_a_x mul 420 moveto (0793 1631 1634 3216) show
4 mp_a_x mul 408 moveto (7161 7163 9162) show
36 mp_a_x mul 408 moveto (SEG_KDATA 0792) show
0 396 moveto (run 3014) show
40 mp_a_x mul 396 moveto (0792 1192 1626 1778 3213) show
4 mp_a_x mul 384 moveto (2767 2812 3014 3015 3021) show
40 mp_a_x mul 384 moveto (8903) show
4 mp_a_x mul 372 moveto (3066 3076 3089 9229) show
36 mp_a_x mul 372 moveto (SEG_NULLASM 0704) show
0 360 moveto (runcmd 8261) show
40 mp_a_x mul 360 moveto (0704 1227 8928) show
4 mp_a_x mul 348 moveto (8261 8275 8292 8298 8300) show
36 mp_a_x mul 348 moveto (SEG_TSS 0796) show
4 mp_a_x mul 336 moveto (8312 8319 8330 8485) show
40 mp_a_x mul 336 moveto (0796 1776 1777 1780) show
0 324 moveto (RUNNING 2105) show
36 mp_a_x mul 324 moveto (SEG_UCODE 0794) show
4 mp_a_x mul 312 moveto (2105 2530 2585 2616 2767) show
40 mp_a_x mul 312 moveto (0794 1627 2292) show
4 mp_a_x mul 300 moveto (2812 3352) show
36 mp_a_x mul 300 moveto (SEG_UDATA 0795) show
0 288 moveto (safestrcpy 6582) show
40 mp_a_x mul 288 moveto (0795 1628 2293) show
4 mp_a_x mul 276 moveto (0438 2300 2372 2847 2848) show
36 mp_a_x mul 276 moveto (setbuiltin 8376) show
4 mp_a_x mul 264 moveto (6286 6582) show
40 mp_a_x mul 264 moveto (8376 8425) show
0 252 moveto (sb 4874) show
36 mp_a_x mul 252 moveto (SETGATE 0971) show
4 mp_a_x mul 240 moveto (0336 4154 4160 4661 4663) show
40 mp_a_x mul 240 moveto (0971 3272 3273) show
4 mp_a_x mul 228 moveto (4664 4665 4874 4878 4883) show
36 mp_a_x mul 228 moveto (setupkvm 1737) show
4 mp_a_x mul 216 moveto (4910 4911 4912 4934 4935) show
40 mp_a_x mul 216 moveto (0468 1737 1759 1960 2287) show
4 mp_a_x mul 204 moveto (5021 5022 5023 5037 5038) show
40 mp_a_x mul 204 moveto (6234) show
4 mp_a_x mul 192 moveto (5059 5139 7164 7166 7168) show
36 mp_a_x mul 192 moveto (SHIFT 7408) show
0 180 moveto (sched 2606) show
40 mp_a_x mul 180 moveto (7408 7436 7437 7585) show
4 mp_a_x mul 168 moveto (0415 2440 2606 2613 2615) show
36 mp_a_x mul 168 moveto (skipelem 5445) show
4 mp_a_x mul 156 moveto (2617 2619 2645 2696) show
40 mp_a_x mul 156 moveto (5445 5483) show
0 144 moveto (scheduler 2510 2553) show
36 mp_a_x mul 144 moveto (sleep 2674) show
4 mp_a_x mul 132 moveto (0414 1317 2061 2510 2537) show
40 mp_a_x mul 132 moveto (0416 2490 2674 2677 2680) show
4 mp_a_x mul 120 moveto (2553 2592 2634) show
40 mp_a_x mul 120 moveto (2765 2810 3779 4412 4526) show
0 108 moveto (SCROLLLOCK 7414) show
40 mp_a_x mul 108 moveto (4733 4736 5134 6441 6461) show
4 mp_a_x mul 96 moveto (7414 7447) show
40 mp_a_x mul 96 moveto (7848 8129) show
0 84 moveto (SECS 7129) show
36 mp_a_x mul 84 moveto (spinlock 1401) show
4 mp_a_x mul 72 moveto (7129 7152) show
40 mp_a_x mul 72 moveto (0307 0416 0426 0428 0429) show
0 60 moveto (SECTOR_SIZE 4264) show
40 mp_a_x mul 60 moveto (0430 0457 1401 1459 1462) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 12) show
4 mp_a_x mul 648 moveto (1474 1502 1544 2157 2163) show
40 mp_a_x mul 648 moveto (6776 6778 6780 6782 6783) show
4 mp_a_x mul 636 moveto (2674 3009 3019 3258 3263) show
40 mp_a_x mul 636 moveto (6795 6842) show
4 mp_a_x mul 624 moveto (4260 4277 4475 4480 4603) show
36 mp_a_x mul 624 moveto (superblock 4112) show
4 mp_a_x mul 612 moveto (4638 4867 5013 5559 5563) show
40 mp_a_x mul 612 moveto (0309 0336 4112 4661 4874) show
4 mp_a_x mul 600 moveto (6357 6362 7608 7621 7956) show
40 mp_a_x mul 600 moveto (4878) show
0 588 moveto (STA_R 0719 0836) show
36 mp_a_x mul 588 moveto (SVR 6967) show
4 mp_a_x mul 576 moveto (0719 0836 1228 1625 1627) show
40 mp_a_x mul 576 moveto (6967 7009) show
4 mp_a_x mul 564 moveto (8929) show
36 mp_a_x mul 564 moveto (switchkvm 1766) show
0 552 moveto (start 1175 8058 8861) show
40 mp_a_x mul 552 moveto (0477 1304 1760 1766 2538) show
4 mp_a_x mul 540 moveto (1174 1175 1205 1213 1215) show
40 mp_a_x mul 540 moveto (2593) show
4 mp_a_x mul 528 moveto (4639 4664 4677 4690 4706) show
36 mp_a_x mul 528 moveto (switchuvm 1773) show
4 mp_a_x mul 516 moveto (4788 5022 8057 8058 8860) show
40 mp_a_x mul 516 moveto (0476 1773 1782 2330 2529) show
4 mp_a_x mul 504 moveto (8861 8912 9213 9229) show
40 mp_a_x mul 504 moveto (2584 6294) show
0 492 moveto (startothers 1324) show
36 mp_a_x mul 492 moveto (swtch 2958) show
4 mp_a_x mul 480 moveto (1258 1286 1324) show
40 mp_a_x mul 480 moveto (0423 2537 2592 2634 2957) show
0 468 moveto (stat 4054) show
40 mp_a_x mul 468 moveto (2958) show
4 mp_a_x mul 456 moveto (0308 0332 0351 4054 4864) show
36 mp_a_x mul 456 moveto (syscall 3638) show
4 mp_a_x mul 444 moveto (5287 5652 5759 5854 8153) show
40 mp_a_x mul 444 moveto (0449 3291 3457 3638) show
4 mp_a_x mul 432 moveto (9053) show
36 mp_a_x mul 432 moveto (SYSCALL 8103 8110 8111 8112 8113 81) show
0 420 moveto (stati 5287) show
40 mp_a_x mul 420 moveto (8110 8111 8112 8113 8114) show
4 mp_a_x mul 408 moveto (0351 5287 5656) show
40 mp_a_x mul 408 moveto (8115 8116 8117 8118 8119) show
0 396 moveto (STA_W 0718 0835) show
40 mp_a_x mul 396 moveto (8120 8121 8122 8123 8124) show
4 mp_a_x mul 384 moveto (0718 0835 1229 1626 1628) show
40 mp_a_x mul 384 moveto (8125 8126 8127 8128 8129) show
4 mp_a_x mul 372 moveto (1631 8930) show
40 mp_a_x mul 372 moveto (8130 8131 8133 8135 8136) show
0 360 moveto (STA_X 0715 0832) show
40 mp_a_x mul 360 moveto (8137 8139 8140 8141 8143) show
4 mp_a_x mul 348 moveto (0715 0832 1228 1625 1627) show
36 mp_a_x mul 348 moveto (sys_chdir 6122) show
4 mp_a_x mul 336 moveto (8929) show
40 mp_a_x mul 336 moveto (3529 3575 3619 6122) show
0 324 moveto (sti 0613) show
36 mp_a_x mul 324 moveto (SYS_chdir 3409) show
4 mp_a_x mul 312 moveto (0613 0615 1573 2517 2565) show
40 mp_a_x mul 312 moveto (3409 3410 3575 3619) show
0 300 moveto (stosb 0542) show
36 mp_a_x mul 300 moveto (sys_close 5839) show
4 mp_a_x mul 288 moveto (0542 0544 6510 8990) show
40 mp_a_x mul 288 moveto (3530 3587 3631 5839) show
0 276 moveto (stosl 0551) show
36 mp_a_x mul 276 moveto (SYS_close 3421) show
4 mp_a_x mul 264 moveto (0551 0553 6508) show
40 mp_a_x mul 264 moveto (3421 3422 3587 3631) show
0 252 moveto (strlen 6601) show
36 mp_a_x mul 252 moveto (SYS_date 3425) show
4 mp_a_x mul 240 moveto (0439 6267 6268 6601 8380) show
40 mp_a_x mul 240 moveto (3425 3427 3591) show
4 mp_a_x mul 228 moveto (8383 8389 8403 8435 8473) show
36 mp_a_x mul 228 moveto (sys_dup 5801) show
4 mp_a_x mul 216 moveto (8673) show
40 mp_a_x mul 216 moveto (3531 3576 3620 5801) show
0 204 moveto (strncmp 6558 8354) show
36 mp_a_x mul 204 moveto (SYS_dup 3410) show
4 mp_a_x mul 192 moveto (0440 5365 6558 8354 8381) show
40 mp_a_x mul 192 moveto (3410 3411 3576 3620) show
4 mp_a_x mul 180 moveto (8382 8384 8388 8390 8404) show
36 mp_a_x mul 180 moveto (sys_exec 6151) show
4 mp_a_x mul 168 moveto (8405 8409 8435) show
40 mp_a_x mul 168 moveto (3532 3573 3617 6151) show
0 156 moveto (strncpy 6568) show
36 mp_a_x mul 156 moveto (SYS_exec 3407) show
4 mp_a_x mul 144 moveto (0441 5422 6568) show
40 mp_a_x mul 144 moveto (3407 3408 3573 3617 8062) show
0 132 moveto (STS_IG32 0850) show
36 mp_a_x mul 132 moveto (sys_exit 3716) show
4 mp_a_x mul 120 moveto (0850 0977) show
40 mp_a_x mul 120 moveto (3533 3568 3612 3716) show
0 108 moveto (STS_T32A 0847) show
36 mp_a_x mul 108 moveto (SYS_exit 3402) show
4 mp_a_x mul 96 moveto (0847 1776) show
40 mp_a_x mul 96 moveto (3402 3403 3568 3612 8067) show
0 84 moveto (STS_TG32 0851) show
36 mp_a_x mul 84 moveto (sys_fork 3710) show
4 mp_a_x mul 72 moveto (0851 0977) show
40 mp_a_x mul 72 moveto (3534 3567 3611 3710) show
0 60 moveto (sum 6776) show
36 mp_a_x mul 60 moveto (SYS_fork 3401) show
grestore
restore
showpage
%%Page: 8 8
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 13) show
4 mp_a_x mul 648 moveto (3401 3402 3567 3611) show
40 mp_a_x mul 648 moveto (3404 3405 3570 3614) show
0 636 moveto (sys_fstat 5851) show
36 mp_a_x mul 636 moveto (sys_read 5815) show
4 mp_a_x mul 624 moveto (3535 3574 3618 5851) show
40 mp_a_x mul 624 moveto (3543 3571 3615 5815) show
0 612 moveto (SYS_fstat 3408) show
36 mp_a_x mul 612 moveto (SYS_read 3405) show
4 mp_a_x mul 600 moveto (3408 3409 3574 3618) show
40 mp_a_x mul 600 moveto (3405 3406 3571 3615) show
0 588 moveto (sys_getgid 3826) show
36 mp_a_x mul 588 moveto (sys_sbrk 3751) show
4 mp_a_x mul 576 moveto (3556 3594 3826) show
40 mp_a_x mul 576 moveto (3544 3578 3622 3751) show
0 564 moveto (SYS_getgid 3428) show
36 mp_a_x mul 564 moveto (SYS_sbrk 3412) show
4 mp_a_x mul 552 moveto (3428 3429 3594) show
40 mp_a_x mul 552 moveto (3412 3413 3578 3622) show
0 540 moveto (sys_getpid 3739) show
36 mp_a_x mul 540 moveto (sys_setgid 3867) show
4 mp_a_x mul 528 moveto (3536 3577 3621 3739) show
40 mp_a_x mul 528 moveto (3560 3598 3867) show
0 516 moveto (SYS_getpid 3411) show
36 mp_a_x mul 516 moveto (SYS_setgid 3432) show
4 mp_a_x mul 504 moveto (3411 3412 3577 3621) show
40 mp_a_x mul 504 moveto (3432 3433 3598) show
0 492 moveto (sys_getppid 3832) show
36 mp_a_x mul 492 moveto (sys_setpriority 3883) show
4 mp_a_x mul 480 moveto (3557 3595 3832) show
40 mp_a_x mul 480 moveto (3564 3603 3883) show
0 468 moveto (SYS_getppid 3429) show
36 mp_a_x mul 468 moveto (SYS_setpriority 3436) show
4 mp_a_x mul 456 moveto (3429 3431 3595) show
40 mp_a_x mul 456 moveto (3436 3603) show
0 444 moveto (sys_getprocs 2804) show
36 mp_a_x mul 444 moveto (sys_setuid 3851) show
4 mp_a_x mul 432 moveto (2804 3562 3600) show
40 mp_a_x mul 432 moveto (3559 3597 3851) show
0 420 moveto (SYS_getprocs 3433) show
36 mp_a_x mul 420 moveto (SYS_setuid 3431) show
4 mp_a_x mul 408 moveto (3433 3436 3600) show
40 mp_a_x mul 408 moveto (3431 3432 3597) show
0 396 moveto (sys_getuid 3820) show
36 mp_a_x mul 396 moveto (sys_sleep 3765) show
4 mp_a_x mul 384 moveto (3555 3593 3820) show
40 mp_a_x mul 384 moveto (3545 3579 3623 3765) show
0 372 moveto (SYS_getuid 3427) show
36 mp_a_x mul 372 moveto (SYS_sleep 3413) show
4 mp_a_x mul 360 moveto (3427 3428 3593) show
40 mp_a_x mul 360 moveto (3413 3414 3579 3623) show
0 348 moveto (SYS_halt 3422) show
36 mp_a_x mul 348 moveto (sys_unlink 5928) show
4 mp_a_x mul 336 moveto (3422 3425 3588 3632) show
40 mp_a_x mul 336 moveto (3546 3584 3628 5928) show
0 324 moveto (sys_kill 3729) show
36 mp_a_x mul 324 moveto (SYS_unlink 3418) show
4 mp_a_x mul 312 moveto (3537 3572 3616 3729) show
40 mp_a_x mul 312 moveto (3418 3419 3584 3628) show
0 300 moveto (SYS_kill 3406) show
36 mp_a_x mul 300 moveto (sys_uptime 3788) show
4 mp_a_x mul 288 moveto (3406 3407 3572 3616) show
40 mp_a_x mul 288 moveto (3549 3580 3624 3788) show
0 276 moveto (sys_link 5863) show
36 mp_a_x mul 276 moveto (SYS_uptime 3414) show
4 mp_a_x mul 264 moveto (3538 3585 3629 5863) show
40 mp_a_x mul 264 moveto (3414 3415 3580 3624) show
0 252 moveto (SYS_link 3419) show
36 mp_a_x mul 252 moveto (sys_wait 3723) show
4 mp_a_x mul 240 moveto (3419 3420 3585 3629) show
40 mp_a_x mul 240 moveto (3547 3569 3613 3723) show
0 228 moveto (sys_mkdir 6080) show
36 mp_a_x mul 228 moveto (SYS_wait 3403) show
4 mp_a_x mul 216 moveto (3539 3586 3630 6080) show
40 mp_a_x mul 216 moveto (3403 3404 3569 3613) show
0 204 moveto (SYS_mkdir 3420) show
36 mp_a_x mul 204 moveto (sys_write 5827) show
4 mp_a_x mul 192 moveto (3420 3421 3586 3630) show
40 mp_a_x mul 192 moveto (3548 3582 3626 5827) show
0 180 moveto (sys_mknod 6101) show
36 mp_a_x mul 180 moveto (SYS_write 3416) show
4 mp_a_x mul 168 moveto (3540 3583 3627 6101) show
40 mp_a_x mul 168 moveto (3416 3417 3582 3626) show
0 156 moveto (SYS_mknod 3417) show
36 mp_a_x mul 156 moveto (taskstate 0901) show
4 mp_a_x mul 144 moveto (3417 3418 3583 3627) show
40 mp_a_x mul 144 moveto (0901 2062) show
0 132 moveto (sys_open 6030) show
36 mp_a_x mul 132 moveto (TDCR 6991) show
4 mp_a_x mul 120 moveto (3541 3581 3625 6030) show
40 mp_a_x mul 120 moveto (6991 7015) show
0 108 moveto (SYS_open 3415) show
36 mp_a_x mul 108 moveto (T_DEV 4052) show
4 mp_a_x mul 96 moveto (3415 3416 3581 3625) show
40 mp_a_x mul 96 moveto (4052 5307 5334 6112 9058) show
0 84 moveto (sys_pipe 6177) show
36 mp_a_x mul 84 moveto (T_DIR 4050) show
4 mp_a_x mul 72 moveto (3542 3570 3614 6177) show
40 mp_a_x mul 72 moveto (4050 5376 5485 5878 5956) show
0 60 moveto (SYS_pipe 3404) show
40 mp_a_x mul 60 moveto (5964 6013 6054 6086 6133) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  cross-references  Page 14) show
4 mp_a_x mul 648 moveto (9056) show
36 mp_a_x mul 648 moveto (uart 7965) show
0 636 moveto (T_FILE 4051) show
40 mp_a_x mul 636 moveto (7965 7986 8005 8015) show
4 mp_a_x mul 624 moveto (4051 5998 6043 9057) show
36 mp_a_x mul 624 moveto (uartgetc 8013) show
0 612 moveto (ticks 3264) show
40 mp_a_x mul 612 moveto (8013 8025) show
4 mp_a_x mul 600 moveto (0455 2258 2533 2588 2623) show
36 mp_a_x mul 600 moveto (uartinit 7968) show
4 mp_a_x mul 588 moveto (2778 2818 3264 3301 3303) show
40 mp_a_x mul 588 moveto (0460 1278 7968) show
4 mp_a_x mul 576 moveto (3773 3774 3779 3793) show
36 mp_a_x mul 576 moveto (uartintr 8023) show
0 564 moveto (tickslock 3263) show
40 mp_a_x mul 564 moveto (0461 3319 8023) show
4 mp_a_x mul 552 moveto (0457 2257 2259 2532 2534) show
36 mp_a_x mul 552 moveto (uartputc 8001) show
4 mp_a_x mul 540 moveto (2587 2589 2622 2624 2777) show
40 mp_a_x mul 540 moveto (0462 7773 7775 7997 8001) show
4 mp_a_x mul 528 moveto (2779 2817 2819 3263 3275) show
36 mp_a_x mul 528 moveto (updateBudget 2922) show
4 mp_a_x mul 516 moveto (3300 3302 3772 3776 3779) show
40 mp_a_x mul 516 moveto (2182 2628 2922) show
4 mp_a_x mul 504 moveto (3781 3792 3794) show
36 mp_a_x mul 504 moveto (userinit 2268) show
0 492 moveto (TICR 6989) show
40 mp_a_x mul 492 moveto (0417 1288 2268 2288) show
4 mp_a_x mul 480 moveto (6989 7017) show
36 mp_a_x mul 480 moveto (uva2ka 1984) show
0 468 moveto (TIMER 6981) show
40 mp_a_x mul 468 moveto (0469 1984 2012) show
4 mp_a_x mul 456 moveto (6981 7016) show
36 mp_a_x mul 456 moveto (V2P 0217) show
0 444 moveto (TIMER_16BIT 7921) show
40 mp_a_x mul 444 moveto (0217 1730 1731) show
4 mp_a_x mul 432 moveto (7921 7927) show
36 mp_a_x mul 432 moveto (V2P_WO 0220) show
0 420 moveto (TIMER_DIV 7916) show
40 mp_a_x mul 420 moveto (0220 1086 1096) show
4 mp_a_x mul 408 moveto (7916 7928 7929) show
36 mp_a_x mul 408 moveto (VER 6964) show
0 396 moveto (TIMER_FREQ 7915) show
40 mp_a_x mul 396 moveto (6964 7025) show
4 mp_a_x mul 384 moveto (7915 7916) show
36 mp_a_x mul 384 moveto (wait 2453) show
0 372 moveto (timerinit 7924) show
40 mp_a_x mul 372 moveto (0418 2453 3725 8112 8183) show
4 mp_a_x mul 360 moveto (0451 1285 7924) show
40 mp_a_x mul 360 moveto (8299 8323 8324 8486 9225) show
0 348 moveto (TIMER_MODE 7918) show
36 mp_a_x mul 348 moveto (waitdisk 9001) show
4 mp_a_x mul 336 moveto (7918 7927) show
40 mp_a_x mul 336 moveto (9001 9013 9022) show
0 324 moveto (TIMER_RATEGEN 7920) show
36 mp_a_x mul 324 moveto (wakeup 2724) show
4 mp_a_x mul 312 moveto (7920 7927) show
40 mp_a_x mul 312 moveto (0419 2724 3303 4372 4591) show
0 300 moveto (TIMER_SEL0 7919) show
40 mp_a_x mul 300 moveto (4766 4776 5163 5189 6416) show
4 mp_a_x mul 288 moveto (7919 7927) show
40 mp_a_x mul 288 moveto (6419 6440 6445 6468 7820) show
0 276 moveto (T_IRQ0 3129) show
36 mp_a_x mul 276 moveto (wakeup1 2710) show
4 mp_a_x mul 264 moveto (3129 3298 3307 3311 3314) show
40 mp_a_x mul 264 moveto (2185 2428 2435 2710 2727) show
4 mp_a_x mul 252 moveto (3318 3322 3323 3352 7009) show
36 mp_a_x mul 252 moveto (walkpgdir 1654) show
4 mp_a_x mul 240 moveto (7016 7029 7267 7281 7347) show
40 mp_a_x mul 240 moveto (1654 1687 1826 1892 1933) show
4 mp_a_x mul 228 moveto (7366) show
40 mp_a_x mul 228 moveto (1963 1988) show
0 216 moveto (TPR 6965) show
36 mp_a_x mul 216 moveto (write_head 4704) show
4 mp_a_x mul 204 moveto (6965 7045) show
40 mp_a_x mul 204 moveto (4704 4723 4805 4808) show
0 192 moveto (trap 3285) show
36 mp_a_x mul 192 moveto (writei 5329) show
4 mp_a_x mul 180 moveto (3152 3154 3222 3285 3332) show
40 mp_a_x mul 180 moveto (0352 5329 5424 5709 5962) show
4 mp_a_x mul 168 moveto (3334 3337) show
40 mp_a_x mul 168 moveto (5963) show
0 156 moveto (trapframe 0652) show
36 mp_a_x mul 156 moveto (write_log 4783) show
4 mp_a_x mul 144 moveto (0652 2115 2242 3285) show
40 mp_a_x mul 144 moveto (4783 4804) show
0 132 moveto (trapret 3227) show
36 mp_a_x mul 132 moveto (xchg 0619) show
4 mp_a_x mul 120 moveto (2175 2247 3226 3227) show
40 mp_a_x mul 120 moveto (0619 1316 1483 1519) show
0 108 moveto (T_SYSCALL 3126) show
36 mp_a_x mul 108 moveto (YEAR 7134) show
4 mp_a_x mul 96 moveto (3126 3273 3287 8063 8068) show
40 mp_a_x mul 96 moveto (7134 7157) show
4 mp_a_x mul 84 moveto (8107) show
36 mp_a_x mul 84 moveto (yield 2640) show
0 72 moveto (tvinit 3267) show
40 mp_a_x mul 72 moveto (0420 2640 3353) show
4 mp_a_x mul 60 moveto (0456 1280 3267) show
grestore
restore
showpage
%%Page: 9 9
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/types.h  Page 1) show
0 648 moveto (0100 typedef unsigned int   uint;) show
0 636 moveto (0101 typedef unsigned short ushort;) show
0 624 moveto (0102 typedef unsigned char  uchar;) show
0 612 moveto (0103 typedef uint pde_t;) show
0 600 moveto (0104 ) show
0 588 moveto (0105 ) show
0 576 moveto (0106 ) show
0 564 moveto (0107 ) show
0 552 moveto (0108 ) show
0 540 moveto (0109 ) show
0 528 moveto (0110 ) show
0 516 moveto (0111 ) show
0 504 moveto (0112 ) show
0 492 moveto (0113 ) show
0 480 moveto (0114 ) show
0 468 moveto (0115 ) show
0 456 moveto (0116 ) show
0 444 moveto (0117 ) show
0 432 moveto (0118 ) show
0 420 moveto (0119 ) show
0 408 moveto (0120 ) show
0 396 moveto (0121 ) show
0 384 moveto (0122 ) show
0 372 moveto (0123 ) show
0 360 moveto (0124 ) show
0 348 moveto (0125 ) show
0 336 moveto (0126 ) show
0 324 moveto (0127 ) show
0 312 moveto (0128 ) show
0 300 moveto (0129 ) show
0 288 moveto (0130 ) show
0 276 moveto (0131 ) show
0 264 moveto (0132 ) show
0 252 moveto (0133 ) show
0 240 moveto (0134 ) show
0 228 moveto (0135 ) show
0 216 moveto (0136 ) show
0 204 moveto (0137 ) show
0 192 moveto (0138 ) show
0 180 moveto (0139 ) show
0 168 moveto (0140 ) show
0 156 moveto (0141 ) show
0 144 moveto (0142 ) show
0 132 moveto (0143 ) show
0 120 moveto (0144 ) show
0 108 moveto (0145 ) show
0 96 moveto (0146 ) show
0 84 moveto (0147 ) show
0 72 moveto (0148 ) show
0 60 moveto (0149 ) show
0 24 moveto (Sheet 01) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/param.h  Page 1) show
0 648 moveto (0150 #define NPROC        64  // maximum number of processes) show
0 636 moveto (0151 #define KSTACKSIZE 4096  // size of per-process kernel stack) show
0 624 moveto (0152 #define NCPU          8  // maximum number of CPUs) show
0 612 moveto (0153 #define NOFILE       16  // open files per process) show
0 600 moveto (0154 #define NFILE       100  // open files per system) show
0 588 moveto (0155 #define NINODE       50  // maximum number of active i-nodes) show
0 576 moveto (0156 #define NDEV         10  // maximum major device number) show
0 564 moveto (0157 #define ROOTDEV       1  // device number of file system root disk) show
0 552 moveto (0158 #define MAXARG       32  // max exec arguments) show
0 540 moveto (0159 #define MAXOPBLOCKS  10  // max # of blocks any FS op writes) show
0 528 moveto (0160 #define LOGSIZE      \(MAXOPBLOCKS*3\)  // max data blocks in on-disk log) show
0 516 moveto (0161 #define NBUF         \(MAXOPBLOCKS*3\)  // size of disk block cache) show
0 504 moveto (0162 #define FSSIZE       1000  // size of file system in blocks) show
0 492 moveto (0163 ) show
0 480 moveto (0164 ) show
0 468 moveto (0165 ) show
0 456 moveto (0166 ) show
0 444 moveto (0167 ) show
0 432 moveto (0168 ) show
0 420 moveto (0169 ) show
0 408 moveto (0170 ) show
0 396 moveto (0171 ) show
0 384 moveto (0172 ) show
0 372 moveto (0173 ) show
0 360 moveto (0174 ) show
0 348 moveto (0175 ) show
0 336 moveto (0176 ) show
0 324 moveto (0177 ) show
0 312 moveto (0178 ) show
0 300 moveto (0179 ) show
0 288 moveto (0180 ) show
0 276 moveto (0181 ) show
0 264 moveto (0182 ) show
0 252 moveto (0183 ) show
0 240 moveto (0184 ) show
0 228 moveto (0185 ) show
0 216 moveto (0186 ) show
0 204 moveto (0187 ) show
0 192 moveto (0188 ) show
0 180 moveto (0189 ) show
0 168 moveto (0190 ) show
0 156 moveto (0191 ) show
0 144 moveto (0192 ) show
0 132 moveto (0193 ) show
0 120 moveto (0194 ) show
0 108 moveto (0195 ) show
0 96 moveto (0196 ) show
0 84 moveto (0197 ) show
0 72 moveto (0198 ) show
0 60 moveto (0199 ) show
0 24 moveto (Sheet 01) show
grestore
restore
showpage
%%Page: 10 10
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/memlayout.h  Page 1) show
0 648 moveto (0200 // Memory layout) show
0 636 moveto (0201 ) show
0 624 moveto (0202 #define EXTMEM  0x100000            // Start of extended memory) show
0 612 moveto (0203 #define PHYSTOP 0xE000000           // Top physical memory) show
0 600 moveto (0204 #define DEVSPACE 0xFE000000         // Other devices are at high addresses) show
0 588 moveto (0205 ) show
0 576 moveto (0206 // Key addresses for address space layout \(see kmap in vm.c for layout\)) show
0 564 moveto (0207 #define KERNBASE 0x80000000         // First kernel virtual address) show
0 552 moveto (0208 #define KERNLINK \(KERNBASE+EXTMEM\)  // Address where kernel is linked) show
0 540 moveto (0209 ) show
0 528 moveto (0210 #ifndef __ASSEMBLER__) show
0 516 moveto (0211 ) show
0 504 moveto (0212 static inline uint v2p\(void *a\) { return \(\(uint\) \(a\)\)  - KERNBASE; }) show
0 492 moveto (0213 static inline void *p2v\(uint a\) { return \(void *\) \(\(a\) + KERNBASE\); }) show
0 480 moveto (0214 ) show
0 468 moveto (0215 #endif) show
0 456 moveto (0216 ) show
0 444 moveto (0217 #define V2P\(a\) \(\(\(uint\) \(a\)\) - KERNBASE\)) show
0 432 moveto (0218 #define P2V\(a\) \(\(\(void *\) \(a\)\) + KERNBASE\)) show
0 420 moveto (0219 ) show
0 408 moveto (0220 #define V2P_WO\(x\) \(\(x\) - KERNBASE\)    // same as V2P, but without casts) show
0 396 moveto (0221 #define P2V_WO\(x\) \(\(x\) + KERNBASE\)    // same as P2V, but without casts) show
0 384 moveto (0222 ) show
0 372 moveto (0223 ) show
0 360 moveto (0224 ) show
0 348 moveto (0225 ) show
0 336 moveto (0226 ) show
0 324 moveto (0227 ) show
0 312 moveto (0228 ) show
0 300 moveto (0229 ) show
0 288 moveto (0230 ) show
0 276 moveto (0231 ) show
0 264 moveto (0232 ) show
0 252 moveto (0233 ) show
0 240 moveto (0234 ) show
0 228 moveto (0235 ) show
0 216 moveto (0236 ) show
0 204 moveto (0237 ) show
0 192 moveto (0238 ) show
0 180 moveto (0239 ) show
0 168 moveto (0240 ) show
0 156 moveto (0241 ) show
0 144 moveto (0242 ) show
0 132 moveto (0243 ) show
0 120 moveto (0244 ) show
0 108 moveto (0245 ) show
0 96 moveto (0246 ) show
0 84 moveto (0247 ) show
0 72 moveto (0248 ) show
0 60 moveto (0249 ) show
0 24 moveto (Sheet 02) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/date.h  Page 1) show
0 648 moveto (0250 struct rtcdate {) show
0 636 moveto (0251   uint second;) show
0 624 moveto (0252   uint minute;) show
0 612 moveto (0253   uint hour;) show
0 600 moveto (0254   uint day;) show
0 588 moveto (0255   uint month;) show
0 576 moveto (0256   uint year;) show
0 564 moveto (0257 };) show
0 552 moveto (0258 ) show
0 540 moveto (0259 ) show
0 528 moveto (0260 ) show
0 516 moveto (0261 ) show
0 504 moveto (0262 ) show
0 492 moveto (0263 ) show
0 480 moveto (0264 ) show
0 468 moveto (0265 ) show
0 456 moveto (0266 ) show
0 444 moveto (0267 ) show
0 432 moveto (0268 ) show
0 420 moveto (0269 ) show
0 408 moveto (0270 ) show
0 396 moveto (0271 ) show
0 384 moveto (0272 ) show
0 372 moveto (0273 ) show
0 360 moveto (0274 ) show
0 348 moveto (0275 ) show
0 336 moveto (0276 ) show
0 324 moveto (0277 ) show
0 312 moveto (0278 ) show
0 300 moveto (0279 ) show
0 288 moveto (0280 ) show
0 276 moveto (0281 ) show
0 264 moveto (0282 ) show
0 252 moveto (0283 ) show
0 240 moveto (0284 ) show
0 228 moveto (0285 ) show
0 216 moveto (0286 ) show
0 204 moveto (0287 ) show
0 192 moveto (0288 ) show
0 180 moveto (0289 ) show
0 168 moveto (0290 ) show
0 156 moveto (0291 ) show
0 144 moveto (0292 ) show
0 132 moveto (0293 ) show
0 120 moveto (0294 ) show
0 108 moveto (0295 ) show
0 96 moveto (0296 ) show
0 84 moveto (0297 ) show
0 72 moveto (0298 ) show
0 60 moveto (0299 ) show
0 24 moveto (Sheet 02) show
grestore
restore
showpage
%%Page: 11 11
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/defs.h  Page 1) show
0 648 moveto (0300 struct buf;) show
0 636 moveto (0301 struct context;) show
0 624 moveto (0302 struct file;) show
0 612 moveto (0303 struct inode;) show
0 600 moveto (0304 struct pipe;) show
0 588 moveto (0305 struct proc;) show
0 576 moveto (0306 struct rtcdate;) show
0 564 moveto (0307 struct spinlock;) show
0 552 moveto (0308 struct stat;) show
0 540 moveto (0309 struct superblock;) show
0 528 moveto (0310 ) show
0 516 moveto (0311 // bio.c) show
0 504 moveto (0312 void            binit\(void\);) show
0 492 moveto (0313 struct buf*     bread\(uint, uint\);) show
0 480 moveto (0314 void            brelse\(struct buf*\);) show
0 468 moveto (0315 void            bwrite\(struct buf*\);) show
0 456 moveto (0316 ) show
0 444 moveto (0317 // console.c) show
0 432 moveto (0318 void            consoleinit\(void\);) show
0 420 moveto (0319 void            cprintf\(char*, ...\);) show
0 408 moveto (0320 void            consoleintr\(int\(*\)\(void\)\);) show
0 396 moveto (0321 void            panic\(char*\) __attribute__\(\(noreturn\)\);) show
0 384 moveto (0322 ) show
0 372 moveto (0323 // exec.c) show
0 360 moveto (0324 int             exec\(char*, char**\);) show
0 348 moveto (0325 ) show
0 336 moveto (0326 // file.c) show
0 324 moveto (0327 struct file*    filealloc\(void\);) show
0 312 moveto (0328 void            fileclose\(struct file*\);) show
0 300 moveto (0329 struct file*    filedup\(struct file*\);) show
0 288 moveto (0330 void            fileinit\(void\);) show
0 276 moveto (0331 int             fileread\(struct file*, char*, int n\);) show
0 264 moveto (0332 int             filestat\(struct file*, struct stat*\);) show
0 252 moveto (0333 int             filewrite\(struct file*, char*, int n\);) show
0 240 moveto (0334 ) show
0 228 moveto (0335 // fs.c) show
0 216 moveto (0336 void            readsb\(int dev, struct superblock *sb\);) show
0 204 moveto (0337 int             dirlink\(struct inode*, char*, uint\);) show
0 192 moveto (0338 struct inode*   dirlookup\(struct inode*, char*, uint*\);) show
0 180 moveto (0339 struct inode*   ialloc\(uint, short\);) show
0 168 moveto (0340 struct inode*   idup\(struct inode*\);) show
0 156 moveto (0341 void            iinit\(int dev\);) show
0 144 moveto (0342 void            ilock\(struct inode*\);) show
0 132 moveto (0343 void            iput\(struct inode*\);) show
0 120 moveto (0344 void            iunlock\(struct inode*\);) show
0 108 moveto (0345 void            iunlockput\(struct inode*\);) show
0 96 moveto (0346 void            iupdate\(struct inode*\);) show
0 84 moveto (0347 int             namecmp\(const char*, const char*\);) show
0 72 moveto (0348 struct inode*   namei\(char*\);) show
0 60 moveto (0349 struct inode*   nameiparent\(char*, char*\);) show
0 24 moveto (Sheet 03) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/defs.h  Page 2) show
0 648 moveto (0350 int             readi\(struct inode*, char*, uint, uint\);) show
0 636 moveto (0351 void            stati\(struct inode*, struct stat*\);) show
0 624 moveto (0352 int             writei\(struct inode*, char*, uint, uint\);) show
0 612 moveto (0353 ) show
0 600 moveto (0354 // ide.c) show
0 588 moveto (0355 void            ideinit\(void\);) show
0 576 moveto (0356 void            ideintr\(void\);) show
0 564 moveto (0357 void            iderw\(struct buf*\);) show
0 552 moveto (0358 ) show
0 540 moveto (0359 // ioapic.c) show
0 528 moveto (0360 void            ioapicenable\(int irq, int cpu\);) show
0 516 moveto (0361 extern uchar    ioapicid;) show
0 504 moveto (0362 void            ioapicinit\(void\);) show
0 492 moveto (0363 ) show
0 480 moveto (0364 // kalloc.c) show
0 468 moveto (0365 char*           kalloc\(void\);) show
0 456 moveto (0366 void            kfree\(char*\);) show
0 444 moveto (0367 void            kinit1\(void*, void*\);) show
0 432 moveto (0368 void            kinit2\(void*, void*\);) show
0 420 moveto (0369 ) show
0 408 moveto (0370 // kbd.c) show
0 396 moveto (0371 void            kbdintr\(void\);) show
0 384 moveto (0372 ) show
0 372 moveto (0373 // lapic.c) show
0 360 moveto (0374 void            cmostime\(struct rtcdate *r\);) show
0 348 moveto (0375 int             cpunum\(void\);) show
0 336 moveto (0376 extern volatile uint*    lapic;) show
0 324 moveto (0377 void            lapiceoi\(void\);) show
0 312 moveto (0378 void            lapicinit\(void\);) show
0 300 moveto (0379 void            lapicstartap\(uchar, uint\);) show
0 288 moveto (0380 void            microdelay\(int\);) show
0 276 moveto (0381 ) show
0 264 moveto (0382 // log.c) show
0 252 moveto (0383 void            initlog\(int dev\);) show
0 240 moveto (0384 void            log_write\(struct buf*\);) show
0 228 moveto (0385 void            begin_op\(\);) show
0 216 moveto (0386 void            end_op\(\);) show
0 204 moveto (0387 ) show
0 192 moveto (0388 // mp.c) show
0 180 moveto (0389 extern int      ismp;) show
0 168 moveto (0390 int             mpbcpu\(void\);) show
0 156 moveto (0391 void            mpinit\(void\);) show
0 144 moveto (0392 void            mpstartthem\(void\);) show
0 132 moveto (0393 ) show
0 120 moveto (0394 // picirq.c) show
0 108 moveto (0395 void            picenable\(int\);) show
0 96 moveto (0396 void            picinit\(void\);) show
0 84 moveto (0397 ) show
0 72 moveto (0398 ) show
0 60 moveto (0399 ) show
0 24 moveto (Sheet 03) show
grestore
restore
showpage
%%Page: 12 12
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/defs.h  Page 3) show
0 648 moveto (0400 // pipe.c) show
0 636 moveto (0401 int             pipealloc\(struct file**, struct file**\);) show
0 624 moveto (0402 void            pipeclose\(struct pipe*, int\);) show
0 612 moveto (0403 int             piperead\(struct pipe*, char*, int\);) show
0 600 moveto (0404 int             pipewrite\(struct pipe*, char*, int\);) show
0 588 moveto (0405 ) show
0 576 moveto (0406 // proc.c) show
0 564 moveto (0407 struct proc*    copyproc\(struct proc*\);) show
0 552 moveto (0408 void            exit\(void\);) show
0 540 moveto (0409 int             fork\(void\);) show
0 528 moveto (0410 int             growproc\(int\);) show
0 516 moveto (0411 int             kill\(int\);) show
0 504 moveto (0412 void            pinit\(void\);) show
0 492 moveto (0413 void            procdump\(void\);) show
0 480 moveto (0414 void            scheduler\(void\) __attribute__\(\(noreturn\)\);) show
0 468 moveto (0415 void            sched\(void\);) show
0 456 moveto (0416 void            sleep\(void*, struct spinlock*\);) show
0 444 moveto (0417 void            userinit\(void\);) show
0 432 moveto (0418 int             wait\(void\);) show
0 420 moveto (0419 void            wakeup\(void*\);) show
0 408 moveto (0420 void            yield\(void\);) show
0 396 moveto (0421 ) show
0 384 moveto (0422 // swtch.S) show
0 372 moveto (0423 void            swtch\(struct context**, struct context*\);) show
0 360 moveto (0424 ) show
0 348 moveto (0425 // spinlock.c) show
0 336 moveto (0426 void            acquire\(struct spinlock*\);) show
0 324 moveto (0427 void            getcallerpcs\(void*, uint*\);) show
0 312 moveto (0428 int             holding\(struct spinlock*\);) show
0 300 moveto (0429 void            initlock\(struct spinlock*, char*\);) show
0 288 moveto (0430 void            release\(struct spinlock*\);) show
0 276 moveto (0431 void            pushcli\(void\);) show
0 264 moveto (0432 void            popcli\(void\);) show
0 252 moveto (0433 ) show
0 240 moveto (0434 // string.c) show
0 228 moveto (0435 int             memcmp\(const void*, const void*, uint\);) show
0 216 moveto (0436 void*           memmove\(void*, const void*, uint\);) show
0 204 moveto (0437 void*           memset\(void*, int, uint\);) show
0 192 moveto (0438 char*           safestrcpy\(char*, const char*, int\);) show
0 180 moveto (0439 int             strlen\(const char*\);) show
0 168 moveto (0440 int             strncmp\(const char*, const char*, uint\);) show
0 156 moveto (0441 char*           strncpy\(char*, const char*, int\);) show
0 144 moveto (0442 ) show
0 132 moveto (0443 // syscall.c) show
0 120 moveto (0444 int             argint\(int, int*\);) show
0 108 moveto (0445 int             argptr\(int, char**, int\);) show
0 96 moveto (0446 int             argstr\(int, char**\);) show
0 84 moveto (0447 int             fetchint\(uint, int*\);) show
0 72 moveto (0448 int             fetchstr\(uint, char**\);) show
0 60 moveto (0449 void            syscall\(void\);) show
0 24 moveto (Sheet 04) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/defs.h  Page 4) show
0 648 moveto (0450 // timer.c) show
0 636 moveto (0451 void            timerinit\(void\);) show
0 624 moveto (0452 ) show
0 612 moveto (0453 // trap.c) show
0 600 moveto (0454 void            idtinit\(void\);) show
0 588 moveto (0455 extern uint     ticks;) show
0 576 moveto (0456 void            tvinit\(void\);) show
0 564 moveto (0457 extern struct spinlock tickslock;) show
0 552 moveto (0458 ) show
0 540 moveto (0459 // uart.c) show
0 528 moveto (0460 void            uartinit\(void\);) show
0 516 moveto (0461 void            uartintr\(void\);) show
0 504 moveto (0462 void            uartputc\(int\);) show
0 492 moveto (0463 ) show
0 480 moveto (0464 // vm.c) show
0 468 moveto (0465 void            seginit\(void\);) show
0 456 moveto (0466 void            kvmalloc\(void\);) show
0 444 moveto (0467 void            vmenable\(void\);) show
0 432 moveto (0468 pde_t*          setupkvm\(void\);) show
0 420 moveto (0469 char*           uva2ka\(pde_t*, char*\);) show
0 408 moveto (0470 int             allocuvm\(pde_t*, uint, uint\);) show
0 396 moveto (0471 int             deallocuvm\(pde_t*, uint, uint\);) show
0 384 moveto (0472 void            freevm\(pde_t*\);) show
0 372 moveto (0473 void            inituvm\(pde_t*, char*, uint\);) show
0 360 moveto (0474 int             loaduvm\(pde_t*, char*, struct inode*, uint, uint\);) show
0 348 moveto (0475 pde_t*          copyuvm\(pde_t*, uint\);) show
0 336 moveto (0476 void            switchuvm\(struct proc*\);) show
0 324 moveto (0477 void            switchkvm\(void\);) show
0 312 moveto (0478 int             copyout\(pde_t*, uint, void*, uint\);) show
0 300 moveto (0479 void            clearpteu\(pde_t *pgdir, char *uva\);) show
0 288 moveto (0480 ) show
0 276 moveto (0481 // number of elements in fixed-size array) show
0 264 moveto (0482 #define NELEM\(x\) \(sizeof\(x\)/sizeof\(\(x\)[0]\)\)) show
0 252 moveto (0483 ) show
0 240 moveto (0484 ) show
0 228 moveto (0485 ) show
0 216 moveto (0486 ) show
0 204 moveto (0487 ) show
0 192 moveto (0488 ) show
0 180 moveto (0489 ) show
0 168 moveto (0490 ) show
0 156 moveto (0491 ) show
0 144 moveto (0492 ) show
0 132 moveto (0493 ) show
0 120 moveto (0494 ) show
0 108 moveto (0495 ) show
0 96 moveto (0496 ) show
0 84 moveto (0497 ) show
0 72 moveto (0498 ) show
0 60 moveto (0499 ) show
0 24 moveto (Sheet 04) show
grestore
restore
showpage
%%Page: 13 13
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/x86.h  Page 1) show
0 648 moveto (0500 // Routines to let C code use special x86 instructions.) show
0 636 moveto (0501 ) show
0 624 moveto (0502 static inline uchar) show
0 612 moveto (0503 inb\(ushort port\)) show
0 600 moveto (0504 {) show
0 588 moveto (0505   uchar data;) show
0 576 moveto (0506 ) show
0 564 moveto (0507   asm volatile\("in %1,%0" : "=a" \(data\) : "d" \(port\)\);) show
0 552 moveto (0508   return data;) show
0 540 moveto (0509 }) show
0 528 moveto (0510 ) show
0 516 moveto (0511 static inline void) show
0 504 moveto (0512 insl\(int port, void *addr, int cnt\)) show
0 492 moveto (0513 {) show
0 480 moveto (0514   asm volatile\("cld; rep insl" :) show
0 468 moveto (0515                "=D" \(addr\), "=c" \(cnt\) :) show
0 456 moveto (0516                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 444 moveto (0517                "memory", "cc"\);) show
0 432 moveto (0518 }) show
0 420 moveto (0519 ) show
0 408 moveto (0520 static inline void) show
0 396 moveto (0521 outb\(ushort port, uchar data\)) show
0 384 moveto (0522 {) show
0 372 moveto (0523   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 360 moveto (0524 }) show
0 348 moveto (0525 ) show
0 336 moveto (0526 static inline void) show
0 324 moveto (0527 outw\(ushort port, ushort data\)) show
0 312 moveto (0528 {) show
0 300 moveto (0529   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 288 moveto (0530 }) show
0 276 moveto (0531 ) show
0 264 moveto (0532 static inline void) show
0 252 moveto (0533 outsl\(int port, const void *addr, int cnt\)) show
0 240 moveto (0534 {) show
0 228 moveto (0535   asm volatile\("cld; rep outsl" :) show
0 216 moveto (0536                "=S" \(addr\), "=c" \(cnt\) :) show
0 204 moveto (0537                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 192 moveto (0538                "cc"\);) show
0 180 moveto (0539 }) show
0 168 moveto (0540 ) show
0 156 moveto (0541 static inline void) show
0 144 moveto (0542 stosb\(void *addr, int data, int cnt\)) show
0 132 moveto (0543 {) show
0 120 moveto (0544   asm volatile\("cld; rep stosb" :) show
0 108 moveto (0545                "=D" \(addr\), "=c" \(cnt\) :) show
0 96 moveto (0546                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 84 moveto (0547                "memory", "cc"\);) show
0 72 moveto (0548 }) show
0 60 moveto (0549 ) show
0 24 moveto (Sheet 05) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/x86.h  Page 2) show
0 648 moveto (0550 static inline void) show
0 636 moveto (0551 stosl\(void *addr, int data, int cnt\)) show
0 624 moveto (0552 {) show
0 612 moveto (0553   asm volatile\("cld; rep stosl" :) show
0 600 moveto (0554                "=D" \(addr\), "=c" \(cnt\) :) show
0 588 moveto (0555                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 576 moveto (0556                "memory", "cc"\);) show
0 564 moveto (0557 }) show
0 552 moveto (0558 ) show
0 540 moveto (0559 struct segdesc;) show
0 528 moveto (0560 ) show
0 516 moveto (0561 static inline void) show
0 504 moveto (0562 lgdt\(struct segdesc *p, int size\)) show
0 492 moveto (0563 {) show
0 480 moveto (0564   volatile ushort pd[3];) show
0 468 moveto (0565 ) show
0 456 moveto (0566   pd[0] = size-1;) show
0 444 moveto (0567   pd[1] = \(uint\)p;) show
0 432 moveto (0568   pd[2] = \(uint\)p >> 16;) show
0 420 moveto (0569 ) show
0 408 moveto (0570   asm volatile\("lgdt \(%0\)" : : "r" \(pd\)\);) show
0 396 moveto (0571 }) show
0 384 moveto (0572 ) show
0 372 moveto (0573 struct gatedesc;) show
0 360 moveto (0574 ) show
0 348 moveto (0575 static inline void) show
0 336 moveto (0576 lidt\(struct gatedesc *p, int size\)) show
0 324 moveto (0577 {) show
0 312 moveto (0578   volatile ushort pd[3];) show
0 300 moveto (0579 ) show
0 288 moveto (0580   pd[0] = size-1;) show
0 276 moveto (0581   pd[1] = \(uint\)p;) show
0 264 moveto (0582   pd[2] = \(uint\)p >> 16;) show
0 252 moveto (0583 ) show
0 240 moveto (0584   asm volatile\("lidt \(%0\)" : : "r" \(pd\)\);) show
0 228 moveto (0585 }) show
0 216 moveto (0586 ) show
0 204 moveto (0587 static inline void) show
0 192 moveto (0588 ltr\(ushort sel\)) show
0 180 moveto (0589 {) show
0 168 moveto (0590   asm volatile\("ltr %0" : : "r" \(sel\)\);) show
0 156 moveto (0591 }) show
0 144 moveto (0592 ) show
0 132 moveto (0593 static inline uint) show
0 120 moveto (0594 readeflags\(void\)) show
0 108 moveto (0595 {) show
0 96 moveto (0596   uint eflags;) show
0 84 moveto (0597   asm volatile\("pushfl; popl %0" : "=r" \(eflags\)\);) show
0 72 moveto (0598   return eflags;) show
0 60 moveto (0599 }) show
0 24 moveto (Sheet 05) show
grestore
restore
showpage
%%Page: 14 14
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/x86.h  Page 3) show
0 648 moveto (0600 static inline void) show
0 636 moveto (0601 loadgs\(ushort v\)) show
0 624 moveto (0602 {) show
0 612 moveto (0603   asm volatile\("movw %0, %%gs" : : "r" \(v\)\);) show
0 600 moveto (0604 }) show
0 588 moveto (0605 ) show
0 576 moveto (0606 static inline void) show
0 564 moveto (0607 cli\(void\)) show
0 552 moveto (0608 {) show
0 540 moveto (0609   asm volatile\("cli"\);) show
0 528 moveto (0610 }) show
0 516 moveto (0611 ) show
0 504 moveto (0612 static inline void) show
0 492 moveto (0613 sti\(void\)) show
0 480 moveto (0614 {) show
0 468 moveto (0615   asm volatile\("sti"\);) show
0 456 moveto (0616 }) show
0 444 moveto (0617 ) show
0 432 moveto (0618 static inline uint) show
0 420 moveto (0619 xchg\(volatile uint *addr, uint newval\)) show
0 408 moveto (0620 {) show
0 396 moveto (0621   uint result;) show
0 384 moveto (0622 ) show
0 372 moveto (0623   // The + in "+m" denotes a read-modify-write operand.) show
0 360 moveto (0624   asm volatile\("lock; xchgl %0, %1" :) show
0 348 moveto (0625                "+m" \(*addr\), "=a" \(result\) :) show
0 336 moveto (0626                "1" \(newval\) :) show
0 324 moveto (0627                "cc"\);) show
0 312 moveto (0628   return result;) show
0 300 moveto (0629 }) show
0 288 moveto (0630 ) show
0 276 moveto (0631 static inline uint) show
0 264 moveto (0632 rcr2\(void\)) show
0 252 moveto (0633 {) show
0 240 moveto (0634   uint val;) show
0 228 moveto (0635   asm volatile\("movl %%cr2,%0" : "=r" \(val\)\);) show
0 216 moveto (0636   return val;) show
0 204 moveto (0637 }) show
0 192 moveto (0638 ) show
0 180 moveto (0639 static inline void) show
0 168 moveto (0640 lcr3\(uint val\)) show
0 156 moveto (0641 {) show
0 144 moveto (0642   asm volatile\("movl %0,%%cr3" : : "r" \(val\)\);) show
0 132 moveto (0643 }) show
0 120 moveto (0644 ) show
0 108 moveto (0645 ) show
0 96 moveto (0646 ) show
0 84 moveto (0647 ) show
0 72 moveto (0648 ) show
0 60 moveto (0649 ) show
0 24 moveto (Sheet 06) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/x86.h  Page 4) show
0 648 moveto (0650 // Layout of the trap frame built on the stack by the) show
0 636 moveto (0651 // hardware and by trapasm.S, and passed to trap\(\).) show
0 624 moveto (0652 struct trapframe {) show
0 612 moveto (0653   // registers as pushed by pusha) show
0 600 moveto (0654   uint edi;) show
0 588 moveto (0655   uint esi;) show
0 576 moveto (0656   uint ebp;) show
0 564 moveto (0657   uint oesp;      // useless & ignored) show
0 552 moveto (0658   uint ebx;) show
0 540 moveto (0659   uint edx;) show
0 528 moveto (0660   uint ecx;) show
0 516 moveto (0661   uint eax;) show
0 504 moveto (0662 ) show
0 492 moveto (0663   // rest of trap frame) show
0 480 moveto (0664   ushort gs;) show
0 468 moveto (0665   ushort padding1;) show
0 456 moveto (0666   ushort fs;) show
0 444 moveto (0667   ushort padding2;) show
0 432 moveto (0668   ushort es;) show
0 420 moveto (0669   ushort padding3;) show
0 408 moveto (0670   ushort ds;) show
0 396 moveto (0671   ushort padding4;) show
0 384 moveto (0672   uint trapno;) show
0 372 moveto (0673 ) show
0 360 moveto (0674   // below here defined by x86 hardware) show
0 348 moveto (0675   uint err;) show
0 336 moveto (0676   uint eip;) show
0 324 moveto (0677   ushort cs;) show
0 312 moveto (0678   ushort padding5;) show
0 300 moveto (0679   uint eflags;) show
0 288 moveto (0680 ) show
0 276 moveto (0681   // below here only when crossing rings, such as from user to kernel) show
0 264 moveto (0682   uint esp;) show
0 252 moveto (0683   ushort ss;) show
0 240 moveto (0684   ushort padding6;) show
0 228 moveto (0685 };) show
0 216 moveto (0686 ) show
0 204 moveto (0687 ) show
0 192 moveto (0688 ) show
0 180 moveto (0689 ) show
0 168 moveto (0690 ) show
0 156 moveto (0691 ) show
0 144 moveto (0692 ) show
0 132 moveto (0693 ) show
0 120 moveto (0694 ) show
0 108 moveto (0695 ) show
0 96 moveto (0696 ) show
0 84 moveto (0697 ) show
0 72 moveto (0698 ) show
0 60 moveto (0699 ) show
0 24 moveto (Sheet 06) show
grestore
restore
showpage
%%Page: 15 15
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/asm.h  Page 1) show
0 648 moveto (0700 //) show
0 636 moveto (0701 // assembler macros to create x86 segments) show
0 624 moveto (0702 //) show
0 612 moveto (0703 ) show
0 600 moveto (0704 #define SEG_NULLASM                                             \\) show
0 588 moveto (0705         .word 0, 0;                                             \\) show
0 576 moveto (0706         .byte 0, 0, 0, 0) show
0 564 moveto (0707 ) show
0 552 moveto (0708 // The 0xC0 means the limit is in 4096-byte units) show
0 540 moveto (0709 // and \(for executable segments\) 32-bit mode.) show
0 528 moveto (0710 #define SEG_ASM\(type,base,lim\)                                  \\) show
0 516 moveto (0711         .word \(\(\(lim\) >> 12\) & 0xffff\), \(\(base\) & 0xffff\);      \\) show
0 504 moveto (0712         .byte \(\(\(base\) >> 16\) & 0xff\), \(0x90 | \(type\)\),         \\) show
0 492 moveto (0713                 \(0xC0 | \(\(\(lim\) >> 28\) & 0xf\)\), \(\(\(base\) >> 24\) & 0xff\)) show
0 480 moveto (0714 ) show
0 468 moveto (0715 #define STA_X     0x8       // Executable segment) show
0 456 moveto (0716 #define STA_E     0x4       // Expand down \(non-executable segments\)) show
0 444 moveto (0717 #define STA_C     0x4       // Conforming code segment \(executable only\)) show
0 432 moveto (0718 #define STA_W     0x2       // Writeable \(non-executable segments\)) show
0 420 moveto (0719 #define STA_R     0x2       // Readable \(executable segments\)) show
0 408 moveto (0720 #define STA_A     0x1       // Accessed) show
0 396 moveto (0721 ) show
0 384 moveto (0722 ) show
0 372 moveto (0723 ) show
0 360 moveto (0724 ) show
0 348 moveto (0725 ) show
0 336 moveto (0726 ) show
0 324 moveto (0727 ) show
0 312 moveto (0728 ) show
0 300 moveto (0729 ) show
0 288 moveto (0730 ) show
0 276 moveto (0731 ) show
0 264 moveto (0732 ) show
0 252 moveto (0733 ) show
0 240 moveto (0734 ) show
0 228 moveto (0735 ) show
0 216 moveto (0736 ) show
0 204 moveto (0737 ) show
0 192 moveto (0738 ) show
0 180 moveto (0739 ) show
0 168 moveto (0740 ) show
0 156 moveto (0741 ) show
0 144 moveto (0742 ) show
0 132 moveto (0743 ) show
0 120 moveto (0744 ) show
0 108 moveto (0745 ) show
0 96 moveto (0746 ) show
0 84 moveto (0747 ) show
0 72 moveto (0748 ) show
0 60 moveto (0749 ) show
0 24 moveto (Sheet 07) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mmu.h  Page 1) show
0 648 moveto (0750 // This file contains definitions for the) show
0 636 moveto (0751 // x86 memory management unit \(MMU\).) show
0 624 moveto (0752 ) show
0 612 moveto (0753 // Eflags register) show
0 600 moveto (0754 #define FL_CF           0x00000001      // Carry Flag) show
0 588 moveto (0755 #define FL_PF           0x00000004      // Parity Flag) show
0 576 moveto (0756 #define FL_AF           0x00000010      // Auxiliary carry Flag) show
0 564 moveto (0757 #define FL_ZF           0x00000040      // Zero Flag) show
0 552 moveto (0758 #define FL_SF           0x00000080      // Sign Flag) show
0 540 moveto (0759 #define FL_TF           0x00000100      // Trap Flag) show
0 528 moveto (0760 #define FL_IF           0x00000200      // Interrupt Enable) show
0 516 moveto (0761 #define FL_DF           0x00000400      // Direction Flag) show
0 504 moveto (0762 #define FL_OF           0x00000800      // Overflow Flag) show
0 492 moveto (0763 #define FL_IOPL_MASK    0x00003000      // I/O Privilege Level bitmask) show
0 480 moveto (0764 #define FL_IOPL_0       0x00000000      //   IOPL == 0) show
0 468 moveto (0765 #define FL_IOPL_1       0x00001000      //   IOPL == 1) show
0 456 moveto (0766 #define FL_IOPL_2       0x00002000      //   IOPL == 2) show
0 444 moveto (0767 #define FL_IOPL_3       0x00003000      //   IOPL == 3) show
0 432 moveto (0768 #define FL_NT           0x00004000      // Nested Task) show
0 420 moveto (0769 #define FL_RF           0x00010000      // Resume Flag) show
0 408 moveto (0770 #define FL_VM           0x00020000      // Virtual 8086 mode) show
0 396 moveto (0771 #define FL_AC           0x00040000      // Alignment Check) show
0 384 moveto (0772 #define FL_VIF          0x00080000      // Virtual Interrupt Flag) show
0 372 moveto (0773 #define FL_VIP          0x00100000      // Virtual Interrupt Pending) show
0 360 moveto (0774 #define FL_ID           0x00200000      // ID flag) show
0 348 moveto (0775 ) show
0 336 moveto (0776 // Control Register flags) show
0 324 moveto (0777 #define CR0_PE          0x00000001      // Protection Enable) show
0 312 moveto (0778 #define CR0_MP          0x00000002      // Monitor coProcessor) show
0 300 moveto (0779 #define CR0_EM          0x00000004      // Emulation) show
0 288 moveto (0780 #define CR0_TS          0x00000008      // Task Switched) show
0 276 moveto (0781 #define CR0_ET          0x00000010      // Extension Type) show
0 264 moveto (0782 #define CR0_NE          0x00000020      // Numeric Errror) show
0 252 moveto (0783 #define CR0_WP          0x00010000      // Write Protect) show
0 240 moveto (0784 #define CR0_AM          0x00040000      // Alignment Mask) show
0 228 moveto (0785 #define CR0_NW          0x20000000      // Not Writethrough) show
0 216 moveto (0786 #define CR0_CD          0x40000000      // Cache Disable) show
0 204 moveto (0787 #define CR0_PG          0x80000000      // Paging) show
0 192 moveto (0788 ) show
0 180 moveto (0789 #define CR4_PSE         0x00000010      // Page size extension) show
0 168 moveto (0790 ) show
0 156 moveto (0791 #define SEG_KCODE 1  // kernel code) show
0 144 moveto (0792 #define SEG_KDATA 2  // kernel data+stack) show
0 132 moveto (0793 #define SEG_KCPU  3  // kernel per-cpu data) show
0 120 moveto (0794 #define SEG_UCODE 4  // user code) show
0 108 moveto (0795 #define SEG_UDATA 5  // user data+stack) show
0 96 moveto (0796 #define SEG_TSS   6  // this process's task state) show
0 84 moveto (0797 ) show
0 72 moveto (0798 ) show
0 60 moveto (0799 ) show
0 24 moveto (Sheet 07) show
grestore
restore
showpage
%%Page: 16 16
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mmu.h  Page 2) show
0 648 moveto (0800 #ifndef __ASSEMBLER__) show
0 636 moveto (0801 // Segment Descriptor) show
0 624 moveto (0802 struct segdesc {) show
0 612 moveto (0803   uint lim_15_0 : 16;  // Low bits of segment limit) show
0 600 moveto (0804   uint base_15_0 : 16; // Low bits of segment base address) show
0 588 moveto (0805   uint base_23_16 : 8; // Middle bits of segment base address) show
0 576 moveto (0806   uint type : 4;       // Segment type \(see STS_ constants\)) show
0 564 moveto (0807   uint s : 1;          // 0 = system, 1 = application) show
0 552 moveto (0808   uint dpl : 2;        // Descriptor Privilege Level) show
0 540 moveto (0809   uint p : 1;          // Present) show
0 528 moveto (0810   uint lim_19_16 : 4;  // High bits of segment limit) show
0 516 moveto (0811   uint avl : 1;        // Unused \(available for software use\)) show
0 504 moveto (0812   uint rsv1 : 1;       // Reserved) show
0 492 moveto (0813   uint db : 1;         // 0 = 16-bit segment, 1 = 32-bit segment) show
0 480 moveto (0814   uint g : 1;          // Granularity: limit scaled by 4K when set) show
0 468 moveto (0815   uint base_31_24 : 8; // High bits of segment base address) show
0 456 moveto (0816 };) show
0 444 moveto (0817 ) show
0 432 moveto (0818 // Normal segment) show
0 420 moveto (0819 #define SEG\(type, base, lim, dpl\) \(struct segdesc\)    \\) show
0 408 moveto (0820 { \(\(lim\) >> 12\) & 0xffff, \(uint\)\(base\) & 0xffff,      \\) show
0 396 moveto (0821   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 384 moveto (0822   \(uint\)\(lim\) >> 28, 0, 0, 1, 1, \(uint\)\(base\) >> 24 }) show
0 372 moveto (0823 #define SEG16\(type, base, lim, dpl\) \(struct segdesc\)  \\) show
0 360 moveto (0824 { \(lim\) & 0xffff, \(uint\)\(base\) & 0xffff,              \\) show
0 348 moveto (0825   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 336 moveto (0826   \(uint\)\(lim\) >> 16, 0, 0, 1, 0, \(uint\)\(base\) >> 24 }) show
0 324 moveto (0827 #endif) show
0 312 moveto (0828 ) show
0 300 moveto (0829 #define DPL_USER    0x3     // User DPL) show
0 288 moveto (0830 ) show
0 276 moveto (0831 // Application segment type bits) show
0 264 moveto (0832 #define STA_X       0x8     // Executable segment) show
0 252 moveto (0833 #define STA_E       0x4     // Expand down \(non-executable segments\)) show
0 240 moveto (0834 #define STA_C       0x4     // Conforming code segment \(executable only\)) show
0 228 moveto (0835 #define STA_W       0x2     // Writeable \(non-executable segments\)) show
0 216 moveto (0836 #define STA_R       0x2     // Readable \(executable segments\)) show
0 204 moveto (0837 #define STA_A       0x1     // Accessed) show
0 192 moveto (0838 ) show
0 180 moveto (0839 // System segment type bits) show
0 168 moveto (0840 #define STS_T16A    0x1     // Available 16-bit TSS) show
0 156 moveto (0841 #define STS_LDT     0x2     // Local Descriptor Table) show
0 144 moveto (0842 #define STS_T16B    0x3     // Busy 16-bit TSS) show
0 132 moveto (0843 #define STS_CG16    0x4     // 16-bit Call Gate) show
0 120 moveto (0844 #define STS_TG      0x5     // Task Gate / Coum Transmitions) show
0 108 moveto (0845 #define STS_IG16    0x6     // 16-bit Interrupt Gate) show
0 96 moveto (0846 #define STS_TG16    0x7     // 16-bit Trap Gate) show
0 84 moveto (0847 #define STS_T32A    0x9     // Available 32-bit TSS) show
0 72 moveto (0848 #define STS_T32B    0xB     // Busy 32-bit TSS) show
0 60 moveto (0849 #define STS_CG32    0xC     // 32-bit Call Gate) show
0 24 moveto (Sheet 08) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mmu.h  Page 3) show
0 648 moveto (0850 #define STS_IG32    0xE     // 32-bit Interrupt Gate) show
0 636 moveto (0851 #define STS_TG32    0xF     // 32-bit Trap Gate) show
0 624 moveto (0852 ) show
0 612 moveto (0853 // A virtual address 'la' has a three-part structure as follows:) show
0 600 moveto (0854 //) show
0 588 moveto (0855 // +--------10------+-------10-------+---------12----------+) show
0 576 moveto (0856 // | Page Directory |   Page Table   | Offset within Page  |) show
0 564 moveto (0857 // |      Index     |      Index     |                     |) show
0 552 moveto (0858 // +----------------+----------------+---------------------+) show
0 540 moveto (0859 //  \\--- PDX\(va\) --/ \\--- PTX\(va\) --/) show
0 528 moveto (0860 ) show
0 516 moveto (0861 // page directory index) show
0 504 moveto (0862 #define PDX\(va\)         \(\(\(uint\)\(va\) >> PDXSHIFT\) & 0x3FF\)) show
0 492 moveto (0863 ) show
0 480 moveto (0864 // page table index) show
0 468 moveto (0865 #define PTX\(va\)         \(\(\(uint\)\(va\) >> PTXSHIFT\) & 0x3FF\)) show
0 456 moveto (0866 ) show
0 444 moveto (0867 // construct virtual address from indexes and offset) show
0 432 moveto (0868 #define PGADDR\(d, t, o\) \(\(uint\)\(\(d\) << PDXSHIFT | \(t\) << PTXSHIFT | \(o\)\)\)) show
0 420 moveto (0869 ) show
0 408 moveto (0870 // Page directory and page table constants.) show
0 396 moveto (0871 #define NPDENTRIES      1024    // # directory entries per page directory) show
0 384 moveto (0872 #define NPTENTRIES      1024    // # PTEs per page table) show
0 372 moveto (0873 #define PGSIZE          4096    // bytes mapped by a page) show
0 360 moveto (0874 ) show
0 348 moveto (0875 #define PGSHIFT         12      // log2\(PGSIZE\)) show
0 336 moveto (0876 #define PTXSHIFT        12      // offset of PTX in a linear address) show
0 324 moveto (0877 #define PDXSHIFT        22      // offset of PDX in a linear address) show
0 312 moveto (0878 ) show
0 300 moveto (0879 #define PGROUNDUP\(sz\)  \(\(\(sz\)+PGSIZE-1\) & ~\(PGSIZE-1\)\)) show
0 288 moveto (0880 #define PGROUNDDOWN\(a\) \(\(\(a\)\) & ~\(PGSIZE-1\)\)) show
0 276 moveto (0881 ) show
0 264 moveto (0882 // Page table/directory entry flags.) show
0 252 moveto (0883 #define PTE_P           0x001   // Present) show
0 240 moveto (0884 #define PTE_W           0x002   // Writeable) show
0 228 moveto (0885 #define PTE_U           0x004   // User) show
0 216 moveto (0886 #define PTE_PWT         0x008   // Write-Through) show
0 204 moveto (0887 #define PTE_PCD         0x010   // Cache-Disable) show
0 192 moveto (0888 #define PTE_A           0x020   // Accessed) show
0 180 moveto (0889 #define PTE_D           0x040   // Dirty) show
0 168 moveto (0890 #define PTE_PS          0x080   // Page Size) show
0 156 moveto (0891 #define PTE_MBZ         0x180   // Bits must be zero) show
0 144 moveto (0892 ) show
0 132 moveto (0893 // Address in page table or page directory entry) show
0 120 moveto (0894 #define PTE_ADDR\(pte\)   \(\(uint\)\(pte\) & ~0xFFF\)) show
0 108 moveto (0895 #define PTE_FLAGS\(pte\)  \(\(uint\)\(pte\) &  0xFFF\)) show
0 96 moveto (0896 ) show
0 84 moveto (0897 #ifndef __ASSEMBLER__) show
0 72 moveto (0898 typedef uint pte_t;) show
0 60 moveto (0899 ) show
0 24 moveto (Sheet 08) show
grestore
restore
showpage
%%Page: 17 17
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mmu.h  Page 4) show
0 648 moveto (0900 // Task state segment format) show
0 636 moveto (0901 struct taskstate {) show
0 624 moveto (0902   uint link;         // Old ts selector) show
0 612 moveto (0903   uint esp0;         // Stack pointers and segment selectors) show
0 600 moveto (0904   ushort ss0;        //   after an increase in privilege level) show
0 588 moveto (0905   ushort padding1;) show
0 576 moveto (0906   uint *esp1;) show
0 564 moveto (0907   ushort ss1;) show
0 552 moveto (0908   ushort padding2;) show
0 540 moveto (0909   uint *esp2;) show
0 528 moveto (0910   ushort ss2;) show
0 516 moveto (0911   ushort padding3;) show
0 504 moveto (0912   void *cr3;         // Page directory base) show
0 492 moveto (0913   uint *eip;         // Saved state from last task switch) show
0 480 moveto (0914   uint eflags;) show
0 468 moveto (0915   uint eax;          // More saved state \(registers\)) show
0 456 moveto (0916   uint ecx;) show
0 444 moveto (0917   uint edx;) show
0 432 moveto (0918   uint ebx;) show
0 420 moveto (0919   uint *esp;) show
0 408 moveto (0920   uint *ebp;) show
0 396 moveto (0921   uint esi;) show
0 384 moveto (0922   uint edi;) show
0 372 moveto (0923   ushort es;         // Even more saved state \(segment selectors\)) show
0 360 moveto (0924   ushort padding4;) show
0 348 moveto (0925   ushort cs;) show
0 336 moveto (0926   ushort padding5;) show
0 324 moveto (0927   ushort ss;) show
0 312 moveto (0928   ushort padding6;) show
0 300 moveto (0929   ushort ds;) show
0 288 moveto (0930   ushort padding7;) show
0 276 moveto (0931   ushort fs;) show
0 264 moveto (0932   ushort padding8;) show
0 252 moveto (0933   ushort gs;) show
0 240 moveto (0934   ushort padding9;) show
0 228 moveto (0935   ushort ldt;) show
0 216 moveto (0936   ushort padding10;) show
0 204 moveto (0937   ushort t;          // Trap on task switch) show
0 192 moveto (0938   ushort iomb;       // I/O map base address) show
0 180 moveto (0939 };) show
0 168 moveto (0940 ) show
0 156 moveto (0941 ) show
0 144 moveto (0942 ) show
0 132 moveto (0943 ) show
0 120 moveto (0944 ) show
0 108 moveto (0945 ) show
0 96 moveto (0946 ) show
0 84 moveto (0947 ) show
0 72 moveto (0948 ) show
0 60 moveto (0949 ) show
0 24 moveto (Sheet 09) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mmu.h  Page 5) show
0 648 moveto (0950 // Gate descriptors for interrupts and traps) show
0 636 moveto (0951 struct gatedesc {) show
0 624 moveto (0952   uint off_15_0 : 16;   // low 16 bits of offset in segment) show
0 612 moveto (0953   uint cs : 16;         // code segment selector) show
0 600 moveto (0954   uint args : 5;        // # args, 0 for interrupt/trap gates) show
0 588 moveto (0955   uint rsv1 : 3;        // reserved\(should be zero I guess\)) show
0 576 moveto (0956   uint type : 4;        // type\(STS_{TG,IG32,TG32}\)) show
0 564 moveto (0957   uint s : 1;           // must be 0 \(system\)) show
0 552 moveto (0958   uint dpl : 2;         // descriptor\(meaning new\) privilege level) show
0 540 moveto (0959   uint p : 1;           // Present) show
0 528 moveto (0960   uint off_31_16 : 16;  // high bits of offset in segment) show
0 516 moveto (0961 };) show
0 504 moveto (0962 ) show
0 492 moveto (0963 // Set up a normal interrupt/trap gate descriptor.) show
0 480 moveto (0964 // - istrap: 1 for a trap \(= exception\) gate, 0 for an interrupt gate.) show
0 468 moveto (0965 //   interrupt gate clears FL_IF, trap gate leaves FL_IF alone) show
0 456 moveto (0966 // - sel: Code segment selector for interrupt/trap handler) show
0 444 moveto (0967 // - off: Offset in code segment for interrupt/trap handler) show
0 432 moveto (0968 // - dpl: Descriptor Privilege Level -) show
0 420 moveto (0969 //        the privilege level required for software to invoke) show
0 408 moveto (0970 //        this interrupt/trap gate explicitly using an int instruction.) show
0 396 moveto (0971 #define SETGATE\(gate, istrap, sel, off, d\)                \\) show
0 384 moveto (0972 {                                                         \\) show
0 372 moveto (0973   \(gate\).off_15_0 = \(uint\)\(off\) & 0xffff;                \\) show
0 360 moveto (0974   \(gate\).cs = \(sel\);                                      \\) show
0 348 moveto (0975   \(gate\).args = 0;                                        \\) show
0 336 moveto (0976   \(gate\).rsv1 = 0;                                        \\) show
0 324 moveto (0977   \(gate\).type = \(istrap\) ? STS_TG32 : STS_IG32;           \\) show
0 312 moveto (0978   \(gate\).s = 0;                                           \\) show
0 300 moveto (0979   \(gate\).dpl = \(d\);                                       \\) show
0 288 moveto (0980   \(gate\).p = 1;                                           \\) show
0 276 moveto (0981   \(gate\).off_31_16 = \(uint\)\(off\) >> 16;                  \\) show
0 264 moveto (0982 }) show
0 252 moveto (0983 ) show
0 240 moveto (0984 #endif) show
0 228 moveto (0985 ) show
0 216 moveto (0986 ) show
0 204 moveto (0987 ) show
0 192 moveto (0988 ) show
0 180 moveto (0989 ) show
0 168 moveto (0990 ) show
0 156 moveto (0991 ) show
0 144 moveto (0992 ) show
0 132 moveto (0993 ) show
0 120 moveto (0994 ) show
0 108 moveto (0995 ) show
0 96 moveto (0996 ) show
0 84 moveto (0997 ) show
0 72 moveto (0998 ) show
0 60 moveto (0999 ) show
0 24 moveto (Sheet 09) show
grestore
restore
showpage
%%Page: 18 18
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/elf.h  Page 1) show
0 648 moveto (1000 // Format of an ELF executable file) show
0 636 moveto (1001 ) show
0 624 moveto (1002 #define ELF_MAGIC 0x464C457FU  // "\\x7FELF" in little endian) show
0 612 moveto (1003 ) show
0 600 moveto (1004 // File header) show
0 588 moveto (1005 struct elfhdr {) show
0 576 moveto (1006   uint magic;  // must equal ELF_MAGIC) show
0 564 moveto (1007   uchar elf[12];) show
0 552 moveto (1008   ushort type;) show
0 540 moveto (1009   ushort machine;) show
0 528 moveto (1010   uint version;) show
0 516 moveto (1011   uint entry;) show
0 504 moveto (1012   uint phoff;) show
0 492 moveto (1013   uint shoff;) show
0 480 moveto (1014   uint flags;) show
0 468 moveto (1015   ushort ehsize;) show
0 456 moveto (1016   ushort phentsize;) show
0 444 moveto (1017   ushort phnum;) show
0 432 moveto (1018   ushort shentsize;) show
0 420 moveto (1019   ushort shnum;) show
0 408 moveto (1020   ushort shstrndx;) show
0 396 moveto (1021 };) show
0 384 moveto (1022 ) show
0 372 moveto (1023 // Program section header) show
0 360 moveto (1024 struct proghdr {) show
0 348 moveto (1025   uint type;) show
0 336 moveto (1026   uint off;) show
0 324 moveto (1027   uint vaddr;) show
0 312 moveto (1028   uint paddr;) show
0 300 moveto (1029   uint filesz;) show
0 288 moveto (1030   uint memsz;) show
0 276 moveto (1031   uint flags;) show
0 264 moveto (1032   uint align;) show
0 252 moveto (1033 };) show
0 240 moveto (1034 ) show
0 228 moveto (1035 // Values for Proghdr type) show
0 216 moveto (1036 #define ELF_PROG_LOAD           1) show
0 204 moveto (1037 ) show
0 192 moveto (1038 // Flag bits for Proghdr flags) show
0 180 moveto (1039 #define ELF_PROG_FLAG_EXEC      1) show
0 168 moveto (1040 #define ELF_PROG_FLAG_WRITE     2) show
0 156 moveto (1041 #define ELF_PROG_FLAG_READ      4) show
0 144 moveto (1042 ) show
0 132 moveto (1043 ) show
0 120 moveto (1044 ) show
0 108 moveto (1045 ) show
0 96 moveto (1046 ) show
0 84 moveto (1047 ) show
0 72 moveto (1048 ) show
0 60 moveto (1049 ) show
0 24 moveto (Sheet 10) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/entry.S  Page 1) show
0 648 moveto (1050 # Multiboot header, for multiboot boot loaders like GNU Grub.) show
0 636 moveto (1051 # http://www.gnu.org/software/grub/manual/multiboot/multiboot.html) show
0 624 moveto (1052 #) show
0 612 moveto (1053 # Using GRUB 2, you can boot xv6 from a file stored in a) show
0 600 moveto (1054 # Linux file system by copying kernel or kernelmemfs to /boot) show
0 588 moveto (1055 # and then adding this menu entry:) show
0 576 moveto (1056 #) show
0 564 moveto (1057 # menuentry "xv6" {) show
0 552 moveto (1058 # ) show
8 mp_a_x mul 552 moveto (insmod ext2) show
0 540 moveto (1059 # ) show
8 mp_a_x mul 540 moveto (set root='\(hd0,msdos1\)') show
0 528 moveto (1060 # ) show
8 mp_a_x mul 528 moveto (set kernel='/boot/kernel') show
0 516 moveto (1061 # ) show
8 mp_a_x mul 516 moveto (echo "Loading ${kernel}...") show
0 504 moveto (1062 # ) show
8 mp_a_x mul 504 moveto (multiboot ${kernel} ${kernel}) show
0 492 moveto (1063 # ) show
8 mp_a_x mul 492 moveto (boot) show
0 480 moveto (1064 # }) show
0 468 moveto (1065 ) show
0 456 moveto (1066 #include "asm.h") show
0 444 moveto (1067 #include "memlayout.h") show
0 432 moveto (1068 #include "mmu.h") show
0 420 moveto (1069 #include "param.h") show
0 408 moveto (1070 ) show
0 396 moveto (1071 # Multiboot header.  Data to direct multiboot loader.) show
0 384 moveto (1072 .p2align 2) show
0 372 moveto (1073 .text) show
0 360 moveto (1074 .globl multiboot_header) show
0 348 moveto (1075 multiboot_header:) show
0 336 moveto (1076   #define magic 0x1badb002) show
0 324 moveto (1077   #define flags 0) show
0 312 moveto (1078   .long magic) show
0 300 moveto (1079   .long flags) show
0 288 moveto (1080   .long \(-magic-flags\)) show
0 276 moveto (1081 ) show
0 264 moveto (1082 # By convention, the _start symbol specifies the ELF entry point.) show
0 252 moveto (1083 # Since we haven't set up virtual memory yet, our entry point is) show
0 240 moveto (1084 # the physical address of 'entry'.) show
0 228 moveto (1085 .globl _start) show
0 216 moveto (1086 _start = V2P_WO\(entry\)) show
0 204 moveto (1087 ) show
0 192 moveto (1088 # Entering xv6 on boot processor, with paging off.) show
0 180 moveto (1089 .globl entry) show
0 168 moveto (1090 entry:) show
0 156 moveto (1091   # Turn on page size extension for 4Mbyte pages) show
0 144 moveto (1092   movl    %cr4, %eax) show
0 132 moveto (1093   orl     $\(CR4_PSE\), %eax) show
0 120 moveto (1094   movl    %eax, %cr4) show
0 108 moveto (1095   # Set page directory) show
0 96 moveto (1096   movl    $\(V2P_WO\(entrypgdir\)\), %eax) show
0 84 moveto (1097   movl    %eax, %cr3) show
0 72 moveto (1098   # Turn on paging.) show
0 60 moveto (1099   movl    %cr0, %eax) show
0 24 moveto (Sheet 10) show
grestore
restore
showpage
%%Page: 19 19
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/entry.S  Page 2) show
0 648 moveto (1100   orl     $\(CR0_PG|CR0_WP\), %eax) show
0 636 moveto (1101   movl    %eax, %cr0) show
0 624 moveto (1102 ) show
0 612 moveto (1103   # Set up the stack pointer.) show
0 600 moveto (1104   movl $\(stack + KSTACKSIZE\), %esp) show
0 588 moveto (1105 ) show
0 576 moveto (1106   # Jump to main\(\), and switch to executing at) show
0 564 moveto (1107   # high addresses. The indirect call is needed because) show
0 552 moveto (1108   # the assembler produces a PC-relative instruction) show
0 540 moveto (1109   # for a direct jump.) show
0 528 moveto (1110   mov $main, %eax) show
0 516 moveto (1111   jmp *%eax) show
0 504 moveto (1112 ) show
0 492 moveto (1113 .comm stack, KSTACKSIZE) show
0 480 moveto (1114 ) show
0 468 moveto (1115 ) show
0 456 moveto (1116 ) show
0 444 moveto (1117 ) show
0 432 moveto (1118 ) show
0 420 moveto (1119 ) show
0 408 moveto (1120 ) show
0 396 moveto (1121 ) show
0 384 moveto (1122 ) show
0 372 moveto (1123 ) show
0 360 moveto (1124 ) show
0 348 moveto (1125 ) show
0 336 moveto (1126 ) show
0 324 moveto (1127 ) show
0 312 moveto (1128 ) show
0 300 moveto (1129 ) show
0 288 moveto (1130 ) show
0 276 moveto (1131 ) show
0 264 moveto (1132 ) show
0 252 moveto (1133 ) show
0 240 moveto (1134 ) show
0 228 moveto (1135 ) show
0 216 moveto (1136 ) show
0 204 moveto (1137 ) show
0 192 moveto (1138 ) show
0 180 moveto (1139 ) show
0 168 moveto (1140 ) show
0 156 moveto (1141 ) show
0 144 moveto (1142 ) show
0 132 moveto (1143 ) show
0 120 moveto (1144 ) show
0 108 moveto (1145 ) show
0 96 moveto (1146 ) show
0 84 moveto (1147 ) show
0 72 moveto (1148 ) show
0 60 moveto (1149 ) show
0 24 moveto (Sheet 11) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/entryother.S  Page 1) show
0 648 moveto (1150 #include "asm.h") show
0 636 moveto (1151 #include "memlayout.h") show
0 624 moveto (1152 #include "mmu.h") show
0 612 moveto (1153 ) show
0 600 moveto (1154 # Each non-boot CPU \("AP"\) is started up in response to a STARTUP) show
0 588 moveto (1155 # IPI from the boot CPU.  Section B.4.2 of the Multi-Processor) show
0 576 moveto (1156 # Specification says that the AP will start in real mode with CS:IP) show
0 564 moveto (1157 # set to XY00:0000, where XY is an 8-bit value sent with the) show
0 552 moveto (1158 # STARTUP. Thus this code must start at a 4096-byte boundary.) show
0 540 moveto (1159 #) show
0 528 moveto (1160 # Because this code sets DS to zero, it must sit) show
0 516 moveto (1161 # at an address in the low 2^16 bytes.) show
0 504 moveto (1162 #) show
0 492 moveto (1163 # Startothers \(in main.c\) sends the STARTUPs one at a time.) show
0 480 moveto (1164 # It copies this code \(start\) at 0x7000.  It puts the address of) show
0 468 moveto (1165 # a newly allocated per-core stack in start-4,the address of the) show
0 456 moveto (1166 # place to jump to \(mpenter\) in start-8, and the physical address) show
0 444 moveto (1167 # of entrypgdir in start-12.) show
0 432 moveto (1168 #) show
0 420 moveto (1169 # This code is identical to bootasm.S except:) show
0 408 moveto (1170 #   - it does not need to enable A20) show
0 396 moveto (1171 #   - it uses the address at start-4, start-8, and start-12) show
0 384 moveto (1172 ) show
0 372 moveto (1173 .code16) show
0 360 moveto (1174 .globl start) show
0 348 moveto (1175 start:) show
0 336 moveto (1176   cli) show
0 324 moveto (1177 ) show
0 312 moveto (1178   xorw    %ax,%ax) show
0 300 moveto (1179   movw    %ax,%ds) show
0 288 moveto (1180   movw    %ax,%es) show
0 276 moveto (1181   movw    %ax,%ss) show
0 264 moveto (1182 ) show
0 252 moveto (1183   lgdt    gdtdesc) show
0 240 moveto (1184   movl    %cr0, %eax) show
0 228 moveto (1185   orl     $CR0_PE, %eax) show
0 216 moveto (1186   movl    %eax, %cr0) show
0 204 moveto (1187 ) show
0 192 moveto (1188   ljmpl    $\(SEG_KCODE<<3\), $\(start32\)) show
0 180 moveto (1189 ) show
0 168 moveto (1190 .code32) show
0 156 moveto (1191 start32:) show
0 144 moveto (1192   movw    $\(SEG_KDATA<<3\), %ax) show
0 132 moveto (1193   movw    %ax, %ds) show
0 120 moveto (1194   movw    %ax, %es) show
0 108 moveto (1195   movw    %ax, %ss) show
0 96 moveto (1196   movw    $0, %ax) show
0 84 moveto (1197   movw    %ax, %fs) show
0 72 moveto (1198   movw    %ax, %gs) show
0 60 moveto (1199 ) show
0 24 moveto (Sheet 11) show
grestore
restore
showpage
%%Page: 20 20
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/entryother.S  Page 2) show
0 648 moveto (1200   # Turn on page size extension for 4Mbyte pages) show
0 636 moveto (1201   movl    %cr4, %eax) show
0 624 moveto (1202   orl     $\(CR4_PSE\), %eax) show
0 612 moveto (1203   movl    %eax, %cr4) show
0 600 moveto (1204   # Use enterpgdir as our initial page table) show
0 588 moveto (1205   movl    \(start-12\), %eax) show
0 576 moveto (1206   movl    %eax, %cr3) show
0 564 moveto (1207   # Turn on paging.) show
0 552 moveto (1208   movl    %cr0, %eax) show
0 540 moveto (1209   orl     $\(CR0_PE|CR0_PG|CR0_WP\), %eax) show
0 528 moveto (1210   movl    %eax, %cr0) show
0 516 moveto (1211 ) show
0 504 moveto (1212   # Switch to the stack allocated by startothers\(\)) show
0 492 moveto (1213   movl    \(start-4\), %esp) show
0 480 moveto (1214   # Call mpenter\(\)) show
0 468 moveto (1215   call) show
17 mp_a_x mul 468 moveto (*\(start-8\)) show
0 456 moveto (1216 ) show
0 444 moveto (1217   movw    $0x8a00, %ax) show
0 432 moveto (1218   movw    %ax, %dx) show
0 420 moveto (1219   outw    %ax, %dx) show
0 408 moveto (1220   movw    $0x8ae0, %ax) show
0 396 moveto (1221   outw    %ax, %dx) show
0 384 moveto (1222 spin:) show
0 372 moveto (1223   jmp     spin) show
0 360 moveto (1224 ) show
0 348 moveto (1225 .p2align 2) show
0 336 moveto (1226 gdt:) show
0 324 moveto (1227   SEG_NULLASM) show
0 312 moveto (1228   SEG_ASM\(STA_X|STA_R, 0, 0xffffffff\)) show
0 300 moveto (1229   SEG_ASM\(STA_W, 0, 0xffffffff\)) show
0 288 moveto (1230 ) show
0 276 moveto (1231 ) show
0 264 moveto (1232 gdtdesc:) show
0 252 moveto (1233   .word   \(gdtdesc - gdt - 1\)) show
0 240 moveto (1234   .long   gdt) show
0 228 moveto (1235 ) show
0 216 moveto (1236 ) show
0 204 moveto (1237 ) show
0 192 moveto (1238 ) show
0 180 moveto (1239 ) show
0 168 moveto (1240 ) show
0 156 moveto (1241 ) show
0 144 moveto (1242 ) show
0 132 moveto (1243 ) show
0 120 moveto (1244 ) show
0 108 moveto (1245 ) show
0 96 moveto (1246 ) show
0 84 moveto (1247 ) show
0 72 moveto (1248 ) show
0 60 moveto (1249 ) show
0 24 moveto (Sheet 12) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/main.c  Page 1) show
0 648 moveto (1250 #include "types.h") show
0 636 moveto (1251 #include "defs.h") show
0 624 moveto (1252 #include "param.h") show
0 612 moveto (1253 #include "memlayout.h") show
0 600 moveto (1254 #include "mmu.h") show
0 588 moveto (1255 #include "proc.h") show
0 576 moveto (1256 #include "x86.h") show
0 564 moveto (1257 ) show
0 552 moveto (1258 static void startothers\(void\);) show
0 540 moveto (1259 static void mpmain\(void\)  __attribute__\(\(noreturn\)\);) show
0 528 moveto (1260 extern pde_t *kpgdir;) show
0 516 moveto (1261 extern char end[]; // first address after kernel loaded from ELF file) show
0 504 moveto (1262 ) show
0 492 moveto (1263 // Bootstrap processor starts running C code here.) show
0 480 moveto (1264 // Allocate a real stack and switch to it, first) show
0 468 moveto (1265 // doing some setup required for memory allocator to work.) show
0 456 moveto (1266 int) show
0 444 moveto (1267 main\(void\)) show
0 432 moveto (1268 {) show
0 420 moveto (1269   kinit1\(end, P2V\(4*1024*1024\)\); // phys page allocator) show
0 408 moveto (1270   kvmalloc\(\);      // kernel page table) show
0 396 moveto (1271   mpinit\(\);        // collect info about this machine) show
0 384 moveto (1272   lapicinit\(\);) show
0 372 moveto (1273   seginit\(\);       // set up segments) show
0 360 moveto (1274   cprintf\("\\ncpu%d: starting xv6\\n\\n", cpu->id\);) show
0 348 moveto (1275   picinit\(\);       // interrupt controller) show
0 336 moveto (1276   ioapicinit\(\);    // another interrupt controller) show
0 324 moveto (1277   consoleinit\(\);   // I/O devices & their interrupts) show
0 312 moveto (1278   uartinit\(\);      // serial port) show
0 300 moveto (1279   pinit\(\);         // process table) show
0 288 moveto (1280   tvinit\(\);        // trap vectors) show
0 276 moveto (1281   binit\(\);         // buffer cache) show
0 264 moveto (1282   fileinit\(\);      // file table) show
0 252 moveto (1283   ideinit\(\);       // disk) show
0 240 moveto (1284   if\(!ismp\)) show
0 228 moveto (1285     timerinit\(\);   // uniprocessor timer) show
0 216 moveto (1286   startothers\(\);   // start other processors) show
0 204 moveto (1287   kinit2\(P2V\(4*1024*1024\), P2V\(PHYSTOP\)\); // must come after startothers\(\)) show
0 192 moveto (1288   userinit\(\);      // first user process) show
0 180 moveto (1289   // Finish setting up this processor in mpmain.) show
0 168 moveto (1290   mpmain\(\);) show
0 156 moveto (1291 }) show
0 144 moveto (1292 ) show
0 132 moveto (1293 ) show
0 120 moveto (1294 ) show
0 108 moveto (1295 ) show
0 96 moveto (1296 ) show
0 84 moveto (1297 ) show
0 72 moveto (1298 ) show
0 60 moveto (1299 ) show
0 24 moveto (Sheet 12) show
grestore
restore
showpage
%%Page: 21 21
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/main.c  Page 2) show
0 648 moveto (1300 // Other CPUs jump here from entryother.S.) show
0 636 moveto (1301 static void) show
0 624 moveto (1302 mpenter\(void\)) show
0 612 moveto (1303 {) show
0 600 moveto (1304   switchkvm\(\);) show
0 588 moveto (1305   seginit\(\);) show
0 576 moveto (1306   lapicinit\(\);) show
0 564 moveto (1307   mpmain\(\);) show
0 552 moveto (1308 }) show
0 540 moveto (1309 ) show
0 528 moveto (1310 // Common CPU setup code.) show
0 516 moveto (1311 static void) show
0 504 moveto (1312 mpmain\(void\)) show
0 492 moveto (1313 {) show
0 480 moveto (1314   cprintf\("cpu%d: starting\\n", cpu->id\);) show
0 468 moveto (1315   idtinit\(\);       // load idt register) show
0 456 moveto (1316   xchg\(&cpu->started, 1\); // tell startothers\(\) we're up) show
0 444 moveto (1317   scheduler\(\);     // start running processes) show
0 432 moveto (1318 }) show
0 420 moveto (1319 ) show
0 408 moveto (1320 pde_t entrypgdir[];  // For entry.S) show
0 396 moveto (1321 ) show
0 384 moveto (1322 // Start the non-boot \(AP\) processors.) show
0 372 moveto (1323 static void) show
0 360 moveto (1324 startothers\(void\)) show
0 348 moveto (1325 {) show
0 336 moveto (1326   extern uchar _binary_entryother_start[], _binary_entryother_size[];) show
0 324 moveto (1327   uchar *code;) show
0 312 moveto (1328   struct cpu *c;) show
0 300 moveto (1329   char *stack;) show
0 288 moveto (1330 ) show
0 276 moveto (1331   // Write entry code to unused memory at 0x7000.) show
0 264 moveto (1332   // The linker has placed the image of entryother.S in) show
0 252 moveto (1333   // _binary_entryother_start.) show
0 240 moveto (1334   code = p2v\(0x7000\);) show
0 228 moveto (1335   memmove\(code, _binary_entryother_start, \(uint\)_binary_entryother_size\);) show
0 216 moveto (1336 ) show
0 204 moveto (1337   for\(c = cpus; c < cpus+ncpu; c++\){) show
0 192 moveto (1338     if\(c == cpus+cpunum\(\)\)  // We've started already.) show
0 180 moveto (1339       continue;) show
0 168 moveto (1340 ) show
0 156 moveto (1341     // Tell entryother.S what stack to use, where to enter, and what) show
0 144 moveto (1342     // pgdir to use. We cannot use kpgdir yet, because the AP processor) show
0 132 moveto (1343     // is running in low  memory, so we use entrypgdir for the APs too.) show
0 120 moveto (1344     stack = kalloc\(\);) show
0 108 moveto (1345     *\(void**\)\(code-4\) = stack + KSTACKSIZE;) show
0 96 moveto (1346     *\(void**\)\(code-8\) = mpenter;) show
0 84 moveto (1347     *\(int**\)\(code-12\) = \(void *\) v2p\(entrypgdir\);) show
0 72 moveto (1348 ) show
0 60 moveto (1349     lapicstartap\(c->id, v2p\(code\)\);) show
0 24 moveto (Sheet 13) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/main.c  Page 3) show
0 648 moveto (1350     // wait for cpu to finish mpmain\(\)) show
0 636 moveto (1351     while\(c->started == 0\)) show
0 624 moveto (1352       ;) show
0 612 moveto (1353   }) show
0 600 moveto (1354 }) show
0 588 moveto (1355 ) show
0 576 moveto (1356 // Boot page table used in entry.S and entryother.S.) show
0 564 moveto (1357 // Page directories \(and page tables\), must start on a page boundary,) show
0 552 moveto (1358 // hence the "__aligned__" attribute.) show
0 540 moveto (1359 // Use PTE_PS in page directory entry to enable 4Mbyte pages.) show
0 528 moveto (1360 __attribute__\(\(__aligned__\(PGSIZE\)\)\)) show
0 516 moveto (1361 pde_t entrypgdir[NPDENTRIES] = {) show
0 504 moveto (1362   // Map VA's [0, 4MB\) to PA's [0, 4MB\)) show
0 492 moveto (1363   [0] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 480 moveto (1364   // Map VA's [KERNBASE, KERNBASE+4MB\) to PA's [0, 4MB\)) show
0 468 moveto (1365   [KERNBASE>>PDXSHIFT] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 456 moveto (1366 };) show
0 444 moveto (1367 ) show
0 432 moveto (1368 // Blank page.) show
0 420 moveto (1369 // Blank page.) show
0 408 moveto (1370 // Blank page.) show
0 396 moveto (1371 ) show
0 384 moveto (1372 ) show
0 372 moveto (1373 ) show
0 360 moveto (1374 ) show
0 348 moveto (1375 ) show
0 336 moveto (1376 ) show
0 324 moveto (1377 ) show
0 312 moveto (1378 ) show
0 300 moveto (1379 ) show
0 288 moveto (1380 ) show
0 276 moveto (1381 ) show
0 264 moveto (1382 ) show
0 252 moveto (1383 ) show
0 240 moveto (1384 ) show
0 228 moveto (1385 ) show
0 216 moveto (1386 ) show
0 204 moveto (1387 ) show
0 192 moveto (1388 ) show
0 180 moveto (1389 ) show
0 168 moveto (1390 ) show
0 156 moveto (1391 ) show
0 144 moveto (1392 ) show
0 132 moveto (1393 ) show
0 120 moveto (1394 ) show
0 108 moveto (1395 ) show
0 96 moveto (1396 ) show
0 84 moveto (1397 ) show
0 72 moveto (1398 ) show
0 60 moveto (1399 ) show
0 24 moveto (Sheet 13) show
grestore
restore
showpage
%%Page: 22 22
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/spinlock.h  Page 1) show
0 648 moveto (1400 // Mutual exclusion lock.) show
0 636 moveto (1401 struct spinlock {) show
0 624 moveto (1402   uint locked;       // Is the lock held?) show
0 612 moveto (1403 ) show
0 600 moveto (1404   // For debugging:) show
0 588 moveto (1405   char *name;        // Name of lock.) show
0 576 moveto (1406   struct cpu *cpu;   // The cpu holding the lock.) show
0 564 moveto (1407   uint pcs[10];      // The call stack \(an array of program counters\)) show
0 552 moveto (1408                      // that locked the lock.) show
0 540 moveto (1409 };) show
0 528 moveto (1410 ) show
0 516 moveto (1411 ) show
0 504 moveto (1412 ) show
0 492 moveto (1413 ) show
0 480 moveto (1414 ) show
0 468 moveto (1415 ) show
0 456 moveto (1416 ) show
0 444 moveto (1417 ) show
0 432 moveto (1418 ) show
0 420 moveto (1419 ) show
0 408 moveto (1420 ) show
0 396 moveto (1421 ) show
0 384 moveto (1422 ) show
0 372 moveto (1423 ) show
0 360 moveto (1424 ) show
0 348 moveto (1425 ) show
0 336 moveto (1426 ) show
0 324 moveto (1427 ) show
0 312 moveto (1428 ) show
0 300 moveto (1429 ) show
0 288 moveto (1430 ) show
0 276 moveto (1431 ) show
0 264 moveto (1432 ) show
0 252 moveto (1433 ) show
0 240 moveto (1434 ) show
0 228 moveto (1435 ) show
0 216 moveto (1436 ) show
0 204 moveto (1437 ) show
0 192 moveto (1438 ) show
0 180 moveto (1439 ) show
0 168 moveto (1440 ) show
0 156 moveto (1441 ) show
0 144 moveto (1442 ) show
0 132 moveto (1443 ) show
0 120 moveto (1444 ) show
0 108 moveto (1445 ) show
0 96 moveto (1446 ) show
0 84 moveto (1447 ) show
0 72 moveto (1448 ) show
0 60 moveto (1449 ) show
0 24 moveto (Sheet 14) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/spinlock.c  Page 1) show
0 648 moveto (1450 // Mutual exclusion spin locks.) show
0 636 moveto (1451 ) show
0 624 moveto (1452 #include "types.h") show
0 612 moveto (1453 #include "defs.h") show
0 600 moveto (1454 #include "param.h") show
0 588 moveto (1455 #include "x86.h") show
0 576 moveto (1456 #include "memlayout.h") show
0 564 moveto (1457 #include "mmu.h") show
0 552 moveto (1458 #include "proc.h") show
0 540 moveto (1459 #include "spinlock.h") show
0 528 moveto (1460 ) show
0 516 moveto (1461 void) show
0 504 moveto (1462 initlock\(struct spinlock *lk, char *name\)) show
0 492 moveto (1463 {) show
0 480 moveto (1464   lk->name = name;) show
0 468 moveto (1465   lk->locked = 0;) show
0 456 moveto (1466   lk->cpu = 0;) show
0 444 moveto (1467 }) show
0 432 moveto (1468 ) show
0 420 moveto (1469 // Acquire the lock.) show
0 408 moveto (1470 // Loops \(spins\) until the lock is acquired.) show
0 396 moveto (1471 // Holding a lock for a long time may cause) show
0 384 moveto (1472 // other CPUs to waste time spinning to acquire it.) show
0 372 moveto (1473 void) show
0 360 moveto (1474 acquire\(struct spinlock *lk\)) show
0 348 moveto (1475 {) show
0 336 moveto (1476   pushcli\(\); // disable interrupts to avoid deadlock.) show
0 324 moveto (1477   if\(holding\(lk\)\)) show
0 312 moveto (1478     panic\("acquire"\);) show
0 300 moveto (1479 ) show
0 288 moveto (1480   // The xchg is atomic.) show
0 276 moveto (1481   // It also serializes, so that reads after acquire are not) show
0 264 moveto (1482   // reordered before it.) show
0 252 moveto (1483   while\(xchg\(&lk->locked, 1\) != 0\)) show
0 240 moveto (1484     ;) show
0 228 moveto (1485 ) show
0 216 moveto (1486   // Record info about lock acquisition for debugging.) show
0 204 moveto (1487   lk->cpu = cpu;) show
0 192 moveto (1488   getcallerpcs\(&lk, lk->pcs\);) show
0 180 moveto (1489 }) show
0 168 moveto (1490 ) show
0 156 moveto (1491 ) show
0 144 moveto (1492 ) show
0 132 moveto (1493 ) show
0 120 moveto (1494 ) show
0 108 moveto (1495 ) show
0 96 moveto (1496 ) show
0 84 moveto (1497 ) show
0 72 moveto (1498 ) show
0 60 moveto (1499 ) show
0 24 moveto (Sheet 14) show
grestore
restore
showpage
%%Page: 23 23
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/spinlock.c  Page 2) show
0 648 moveto (1500 // Release the lock.) show
0 636 moveto (1501 void) show
0 624 moveto (1502 release\(struct spinlock *lk\)) show
0 612 moveto (1503 {) show
0 600 moveto (1504   if\(!holding\(lk\)\)) show
0 588 moveto (1505     panic\("release"\);) show
0 576 moveto (1506 ) show
0 564 moveto (1507   lk->pcs[0] = 0;) show
0 552 moveto (1508   lk->cpu = 0;) show
0 540 moveto (1509 ) show
0 528 moveto (1510   // The xchg serializes, so that reads before release are) show
0 516 moveto (1511   // not reordered after it.  The 1996 PentiumPro manual \(Volume 3,) show
0 504 moveto (1512   // 7.2\) says reads can be carried out speculatively and in) show
0 492 moveto (1513   // any order, which implies we need to serialize here.) show
0 480 moveto (1514   // But the 2007 Intel 64 Architecture Memory Ordering White) show
0 468 moveto (1515   // Paper says that Intel 64 and IA-32 will not move a load) show
0 456 moveto (1516   // after a store. So lock->locked = 0 would work here.) show
0 444 moveto (1517   // The xchg being asm volatile ensures gcc emits it after) show
0 432 moveto (1518   // the above assignments \(and after the critical section\).) show
0 420 moveto (1519   xchg\(&lk->locked, 0\);) show
0 408 moveto (1520 ) show
0 396 moveto (1521   popcli\(\);) show
0 384 moveto (1522 }) show
0 372 moveto (1523 ) show
0 360 moveto (1524 // Record the current call stack in pcs[] by following the %ebp chain.) show
0 348 moveto (1525 void) show
0 336 moveto (1526 getcallerpcs\(void *v, uint pcs[]\)) show
0 324 moveto (1527 {) show
0 312 moveto (1528   uint *ebp;) show
0 300 moveto (1529   int i;) show
0 288 moveto (1530 ) show
0 276 moveto (1531   ebp = \(uint*\)v - 2;) show
0 264 moveto (1532   for\(i = 0; i < 10; i++\){) show
0 252 moveto (1533     if\(ebp == 0 || ebp < \(uint*\)KERNBASE || ebp == \(uint*\)0xffffffff\)) show
0 240 moveto (1534       break;) show
0 228 moveto (1535     pcs[i] = ebp[1];     // saved %eip) show
0 216 moveto (1536     ebp = \(uint*\)ebp[0]; // saved %ebp) show
0 204 moveto (1537   }) show
0 192 moveto (1538   for\(; i < 10; i++\)) show
0 180 moveto (1539     pcs[i] = 0;) show
0 168 moveto (1540 }) show
0 156 moveto (1541 ) show
0 144 moveto (1542 // Check whether this cpu is holding the lock.) show
0 132 moveto (1543 int) show
0 120 moveto (1544 holding\(struct spinlock *lock\)) show
0 108 moveto (1545 {) show
0 96 moveto (1546   return lock->locked && lock->cpu == cpu;) show
0 84 moveto (1547 }) show
0 72 moveto (1548 ) show
0 60 moveto (1549 ) show
0 24 moveto (Sheet 15) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/spinlock.c  Page 3) show
0 648 moveto (1550 // Pushcli/popcli are like cli/sti except that they are matched:) show
0 636 moveto (1551 // it takes two popcli to undo two pushcli.  Also, if interrupts) show
0 624 moveto (1552 // are off, then pushcli, popcli leaves them off.) show
0 612 moveto (1553 ) show
0 600 moveto (1554 void) show
0 588 moveto (1555 pushcli\(void\)) show
0 576 moveto (1556 {) show
0 564 moveto (1557   int eflags;) show
0 552 moveto (1558 ) show
0 540 moveto (1559   eflags = readeflags\(\);) show
0 528 moveto (1560   cli\(\);) show
0 516 moveto (1561   if\(cpu->ncli++ == 0\)) show
0 504 moveto (1562     cpu->intena = eflags & FL_IF;) show
0 492 moveto (1563 }) show
0 480 moveto (1564 ) show
0 468 moveto (1565 void) show
0 456 moveto (1566 popcli\(void\)) show
0 444 moveto (1567 {) show
0 432 moveto (1568   if\(readeflags\(\)&FL_IF\)) show
0 420 moveto (1569     panic\("popcli - interruptible"\);) show
0 408 moveto (1570   if\(--cpu->ncli < 0\)) show
0 396 moveto (1571     panic\("popcli"\);) show
0 384 moveto (1572   if\(cpu->ncli == 0 && cpu->intena\)) show
0 372 moveto (1573     sti\(\);) show
0 360 moveto (1574 }) show
0 348 moveto (1575 ) show
0 336 moveto (1576 ) show
0 324 moveto (1577 ) show
0 312 moveto (1578 ) show
0 300 moveto (1579 ) show
0 288 moveto (1580 ) show
0 276 moveto (1581 ) show
0 264 moveto (1582 ) show
0 252 moveto (1583 ) show
0 240 moveto (1584 ) show
0 228 moveto (1585 ) show
0 216 moveto (1586 ) show
0 204 moveto (1587 ) show
0 192 moveto (1588 ) show
0 180 moveto (1589 ) show
0 168 moveto (1590 ) show
0 156 moveto (1591 ) show
0 144 moveto (1592 ) show
0 132 moveto (1593 ) show
0 120 moveto (1594 ) show
0 108 moveto (1595 ) show
0 96 moveto (1596 ) show
0 84 moveto (1597 ) show
0 72 moveto (1598 ) show
0 60 moveto (1599 ) show
0 24 moveto (Sheet 15) show
grestore
restore
showpage
%%Page: 24 24
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 1) show
0 648 moveto (1600 #include "param.h") show
0 636 moveto (1601 #include "types.h") show
0 624 moveto (1602 #include "defs.h") show
0 612 moveto (1603 #include "x86.h") show
0 600 moveto (1604 #include "memlayout.h") show
0 588 moveto (1605 #include "mmu.h") show
0 576 moveto (1606 #include "proc.h") show
0 564 moveto (1607 #include "elf.h") show
0 552 moveto (1608 ) show
0 540 moveto (1609 extern char data[];  // defined by kernel.ld) show
0 528 moveto (1610 pde_t *kpgdir;  // for use in scheduler\(\)) show
0 516 moveto (1611 struct segdesc gdt[NSEGS];) show
0 504 moveto (1612 ) show
0 492 moveto (1613 // Set up CPU's kernel segment descriptors.) show
0 480 moveto (1614 // Run once on entry on each CPU.) show
0 468 moveto (1615 void) show
0 456 moveto (1616 seginit\(void\)) show
0 444 moveto (1617 {) show
0 432 moveto (1618   struct cpu *c;) show
0 420 moveto (1619 ) show
0 408 moveto (1620   // Map "logical" addresses to virtual addresses using identity map.) show
0 396 moveto (1621   // Cannot share a CODE descriptor for both kernel and user) show
0 384 moveto (1622   // because it would have to have DPL_USR, but the CPU forbids) show
0 372 moveto (1623   // an interrupt from CPL=0 to DPL=3.) show
0 360 moveto (1624   c = &cpus[cpunum\(\)];) show
0 348 moveto (1625   c->gdt[SEG_KCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, 0\);) show
0 336 moveto (1626   c->gdt[SEG_KDATA] = SEG\(STA_W, 0, 0xffffffff, 0\);) show
0 324 moveto (1627   c->gdt[SEG_UCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, DPL_USER\);) show
0 312 moveto (1628   c->gdt[SEG_UDATA] = SEG\(STA_W, 0, 0xffffffff, DPL_USER\);) show
0 300 moveto (1629 ) show
0 288 moveto (1630   // Map cpu, and curproc) show
0 276 moveto (1631   c->gdt[SEG_KCPU] = SEG\(STA_W, &c->cpu, 8, 0\);) show
0 264 moveto (1632 ) show
0 252 moveto (1633   lgdt\(c->gdt, sizeof\(c->gdt\)\);) show
0 240 moveto (1634   loadgs\(SEG_KCPU << 3\);) show
0 228 moveto (1635 ) show
0 216 moveto (1636   // Initialize cpu-local storage.) show
0 204 moveto (1637   cpu = c;) show
0 192 moveto (1638   proc = 0;) show
0 180 moveto (1639 }) show
0 168 moveto (1640 ) show
0 156 moveto (1641 ) show
0 144 moveto (1642 ) show
0 132 moveto (1643 ) show
0 120 moveto (1644 ) show
0 108 moveto (1645 ) show
0 96 moveto (1646 ) show
0 84 moveto (1647 ) show
0 72 moveto (1648 ) show
0 60 moveto (1649 ) show
0 24 moveto (Sheet 16) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 2) show
0 648 moveto (1650 // Return the address of the PTE in page table pgdir) show
0 636 moveto (1651 // that corresponds to virtual address va.  If alloc!=0,) show
0 624 moveto (1652 // create any required page table pages.) show
0 612 moveto (1653 static pte_t *) show
0 600 moveto (1654 walkpgdir\(pde_t *pgdir, const void *va, int alloc\)) show
0 588 moveto (1655 {) show
0 576 moveto (1656   pde_t *pde;) show
0 564 moveto (1657   pte_t *pgtab;) show
0 552 moveto (1658 ) show
0 540 moveto (1659   pde = &pgdir[PDX\(va\)];) show
0 528 moveto (1660   if\(*pde & PTE_P\){) show
0 516 moveto (1661     pgtab = \(pte_t*\)p2v\(PTE_ADDR\(*pde\)\);) show
0 504 moveto (1662   } else {) show
0 492 moveto (1663     if\(!alloc || \(pgtab = \(pte_t*\)kalloc\(\)\) == 0\)) show
0 480 moveto (1664       return 0;) show
0 468 moveto (1665     // Make sure all those PTE_P bits are zero.) show
0 456 moveto (1666     memset\(pgtab, 0, PGSIZE\);) show
0 444 moveto (1667     // The permissions here are overly generous, but they can) show
0 432 moveto (1668     // be further restricted by the permissions in the page table) show
0 420 moveto (1669     // entries, if necessary.) show
0 408 moveto (1670     *pde = v2p\(pgtab\) | PTE_P | PTE_W | PTE_U;) show
0 396 moveto (1671   }) show
0 384 moveto (1672   return &pgtab[PTX\(va\)];) show
0 372 moveto (1673 }) show
0 360 moveto (1674 ) show
0 348 moveto (1675 // Create PTEs for virtual addresses starting at va that refer to) show
0 336 moveto (1676 // physical addresses starting at pa. va and size might not) show
0 324 moveto (1677 // be page-aligned.) show
0 312 moveto (1678 static int) show
0 300 moveto (1679 mappages\(pde_t *pgdir, void *va, uint size, uint pa, int perm\)) show
0 288 moveto (1680 {) show
0 276 moveto (1681   char *a, *last;) show
0 264 moveto (1682   pte_t *pte;) show
0 252 moveto (1683 ) show
0 240 moveto (1684   a = \(char*\)PGROUNDDOWN\(\(uint\)va\);) show
0 228 moveto (1685   last = \(char*\)PGROUNDDOWN\(\(\(uint\)va\) + size - 1\);) show
0 216 moveto (1686   for\(;;\){) show
0 204 moveto (1687     if\(\(pte = walkpgdir\(pgdir, a, 1\)\) == 0\)) show
0 192 moveto (1688       return -1;) show
0 180 moveto (1689     if\(*pte & PTE_P\)) show
0 168 moveto (1690       panic\("remap"\);) show
0 156 moveto (1691     *pte = pa | perm | PTE_P;) show
0 144 moveto (1692     if\(a == last\)) show
0 132 moveto (1693       break;) show
0 120 moveto (1694     a += PGSIZE;) show
0 108 moveto (1695     pa += PGSIZE;) show
0 96 moveto (1696   }) show
0 84 moveto (1697   return 0;) show
0 72 moveto (1698 }) show
0 60 moveto (1699 ) show
0 24 moveto (Sheet 16) show
grestore
restore
showpage
%%Page: 25 25
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 3) show
0 648 moveto (1700 // There is one page table per process, plus one that's used when) show
0 636 moveto (1701 // a CPU is not running any process \(kpgdir\). The kernel uses the) show
0 624 moveto (1702 // current process's page table during system calls and interrupts;) show
0 612 moveto (1703 // page protection bits prevent user code from using the kernel's) show
0 600 moveto (1704 // mappings.) show
0 588 moveto (1705 //) show
0 576 moveto (1706 // setupkvm\(\) and exec\(\) set up every page table like this:) show
0 564 moveto (1707 //) show
0 552 moveto (1708 //   0..KERNBASE: user memory \(text+data+stack+heap\), mapped to) show
0 540 moveto (1709 //                phys memory allocated by the kernel) show
0 528 moveto (1710 //   KERNBASE..KERNBASE+EXTMEM: mapped to 0..EXTMEM \(for I/O space\)) show
0 516 moveto (1711 //   KERNBASE+EXTMEM..data: mapped to EXTMEM..V2P\(data\)) show
0 504 moveto (1712 //                for the kernel's instructions and r/o data) show
0 492 moveto (1713 //   data..KERNBASE+PHYSTOP: mapped to V2P\(data\)..PHYSTOP,) show
0 480 moveto (1714 //                                  rw data + free physical memory) show
0 468 moveto (1715 //   0xfe000000..0: mapped direct \(devices such as ioapic\)) show
0 456 moveto (1716 //) show
0 444 moveto (1717 // The kernel allocates physical memory for its heap and for user memory) show
0 432 moveto (1718 // between V2P\(end\) and the end of physical memory \(PHYSTOP\)) show
0 420 moveto (1719 // \(directly addressable from end..P2V\(PHYSTOP\)\).) show
0 408 moveto (1720 ) show
0 396 moveto (1721 // This table defines the kernel's mappings, which are present in) show
0 384 moveto (1722 // every process's page table.) show
0 372 moveto (1723 static struct kmap {) show
0 360 moveto (1724   void *virt;) show
0 348 moveto (1725   uint phys_start;) show
0 336 moveto (1726   uint phys_end;) show
0 324 moveto (1727   int perm;) show
0 312 moveto (1728 } kmap[] = {) show
0 300 moveto (1729  { \(void*\)KERNBASE, 0,             EXTMEM,    PTE_W}, // I/O space) show
0 288 moveto (1730  { \(void*\)KERNLINK, V2P\(KERNLINK\), V2P\(data\), 0},     // kern text+rodata) show
0 276 moveto (1731  { \(void*\)data,     V2P\(data\),     PHYSTOP,   PTE_W}, // kern data+memory) show
0 264 moveto (1732  { \(void*\)DEVSPACE, DEVSPACE,      0,         PTE_W}, // more devices) show
0 252 moveto (1733 };) show
0 240 moveto (1734 ) show
0 228 moveto (1735 // Set up kernel part of a page table.) show
0 216 moveto (1736 pde_t*) show
0 204 moveto (1737 setupkvm\(void\)) show
0 192 moveto (1738 {) show
0 180 moveto (1739   pde_t *pgdir;) show
0 168 moveto (1740   struct kmap *k;) show
0 156 moveto (1741 ) show
0 144 moveto (1742   if\(\(pgdir = \(pde_t*\)kalloc\(\)\) == 0\)) show
0 132 moveto (1743     return 0;) show
0 120 moveto (1744   memset\(pgdir, 0, PGSIZE\);) show
0 108 moveto (1745   if \(p2v\(PHYSTOP\) > \(void*\)DEVSPACE\)) show
0 96 moveto (1746     panic\("PHYSTOP too high"\);) show
0 84 moveto (1747   for\(k = kmap; k < &kmap[NELEM\(kmap\)]; k++\)) show
0 72 moveto (1748     if\(mappages\(pgdir, k->virt, k->phys_end - k->phys_start,) show
0 60 moveto (1749                 \(uint\)k->phys_start, k->perm\) < 0\)) show
0 24 moveto (Sheet 17) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 4) show
0 648 moveto (1750       return 0;) show
0 636 moveto (1751   return pgdir;) show
0 624 moveto (1752 }) show
0 612 moveto (1753 ) show
0 600 moveto (1754 // Allocate one page table for the machine for the kernel address) show
0 588 moveto (1755 // space for scheduler processes.) show
0 576 moveto (1756 void) show
0 564 moveto (1757 kvmalloc\(void\)) show
0 552 moveto (1758 {) show
0 540 moveto (1759   kpgdir = setupkvm\(\);) show
0 528 moveto (1760   switchkvm\(\);) show
0 516 moveto (1761 }) show
0 504 moveto (1762 ) show
0 492 moveto (1763 // Switch h/w page table register to the kernel-only page table,) show
0 480 moveto (1764 // for when no process is running.) show
0 468 moveto (1765 void) show
0 456 moveto (1766 switchkvm\(void\)) show
0 444 moveto (1767 {) show
0 432 moveto (1768   lcr3\(v2p\(kpgdir\)\);   // switch to the kernel page table) show
0 420 moveto (1769 }) show
0 408 moveto (1770 ) show
0 396 moveto (1771 // Switch TSS and h/w page table to correspond to process p.) show
0 384 moveto (1772 void) show
0 372 moveto (1773 switchuvm\(struct proc *p\)) show
0 360 moveto (1774 {) show
0 348 moveto (1775   pushcli\(\);) show
0 336 moveto (1776   cpu->gdt[SEG_TSS] = SEG16\(STS_T32A, &cpu->ts, sizeof\(cpu->ts\)-1, 0\);) show
0 324 moveto (1777   cpu->gdt[SEG_TSS].s = 0;) show
0 312 moveto (1778   cpu->ts.ss0 = SEG_KDATA << 3;) show
0 300 moveto (1779   cpu->ts.esp0 = \(uint\)proc->kstack + KSTACKSIZE;) show
0 288 moveto (1780   ltr\(SEG_TSS << 3\);) show
0 276 moveto (1781   if\(p->pgdir == 0\)) show
0 264 moveto (1782     panic\("switchuvm: no pgdir"\);) show
0 252 moveto (1783   lcr3\(v2p\(p->pgdir\)\);  // switch to new address space) show
0 240 moveto (1784   popcli\(\);) show
0 228 moveto (1785 }) show
0 216 moveto (1786 ) show
0 204 moveto (1787 ) show
0 192 moveto (1788 ) show
0 180 moveto (1789 ) show
0 168 moveto (1790 ) show
0 156 moveto (1791 ) show
0 144 moveto (1792 ) show
0 132 moveto (1793 ) show
0 120 moveto (1794 ) show
0 108 moveto (1795 ) show
0 96 moveto (1796 ) show
0 84 moveto (1797 ) show
0 72 moveto (1798 ) show
0 60 moveto (1799 ) show
0 24 moveto (Sheet 17) show
grestore
restore
showpage
%%Page: 26 26
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 5) show
0 648 moveto (1800 // Load the initcode into address 0 of pgdir.) show
0 636 moveto (1801 // sz must be less than a page.) show
0 624 moveto (1802 void) show
0 612 moveto (1803 inituvm\(pde_t *pgdir, char *init, uint sz\)) show
0 600 moveto (1804 {) show
0 588 moveto (1805   char *mem;) show
0 576 moveto (1806 ) show
0 564 moveto (1807   if\(sz >= PGSIZE\)) show
0 552 moveto (1808     panic\("inituvm: more than a page"\);) show
0 540 moveto (1809   mem = kalloc\(\);) show
0 528 moveto (1810   memset\(mem, 0, PGSIZE\);) show
0 516 moveto (1811   mappages\(pgdir, 0, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 504 moveto (1812   memmove\(mem, init, sz\);) show
0 492 moveto (1813 }) show
0 480 moveto (1814 ) show
0 468 moveto (1815 // Load a program segment into pgdir.  addr must be page-aligned) show
0 456 moveto (1816 // and the pages from addr to addr+sz must already be mapped.) show
0 444 moveto (1817 int) show
0 432 moveto (1818 loaduvm\(pde_t *pgdir, char *addr, struct inode *ip, uint offset, uint sz\)) show
0 420 moveto (1819 {) show
0 408 moveto (1820   uint i, pa, n;) show
0 396 moveto (1821   pte_t *pte;) show
0 384 moveto (1822 ) show
0 372 moveto (1823   if\(\(uint\) addr % PGSIZE != 0\)) show
0 360 moveto (1824     panic\("loaduvm: addr must be page aligned"\);) show
0 348 moveto (1825   for\(i = 0; i < sz; i += PGSIZE\){) show
0 336 moveto (1826     if\(\(pte = walkpgdir\(pgdir, addr+i, 0\)\) == 0\)) show
0 324 moveto (1827       panic\("loaduvm: address should exist"\);) show
0 312 moveto (1828     pa = PTE_ADDR\(*pte\);) show
0 300 moveto (1829     if\(sz - i < PGSIZE\)) show
0 288 moveto (1830       n = sz - i;) show
0 276 moveto (1831     else) show
0 264 moveto (1832       n = PGSIZE;) show
0 252 moveto (1833     if\(readi\(ip, p2v\(pa\), offset+i, n\) != n\)) show
0 240 moveto (1834       return -1;) show
0 228 moveto (1835   }) show
0 216 moveto (1836   return 0;) show
0 204 moveto (1837 }) show
0 192 moveto (1838 ) show
0 180 moveto (1839 ) show
0 168 moveto (1840 ) show
0 156 moveto (1841 ) show
0 144 moveto (1842 ) show
0 132 moveto (1843 ) show
0 120 moveto (1844 ) show
0 108 moveto (1845 ) show
0 96 moveto (1846 ) show
0 84 moveto (1847 ) show
0 72 moveto (1848 ) show
0 60 moveto (1849 ) show
0 24 moveto (Sheet 18) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 6) show
0 648 moveto (1850 // Allocate page tables and physical memory to grow process from oldsz to) show
0 636 moveto (1851 // newsz, which need not be page aligned.  Returns new size or 0 on error.) show
0 624 moveto (1852 int) show
0 612 moveto (1853 allocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 600 moveto (1854 {) show
0 588 moveto (1855   char *mem;) show
0 576 moveto (1856   uint a;) show
0 564 moveto (1857 ) show
0 552 moveto (1858   if\(newsz >= KERNBASE\)) show
0 540 moveto (1859     return 0;) show
0 528 moveto (1860   if\(newsz < oldsz\)) show
0 516 moveto (1861     return oldsz;) show
0 504 moveto (1862 ) show
0 492 moveto (1863   a = PGROUNDUP\(oldsz\);) show
0 480 moveto (1864   for\(; a < newsz; a += PGSIZE\){) show
0 468 moveto (1865     mem = kalloc\(\);) show
0 456 moveto (1866     if\(mem == 0\){) show
0 444 moveto (1867       cprintf\("allocuvm out of memory\\n"\);) show
0 432 moveto (1868       deallocuvm\(pgdir, newsz, oldsz\);) show
0 420 moveto (1869       return 0;) show
0 408 moveto (1870     }) show
0 396 moveto (1871     memset\(mem, 0, PGSIZE\);) show
0 384 moveto (1872     mappages\(pgdir, \(char*\)a, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 372 moveto (1873   }) show
0 360 moveto (1874   return newsz;) show
0 348 moveto (1875 }) show
0 336 moveto (1876 ) show
0 324 moveto (1877 // Deallocate user pages to bring the process size from oldsz to) show
0 312 moveto (1878 // newsz.  oldsz and newsz need not be page-aligned, nor does newsz) show
0 300 moveto (1879 // need to be less than oldsz.  oldsz can be larger than the actual) show
0 288 moveto (1880 // process size.  Returns the new process size.) show
0 276 moveto (1881 int) show
0 264 moveto (1882 deallocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 252 moveto (1883 {) show
0 240 moveto (1884   pte_t *pte;) show
0 228 moveto (1885   uint a, pa;) show
0 216 moveto (1886 ) show
0 204 moveto (1887   if\(newsz >= oldsz\)) show
0 192 moveto (1888     return oldsz;) show
0 180 moveto (1889 ) show
0 168 moveto (1890   a = PGROUNDUP\(newsz\);) show
0 156 moveto (1891   for\(; a  < oldsz; a += PGSIZE\){) show
0 144 moveto (1892     pte = walkpgdir\(pgdir, \(char*\)a, 0\);) show
0 132 moveto (1893     if\(!pte\)) show
0 120 moveto (1894       a += \(NPTENTRIES - 1\) * PGSIZE;) show
0 108 moveto (1895     else if\(\(*pte & PTE_P\) != 0\){) show
0 96 moveto (1896       pa = PTE_ADDR\(*pte\);) show
0 84 moveto (1897       if\(pa == 0\)) show
0 72 moveto (1898         panic\("kfree"\);) show
0 60 moveto (1899       char *v = p2v\(pa\);) show
0 24 moveto (Sheet 18) show
grestore
restore
showpage
%%Page: 27 27
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 7) show
0 648 moveto (1900       kfree\(v\);) show
0 636 moveto (1901       *pte = 0;) show
0 624 moveto (1902     }) show
0 612 moveto (1903   }) show
0 600 moveto (1904   return newsz;) show
0 588 moveto (1905 }) show
0 576 moveto (1906 ) show
0 564 moveto (1907 // Free a page table and all the physical memory pages) show
0 552 moveto (1908 // in the user part.) show
0 540 moveto (1909 void) show
0 528 moveto (1910 freevm\(pde_t *pgdir\)) show
0 516 moveto (1911 {) show
0 504 moveto (1912   uint i;) show
0 492 moveto (1913 ) show
0 480 moveto (1914   if\(pgdir == 0\)) show
0 468 moveto (1915     panic\("freevm: no pgdir"\);) show
0 456 moveto (1916   deallocuvm\(pgdir, KERNBASE, 0\);) show
0 444 moveto (1917   for\(i = 0; i < NPDENTRIES; i++\){) show
0 432 moveto (1918     if\(pgdir[i] & PTE_P\){) show
0 420 moveto (1919       char * v = p2v\(PTE_ADDR\(pgdir[i]\)\);) show
0 408 moveto (1920       kfree\(v\);) show
0 396 moveto (1921     }) show
0 384 moveto (1922   }) show
0 372 moveto (1923   kfree\(\(char*\)pgdir\);) show
0 360 moveto (1924 }) show
0 348 moveto (1925 ) show
0 336 moveto (1926 // Clear PTE_U on a page. Used to create an inaccessible) show
0 324 moveto (1927 // page beneath the user stack.) show
0 312 moveto (1928 void) show
0 300 moveto (1929 clearpteu\(pde_t *pgdir, char *uva\)) show
0 288 moveto (1930 {) show
0 276 moveto (1931   pte_t *pte;) show
0 264 moveto (1932 ) show
0 252 moveto (1933   pte = walkpgdir\(pgdir, uva, 0\);) show
0 240 moveto (1934   if\(pte == 0\)) show
0 228 moveto (1935     panic\("clearpteu"\);) show
0 216 moveto (1936   *pte &= ~PTE_U;) show
0 204 moveto (1937 }) show
0 192 moveto (1938 ) show
0 180 moveto (1939 ) show
0 168 moveto (1940 ) show
0 156 moveto (1941 ) show
0 144 moveto (1942 ) show
0 132 moveto (1943 ) show
0 120 moveto (1944 ) show
0 108 moveto (1945 ) show
0 96 moveto (1946 ) show
0 84 moveto (1947 ) show
0 72 moveto (1948 ) show
0 60 moveto (1949 ) show
0 24 moveto (Sheet 19) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 8) show
0 648 moveto (1950 // Given a parent process's page table, create a copy) show
0 636 moveto (1951 // of it for a child.) show
0 624 moveto (1952 pde_t*) show
0 612 moveto (1953 copyuvm\(pde_t *pgdir, uint sz\)) show
0 600 moveto (1954 {) show
0 588 moveto (1955   pde_t *d;) show
0 576 moveto (1956   pte_t *pte;) show
0 564 moveto (1957   uint pa, i, flags;) show
0 552 moveto (1958   char *mem;) show
0 540 moveto (1959 ) show
0 528 moveto (1960   if\(\(d = setupkvm\(\)\) == 0\)) show
0 516 moveto (1961     return 0;) show
0 504 moveto (1962   for\(i = 0; i < sz; i += PGSIZE\){) show
0 492 moveto (1963     if\(\(pte = walkpgdir\(pgdir, \(void *\) i, 0\)\) == 0\)) show
0 480 moveto (1964       panic\("copyuvm: pte should exist"\);) show
0 468 moveto (1965     if\(!\(*pte & PTE_P\)\)) show
0 456 moveto (1966       panic\("copyuvm: page not present"\);) show
0 444 moveto (1967     pa = PTE_ADDR\(*pte\);) show
0 432 moveto (1968     flags = PTE_FLAGS\(*pte\);) show
0 420 moveto (1969     if\(\(mem = kalloc\(\)\) == 0\)) show
0 408 moveto (1970       goto bad;) show
0 396 moveto (1971     memmove\(mem, \(char*\)p2v\(pa\), PGSIZE\);) show
0 384 moveto (1972     if\(mappages\(d, \(void*\)i, PGSIZE, v2p\(mem\), flags\) < 0\)) show
0 372 moveto (1973       goto bad;) show
0 360 moveto (1974   }) show
0 348 moveto (1975   return d;) show
0 336 moveto (1976 ) show
0 324 moveto (1977 bad:) show
0 312 moveto (1978   freevm\(d\);) show
0 300 moveto (1979   return 0;) show
0 288 moveto (1980 }) show
0 276 moveto (1981 ) show
0 264 moveto (1982 // Map user virtual address to kernel address.) show
0 252 moveto (1983 char*) show
0 240 moveto (1984 uva2ka\(pde_t *pgdir, char *uva\)) show
0 228 moveto (1985 {) show
0 216 moveto (1986   pte_t *pte;) show
0 204 moveto (1987 ) show
0 192 moveto (1988   pte = walkpgdir\(pgdir, uva, 0\);) show
0 180 moveto (1989   if\(\(*pte & PTE_P\) == 0\)) show
0 168 moveto (1990     return 0;) show
0 156 moveto (1991   if\(\(*pte & PTE_U\) == 0\)) show
0 144 moveto (1992     return 0;) show
0 132 moveto (1993   return \(char*\)p2v\(PTE_ADDR\(*pte\)\);) show
0 120 moveto (1994 }) show
0 108 moveto (1995 ) show
0 96 moveto (1996 ) show
0 84 moveto (1997 ) show
0 72 moveto (1998 ) show
0 60 moveto (1999 ) show
0 24 moveto (Sheet 19) show
grestore
restore
showpage
%%Page: 28 28
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vm.c  Page 9) show
0 648 moveto (2000 // Copy len bytes from p to user address va in page table pgdir.) show
0 636 moveto (2001 // Most useful when pgdir is not the current page table.) show
0 624 moveto (2002 // uva2ka ensures this only works for PTE_U pages.) show
0 612 moveto (2003 int) show
0 600 moveto (2004 copyout\(pde_t *pgdir, uint va, void *p, uint len\)) show
0 588 moveto (2005 {) show
0 576 moveto (2006   char *buf, *pa0;) show
0 564 moveto (2007   uint n, va0;) show
0 552 moveto (2008 ) show
0 540 moveto (2009   buf = \(char*\)p;) show
0 528 moveto (2010   while\(len > 0\){) show
0 516 moveto (2011     va0 = \(uint\)PGROUNDDOWN\(va\);) show
0 504 moveto (2012     pa0 = uva2ka\(pgdir, \(char*\)va0\);) show
0 492 moveto (2013     if\(pa0 == 0\)) show
0 480 moveto (2014       return -1;) show
0 468 moveto (2015     n = PGSIZE - \(va - va0\);) show
0 456 moveto (2016     if\(n > len\)) show
0 444 moveto (2017       n = len;) show
0 432 moveto (2018     memmove\(pa0 + \(va - va0\), buf, n\);) show
0 420 moveto (2019     len -= n;) show
0 408 moveto (2020     buf += n;) show
0 396 moveto (2021     va = va0 + PGSIZE;) show
0 384 moveto (2022   }) show
0 372 moveto (2023   return 0;) show
0 360 moveto (2024 }) show
0 348 moveto (2025 ) show
0 336 moveto (2026 // Blank page.) show
0 324 moveto (2027 // Blank page.) show
0 312 moveto (2028 // Blank page.) show
0 300 moveto (2029 ) show
0 288 moveto (2030 ) show
0 276 moveto (2031 ) show
0 264 moveto (2032 ) show
0 252 moveto (2033 ) show
0 240 moveto (2034 ) show
0 228 moveto (2035 ) show
0 216 moveto (2036 ) show
0 204 moveto (2037 ) show
0 192 moveto (2038 ) show
0 180 moveto (2039 ) show
0 168 moveto (2040 ) show
0 156 moveto (2041 ) show
0 144 moveto (2042 ) show
0 132 moveto (2043 ) show
0 120 moveto (2044 ) show
0 108 moveto (2045 ) show
0 96 moveto (2046 ) show
0 84 moveto (2047 ) show
0 72 moveto (2048 ) show
0 60 moveto (2049 ) show
0 24 moveto (Sheet 20) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.h  Page 1) show
0 648 moveto (2050 // Segments in proc->gdt.) show
0 636 moveto (2051 #define NSEGS     7) show
0 624 moveto (2052 #define INITUID 0) show
0 612 moveto (2053 #define INITGID 0) show
0 600 moveto (2054 #define NUM_READY_LISTS 5) show
0 588 moveto (2055 #define TICKS_TO_PROMOTE 100) show
0 576 moveto (2056 #define INITBUDGET 50) show
0 564 moveto (2057 ) show
0 552 moveto (2058 // Per-CPU state) show
0 540 moveto (2059 struct cpu {) show
0 528 moveto (2060   uchar id;                    // Local APIC ID; index into cpus[] below) show
0 516 moveto (2061   struct context *scheduler;   // swtch\(\) here to enter scheduler) show
0 504 moveto (2062   struct taskstate ts;         // Used by x86 to find stack for interrupt) show
0 492 moveto (2063   struct segdesc gdt[NSEGS];   // x86 global descriptor table) show
0 480 moveto (2064   volatile uint started;       // Has the CPU started?) show
0 468 moveto (2065   int ncli;                    // Depth of pushcli nesting.) show
0 456 moveto (2066   int intena;                  // Were interrupts enabled before pushcli?) show
0 444 moveto (2067 ) show
0 432 moveto (2068   // Cpu-local storage variables; see below) show
0 420 moveto (2069   struct cpu *cpu;) show
0 408 moveto (2070   struct proc *proc;           // The currently-running process.) show
0 396 moveto (2071 };) show
0 384 moveto (2072 ) show
0 372 moveto (2073 extern struct cpu cpus[NCPU];) show
0 360 moveto (2074 extern int ncpu;) show
0 348 moveto (2075 ) show
0 336 moveto (2076 // Per-CPU variables, holding pointers to the) show
0 324 moveto (2077 // current cpu and to the current process.) show
0 312 moveto (2078 // The asm suffix tells gcc to use "%gs:0" to refer to cpu) show
0 300 moveto (2079 // and "%gs:4" to refer to proc.  seginit sets up the) show
0 288 moveto (2080 // %gs segment register so that %gs refers to the memory) show
0 276 moveto (2081 // holding those two variables in the local cpu's struct cpu.) show
0 264 moveto (2082 // This is similar to how thread-local variables are implemented) show
0 252 moveto (2083 // in thread libraries such as Linux pthreads.) show
0 240 moveto (2084 extern struct cpu *cpu asm\("%gs:0"\);       // &cpus[cpunum\(\)]) show
0 228 moveto (2085 extern struct proc *proc asm\("%gs:4"\);     // cpus[cpunum\(\)].proc) show
0 216 moveto (2086 ) show
0 204 moveto (2087 // Saved registers for kernel context switches.) show
0 192 moveto (2088 // Don't need to save all the segment registers \(%cs, etc\),) show
0 180 moveto (2089 // because they are constant across kernel contexts.) show
0 168 moveto (2090 // Don't need to save %eax, %ecx, %edx, because the) show
0 156 moveto (2091 // x86 convention is that the caller has saved them.) show
0 144 moveto (2092 // Contexts are stored at the bottom of the stack they) show
0 132 moveto (2093 // describe; the stack pointer is the address of the context.) show
0 120 moveto (2094 // The layout of the context matches the layout of the stack in swtch.S) show
0 108 moveto (2095 // at the "Switch stacks" comment. Switch doesn't save eip explicitly,) show
0 96 moveto (2096 // but it is on the stack and allocproc\(\) manipulates it.) show
0 84 moveto (2097 struct context {) show
0 72 moveto (2098   uint edi;) show
0 60 moveto (2099   uint esi;) show
0 24 moveto (Sheet 20) show
grestore
restore
showpage
%%Page: 29 29
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.h  Page 2) show
0 648 moveto (2100   uint ebx;) show
0 636 moveto (2101   uint ebp;) show
0 624 moveto (2102   uint eip;) show
0 612 moveto (2103 };) show
0 600 moveto (2104 ) show
0 588 moveto (2105 enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };) show
0 576 moveto (2106 ) show
0 564 moveto (2107 // Per-process state) show
0 552 moveto (2108 struct proc {) show
0 540 moveto (2109   uint sz;                     // Size of process memory \(bytes\)) show
0 528 moveto (2110   pde_t* pgdir;                // Page table) show
0 516 moveto (2111   char *kstack;                // Bottom of kernel stack for this process) show
0 504 moveto (2112   enum procstate state;        // Process state) show
0 492 moveto (2113   uint pid;                    // Process ID) show
0 480 moveto (2114   struct proc *parent;         // Parent process) show
0 468 moveto (2115   struct trapframe *tf;        // Trap frame for current syscall) show
0 456 moveto (2116   struct context *context;     // swtch\(\) here to run process) show
0 444 moveto (2117   void *chan;                  // If non-zero, sleeping on chan) show
0 432 moveto (2118   int killed;                  // If non-zero, have been killed) show
0 420 moveto (2119   struct file *ofile[NOFILE];  // Open files) show
0 408 moveto (2120   struct inode *cwd;           // Current directory) show
0 396 moveto (2121   char name[16];               // Process name \(debugging\)) show
0 384 moveto (2122 ) show
0 372 moveto (2123   //STUDENT IMPLEMENTATION) show
0 360 moveto (2124   uint start_ticks;            // Start time) show
0 348 moveto (2125   uint uid;                    // User ID Number) show
0 336 moveto (2126   uint gid;                    // Group ID Number) show
0 324 moveto (2127   uint cpu_ticks_total;        // Amount of ticks) show
0 312 moveto (2128   uint cpu_ticks_in;           // Total ticks spent in cpu) show
0 300 moveto (2129   uint priority;               // The priority of this process) show
0 288 moveto (2130   struct proc* next;           // Points to next process in the same list) show
0 276 moveto (2131   int budget;                 // Ticks Before Aging) show
0 264 moveto (2132 ) show
0 252 moveto (2133 };) show
0 240 moveto (2134 ) show
0 228 moveto (2135 // Process memory is laid out contiguously, low addresses first:) show
0 216 moveto (2136 //   text) show
0 204 moveto (2137 //   original data and bss) show
0 192 moveto (2138 //   fixed-size stack) show
0 180 moveto (2139 //   expandable heap) show
0 168 moveto (2140 ) show
0 156 moveto (2141 ) show
0 144 moveto (2142 ) show
0 132 moveto (2143 ) show
0 120 moveto (2144 ) show
0 108 moveto (2145 ) show
0 96 moveto (2146 ) show
0 84 moveto (2147 ) show
0 72 moveto (2148 ) show
0 60 moveto (2149 ) show
0 24 moveto (Sheet 21) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 1) show
0 648 moveto (2150 #include "types.h") show
0 636 moveto (2151 #include "defs.h") show
0 624 moveto (2152 #include "param.h") show
0 612 moveto (2153 #include "memlayout.h") show
0 600 moveto (2154 #include "mmu.h") show
0 588 moveto (2155 #include "x86.h") show
0 576 moveto (2156 #include "proc.h") show
0 564 moveto (2157 #include "spinlock.h") show
0 552 moveto (2158 #include "asm.h") show
0 540 moveto (2159 #include "uproc.h") show
0 528 moveto (2160 #include "queue.h") show
0 516 moveto (2161 ) show
0 504 moveto (2162 struct {) show
0 492 moveto (2163   struct spinlock lock;) show
0 480 moveto (2164   struct proc proc[NPROC];) show
0 468 moveto (2165   struct queue ReadyList[NUM_READY_LISTS];  // Array of queue for MLFQ) show
0 456 moveto (2166   struct queue FreeList;                    // Queue for UNUSED processes) show
0 444 moveto (2167   uint PromoteAtTime;) show
0 432 moveto (2168 ) show
0 420 moveto (2169 } ptable;) show
0 408 moveto (2170 ) show
0 396 moveto (2171 static struct proc *initproc;) show
0 384 moveto (2172 ) show
0 372 moveto (2173 int nextpid = 1;) show
0 360 moveto (2174 extern void forkret\(void\);) show
0 348 moveto (2175 extern void trapret\(void\);) show
0 336 moveto (2176 // Project 3) show
0 324 moveto (2177 // Helper Functions to manipulate the queues) show
0 312 moveto (2178 ) show
0 300 moveto (2179 extern int      queue \(struct queue* this, struct proc* first\);) show
0 288 moveto (2180 extern int     enqueue \(struct queue* this, struct proc* nproc\);) show
0 276 moveto (2181 extern  struct proc* dequeue \(struct queue* this\);) show
0 264 moveto (2182 extern int     updateBudget\(struct proc* this, int now\);) show
0 252 moveto (2183 extern void    promote\(\);) show
0 240 moveto (2184 ) show
0 228 moveto (2185 static void wakeup1\(void *chan\);) show
0 216 moveto (2186 ) show
0 204 moveto (2187 void) show
0 192 moveto (2188 pinit\(void\)) show
0 180 moveto (2189 {) show
0 168 moveto (2190   initlock\(&ptable.lock, "ptable"\);) show
0 156 moveto (2191 }) show
0 144 moveto (2192 ) show
0 132 moveto (2193 ) show
0 120 moveto (2194 ) show
0 108 moveto (2195 ) show
0 96 moveto (2196 ) show
0 84 moveto (2197 ) show
0 72 moveto (2198 ) show
0 60 moveto (2199 ) show
0 24 moveto (Sheet 21) show
grestore
restore
showpage
%%Page: 30 30
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 2) show
0 648 moveto (2200 // Look in the process table for an UNUSED proc.) show
0 636 moveto (2201 // If found, change state to EMBRYO and initialize) show
0 624 moveto (2202 // state required to run in the kernel.) show
0 612 moveto (2203 // Otherwise return 0.) show
0 600 moveto (2204 static struct proc*) show
0 588 moveto (2205 allocproc\(void\)) show
0 576 moveto (2206 {) show
0 564 moveto (2207   struct proc *p;) show
0 552 moveto (2208   char *sp;) show
0 540 moveto (2209 ) show
0 528 moveto (2210   acquire\(&ptable.lock\);) show
0 516 moveto (2211   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 504 moveto (2212     if\(p->state == UNUSED\)) show
0 492 moveto (2213       goto found;) show
0 480 moveto (2214   release\(&ptable.lock\);) show
0 468 moveto (2215   return 0;) show
0 456 moveto (2216 ) show
0 444 moveto (2217   // Project 3 Pull process from Free List) show
0 432 moveto (2218   acquire\(&ptable.lock\);) show
0 420 moveto (2219   p = 0;                                // Must be initialized, so assume the worst case) show
0 408 moveto (2220   p = dequeue\(&ptable.FreeList\);) show
0 396 moveto (2221 ) show
0 384 moveto (2222   if\(p != 0\)) show
0 372 moveto (2223       goto found;) show
0 360 moveto (2224   release\(&ptable.lock\);) show
0 348 moveto (2225   return 0;) show
0 336 moveto (2226 ) show
0 324 moveto (2227 found:) show
0 312 moveto (2228   p->state = EMBRYO;) show
0 300 moveto (2229   p->pid = nextpid++;) show
0 288 moveto (2230   release\(&ptable.lock\);) show
0 276 moveto (2231 ) show
0 264 moveto (2232   // Allocate kernel stack.) show
0 252 moveto (2233   if\(\(p->kstack = kalloc\(\)\) == 0\){) show
0 240 moveto (2234     p->state = UNUSED;) show
0 228 moveto (2235     enqueue\(&ptable.FreeList, p\);) show
0 216 moveto (2236     return 0;) show
0 204 moveto (2237   }) show
0 192 moveto (2238   sp = p->kstack + KSTACKSIZE;) show
0 180 moveto (2239 ) show
0 168 moveto (2240   // Leave room for trap frame.) show
0 156 moveto (2241   sp -= sizeof *p->tf;) show
0 144 moveto (2242   p->tf = \(struct trapframe*\)sp;) show
0 132 moveto (2243 ) show
0 120 moveto (2244   // Set up new context to start executing at forkret,) show
0 108 moveto (2245   // which returns to trapret.) show
0 96 moveto (2246   sp -= 4;) show
0 84 moveto (2247   *\(uint*\)sp = \(uint\)trapret;) show
0 72 moveto (2248 ) show
0 60 moveto (2249 ) show
0 24 moveto (Sheet 22) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 3) show
0 648 moveto (2250   sp -= sizeof *p->context;) show
0 636 moveto (2251   p->context = \(struct context*\)sp;) show
0 624 moveto (2252   memset\(p->context, 0, sizeof *p->context\);) show
0 612 moveto (2253   p->context->eip = \(uint\)forkret;) show
0 600 moveto (2254 ) show
0 588 moveto (2255   // STUDENT CODE) show
0 576 moveto (2256   // Grab Start Time) show
0 564 moveto (2257   acquire\(&tickslock\);) show
0 552 moveto (2258   p->start_ticks = \(uint\)ticks;) show
0 540 moveto (2259   release\(&tickslock\);) show
0 528 moveto (2260 ) show
0 516 moveto (2261   p->cpu_ticks_total = 0;) show
0 504 moveto (2262   p->cpu_ticks_in = 0;) show
0 492 moveto (2263   return p;) show
0 480 moveto (2264 }) show
0 468 moveto (2265 ) show
0 456 moveto (2266 // Set up first user process.) show
0 444 moveto (2267 void) show
0 432 moveto (2268 userinit\(void\)) show
0 420 moveto (2269 {) show
0 408 moveto (2270   struct proc *p;) show
0 396 moveto (2271   extern char _binary_initcode_start[], _binary_initcode_size[];) show
0 384 moveto (2272 ) show
0 372 moveto (2273   //Project 3) show
0 360 moveto (2274   // Before any process is created initialize all processes to) show
0 348 moveto (2275   // the free list) show
0 336 moveto (2276 ) show
0 324 moveto (2277   acquire\(&ptable.lock\);) show
0 312 moveto (2278   queue\(&ptable.FreeList, &ptable.proc[0]\);) show
0 300 moveto (2279   for\(int i = 1; i < NPROC; i++\){) show
0 288 moveto (2280     enqueue\(&ptable.FreeList, &ptable.proc[i]\);) show
0 276 moveto (2281   }) show
0 264 moveto (2282   release\(&ptable.lock\);) show
0 252 moveto (2283 ) show
0 240 moveto (2284 ) show
0 228 moveto (2285   p = allocproc\(\);) show
0 216 moveto (2286   initproc = p;) show
0 204 moveto (2287   if\(\(p->pgdir = setupkvm\(\)\) == 0\)) show
0 192 moveto (2288     panic\("userinit: out of memory?"\);) show
0 180 moveto (2289   inituvm\(p->pgdir, _binary_initcode_start, \(int\)_binary_initcode_size\);) show
0 168 moveto (2290   p->sz = PGSIZE;) show
0 156 moveto (2291   memset\(p->tf, 0, sizeof\(*p->tf\)\);) show
0 144 moveto (2292   p->tf->cs = \(SEG_UCODE << 3\) | DPL_USER;) show
0 132 moveto (2293   p->tf->ds = \(SEG_UDATA << 3\) | DPL_USER;) show
0 120 moveto (2294   p->tf->es = p->tf->ds;) show
0 108 moveto (2295   p->tf->ss = p->tf->ds;) show
0 96 moveto (2296   p->tf->eflags = FL_IF;) show
0 84 moveto (2297   p->tf->esp = PGSIZE;) show
0 72 moveto (2298   p->tf->eip = 0;  // beginning of initcode.S) show
0 60 moveto (2299 ) show
0 24 moveto (Sheet 22) show
grestore
restore
showpage
%%Page: 31 31
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 4) show
0 648 moveto (2300   safestrcpy\(p->name, "initcode", sizeof\(p->name\)\);) show
0 636 moveto (2301   p->cwd = namei\("/"\);) show
0 624 moveto (2302 ) show
0 612 moveto (2303   p->state = RUNNABLE;) show
0 600 moveto (2304 ) show
0 588 moveto (2305   p->uid = INITUID;) show
0 576 moveto (2306   p->gid = INITGID;) show
0 564 moveto (2307   p->budget = INITBUDGET;) show
0 552 moveto (2308   //Project 3) show
0 540 moveto (2309   acquire\(&ptable.lock\);) show
0 528 moveto (2310   enqueue\(&ptable.ReadyList[0], p\);) show
0 516 moveto (2311   release\(&ptable.lock\);) show
0 504 moveto (2312 }) show
0 492 moveto (2313 ) show
0 480 moveto (2314 // Grow current process's memory by n bytes.) show
0 468 moveto (2315 // Return 0 on success, -1 on failure.) show
0 456 moveto (2316 int) show
0 444 moveto (2317 growproc\(int n\)) show
0 432 moveto (2318 {) show
0 420 moveto (2319   uint sz;) show
0 408 moveto (2320 ) show
0 396 moveto (2321   sz = proc->sz;) show
0 384 moveto (2322   if\(n > 0\){) show
0 372 moveto (2323     if\(\(sz = allocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 360 moveto (2324       return -1;) show
0 348 moveto (2325   } else if\(n < 0\){) show
0 336 moveto (2326     if\(\(sz = deallocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 324 moveto (2327       return -1;) show
0 312 moveto (2328   }) show
0 300 moveto (2329   proc->sz = sz;) show
0 288 moveto (2330   switchuvm\(proc\);) show
0 276 moveto (2331   return 0;) show
0 264 moveto (2332 }) show
0 252 moveto (2333 ) show
0 240 moveto (2334 // Create a new process copying p as the parent.) show
0 228 moveto (2335 // Sets up stack to return as if from system call.) show
0 216 moveto (2336 // Caller must set state of returned proc to RUNNABLE.) show
0 204 moveto (2337 int) show
0 192 moveto (2338 fork\(void\)) show
0 180 moveto (2339 {) show
0 168 moveto (2340   int i, pid;) show
0 156 moveto (2341   struct proc *np;) show
0 144 moveto (2342 ) show
0 132 moveto (2343   // Allocate process.) show
0 120 moveto (2344   if\(\(np = allocproc\(\)\) == 0\)) show
0 108 moveto (2345     return -1;) show
0 96 moveto (2346 ) show
0 84 moveto (2347 ) show
0 72 moveto (2348 ) show
0 60 moveto (2349 ) show
0 24 moveto (Sheet 23) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 5) show
0 648 moveto (2350   // Copy process state from p.) show
0 636 moveto (2351   if\(\(np->pgdir = copyuvm\(proc->pgdir, proc->sz\)\) == 0\){) show
0 624 moveto (2352     kfree\(np->kstack\);) show
0 612 moveto (2353     np->kstack = 0;) show
0 600 moveto (2354     np->state = UNUSED;) show
0 588 moveto (2355     acquire\(&ptable.lock\);) show
0 576 moveto (2356     enqueue\(&ptable.FreeList, np\);) show
0 564 moveto (2357     release\(&ptable.lock\);) show
0 552 moveto (2358     return -1;) show
0 540 moveto (2359   }) show
0 528 moveto (2360   np->sz = proc->sz;) show
0 516 moveto (2361   np->parent = proc;) show
0 504 moveto (2362   *np->tf = *proc->tf;) show
0 492 moveto (2363 ) show
0 480 moveto (2364   // Clear %eax so that fork returns 0 in the child.) show
0 468 moveto (2365   np->tf->eax = 0;) show
0 456 moveto (2366 ) show
0 444 moveto (2367   for\(i = 0; i < NOFILE; i++\)) show
0 432 moveto (2368     if\(proc->ofile[i]\)) show
0 420 moveto (2369       np->ofile[i] = filedup\(proc->ofile[i]\);) show
0 408 moveto (2370   np->cwd = idup\(proc->cwd\);) show
0 396 moveto (2371 ) show
0 384 moveto (2372   safestrcpy\(np->name, proc->name, sizeof\(proc->name\)\);) show
0 372 moveto (2373 ) show
0 360 moveto (2374   //STUDENT CODE copy all ids) show
0 348 moveto (2375   pid = np->pid;) show
0 336 moveto (2376   np->uid = proc->uid;) show
0 324 moveto (2377   np->gid = proc->gid;) show
0 312 moveto (2378 ) show
0 300 moveto (2379   // lock to force the compiler to emit the np->state write last.) show
0 288 moveto (2380   acquire\(&ptable.lock\);) show
0 276 moveto (2381   np->state = RUNNABLE;) show
0 264 moveto (2382   enqueue\(&ptable.ReadyList[0], np\);) show
0 252 moveto (2383   release\(&ptable.lock\);) show
0 240 moveto (2384 ) show
0 228 moveto (2385   return pid;) show
0 216 moveto (2386 }) show
0 204 moveto (2387 ) show
0 192 moveto (2388 ) show
0 180 moveto (2389 ) show
0 168 moveto (2390 ) show
0 156 moveto (2391 ) show
0 144 moveto (2392 ) show
0 132 moveto (2393 ) show
0 120 moveto (2394 ) show
0 108 moveto (2395 ) show
0 96 moveto (2396 ) show
0 84 moveto (2397 ) show
0 72 moveto (2398 ) show
0 60 moveto (2399 ) show
0 24 moveto (Sheet 23) show
grestore
restore
showpage
%%Page: 32 32
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 6) show
0 648 moveto (2400 // Exit the current process.  Does not return.) show
0 636 moveto (2401 // An exited process remains in the zombie state) show
0 624 moveto (2402 // until its parent calls wait\(\) to find out it exited.) show
0 612 moveto (2403 void) show
0 600 moveto (2404 exit\(void\)) show
0 588 moveto (2405 {) show
0 576 moveto (2406   struct proc *p;) show
0 564 moveto (2407   int fd;) show
0 552 moveto (2408 ) show
0 540 moveto (2409   if\(proc == initproc\)) show
0 528 moveto (2410     panic\("init exiting"\);) show
0 516 moveto (2411 ) show
0 504 moveto (2412   // Close all open files.) show
0 492 moveto (2413   for\(fd = 0; fd < NOFILE; fd++\){) show
0 480 moveto (2414     if\(proc->ofile[fd]\){) show
0 468 moveto (2415       fileclose\(proc->ofile[fd]\);) show
0 456 moveto (2416       proc->ofile[fd] = 0;) show
0 444 moveto (2417     }) show
0 432 moveto (2418   }) show
0 420 moveto (2419 ) show
0 408 moveto (2420   begin_op\(\);) show
0 396 moveto (2421   iput\(proc->cwd\);) show
0 384 moveto (2422   end_op\(\);) show
0 372 moveto (2423   proc->cwd = 0;) show
0 360 moveto (2424 ) show
0 348 moveto (2425   acquire\(&ptable.lock\);) show
0 336 moveto (2426 ) show
0 324 moveto (2427   // Parent might be sleeping in wait\(\).) show
0 312 moveto (2428   wakeup1\(proc->parent\);) show
0 300 moveto (2429 ) show
0 288 moveto (2430   // Pass abandoned children to init.) show
0 276 moveto (2431   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 264 moveto (2432     if\(p->parent == proc\){) show
0 252 moveto (2433       p->parent = initproc;) show
0 240 moveto (2434       if\(p->state == ZOMBIE\)) show
0 228 moveto (2435         wakeup1\(initproc\);) show
0 216 moveto (2436     }) show
0 204 moveto (2437   }) show
0 192 moveto (2438   // Jump into the scheduler, never to return.) show
0 180 moveto (2439   proc->state = ZOMBIE;) show
0 168 moveto (2440   sched\(\);) show
0 156 moveto (2441   panic\("zombie exit"\);) show
0 144 moveto (2442 }) show
0 132 moveto (2443 ) show
0 120 moveto (2444 ) show
0 108 moveto (2445 ) show
0 96 moveto (2446 ) show
0 84 moveto (2447 ) show
0 72 moveto (2448 ) show
0 60 moveto (2449 ) show
0 24 moveto (Sheet 24) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 7) show
0 648 moveto (2450 // Wait for a child process to exit and return its pid.) show
0 636 moveto (2451 // Return -1 if this process has no children.) show
0 624 moveto (2452 int) show
0 612 moveto (2453 wait\(void\)) show
0 600 moveto (2454 {) show
0 588 moveto (2455   struct proc *p;) show
0 576 moveto (2456   int havekids, pid;) show
0 564 moveto (2457 ) show
0 552 moveto (2458   acquire\(&ptable.lock\);) show
0 540 moveto (2459   for\(;;\){) show
0 528 moveto (2460     // Scan through table looking for zombie children.) show
0 516 moveto (2461     havekids = 0;) show
0 504 moveto (2462     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 492 moveto (2463       if\(p->parent != proc\)) show
0 480 moveto (2464         continue;) show
0 468 moveto (2465       havekids = 1;) show
0 456 moveto (2466       if\(p->state == ZOMBIE\){) show
0 444 moveto (2467         // Found one.) show
0 432 moveto (2468         pid = p->pid;) show
0 420 moveto (2469         kfree\(p->kstack\);) show
0 408 moveto (2470         p->kstack = 0;) show
0 396 moveto (2471         freevm\(p->pgdir\);) show
0 384 moveto (2472         p->state = UNUSED;) show
0 372 moveto (2473         p->pid = 0;) show
0 360 moveto (2474         p->parent = 0;) show
0 348 moveto (2475         p->name[0] = 0;) show
0 336 moveto (2476         p->killed = 0;) show
0 324 moveto (2477         enqueue\(&ptable.FreeList, p\);) show
0 312 moveto (2478         release\(&ptable.lock\);) show
0 300 moveto (2479         return pid;) show
0 288 moveto (2480       }) show
0 276 moveto (2481     }) show
0 264 moveto (2482 ) show
0 252 moveto (2483     // No point waiting if we don't have any children.) show
0 240 moveto (2484     if\(!havekids || proc->killed\){) show
0 228 moveto (2485       release\(&ptable.lock\);) show
0 216 moveto (2486       return -1;) show
0 204 moveto (2487     }) show
0 192 moveto (2488 ) show
0 180 moveto (2489     // Wait for children to exit.  \(See wakeup1 call in proc_exit.\)) show
0 168 moveto (2490     sleep\(proc, &ptable.lock\);  ) show
0 156 moveto (2491   }) show
0 144 moveto (2492 }) show
0 132 moveto (2493 ) show
0 120 moveto (2494 ) show
0 108 moveto (2495 ) show
0 96 moveto (2496 ) show
0 84 moveto (2497 ) show
0 72 moveto (2498 ) show
0 60 moveto (2499 ) show
0 24 moveto (Sheet 24) show
grestore
restore
showpage
%%Page: 33 33
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 8) show
0 648 moveto (2500 // Per-CPU process scheduler.) show
0 636 moveto (2501 // Each CPU calls scheduler\(\) after setting itself up.) show
0 624 moveto (2502 // Scheduler never returns.  It loops, doing:) show
0 612 moveto (2503 //  - choose a process to run) show
0 600 moveto (2504 //  - swtch to start running that process) show
0 588 moveto (2505 //  - eventually that process transfers control) show
0 576 moveto (2506 //      via swtch back to the scheduler.) show
0 564 moveto (2507 #ifndef CS333_P3) show
0 552 moveto (2508 // original xv6 scheduler. Use if CS333_P3 NOT defined.) show
0 540 moveto (2509 void) show
0 528 moveto (2510 scheduler\(void\)) show
0 516 moveto (2511 {) show
0 504 moveto (2512   struct proc *p;) show
0 492 moveto (2513   uint now;) show
0 480 moveto (2514 ) show
0 468 moveto (2515   for\(;;\){) show
0 456 moveto (2516     // Enable interrupts on this processor.) show
0 444 moveto (2517     sti\(\);) show
0 432 moveto (2518 ) show
0 420 moveto (2519     // Loop over process table looking for process to run.) show
0 408 moveto (2520     acquire\(&ptable.lock\);) show
0 396 moveto (2521     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 384 moveto (2522       if\(p->state != RUNNABLE\)) show
0 372 moveto (2523         continue;) show
0 360 moveto (2524 ) show
0 348 moveto (2525       // Switch to chosen process.  It is the process's job) show
0 336 moveto (2526       // to release ptable.lock and then reacquire it) show
0 324 moveto (2527       // before jumping back to us.) show
0 312 moveto (2528       proc = p;) show
0 300 moveto (2529       switchuvm\(p\);) show
0 288 moveto (2530       p->state = RUNNING;) show
0 276 moveto (2531 ) show
0 264 moveto (2532       acquire\(&tickslock\);) show
0 252 moveto (2533       now = \(uint\)ticks;) show
0 240 moveto (2534       release\(&tickslock\);) show
0 228 moveto (2535       p->cpu_ticks_in = now;) show
0 216 moveto (2536 ) show
0 204 moveto (2537       swtch\(&cpu->scheduler, proc->context\);) show
0 192 moveto (2538       switchkvm\(\);) show
0 180 moveto (2539 ) show
0 168 moveto (2540       // Process is done running for now.) show
0 156 moveto (2541       // It should have changed its p->state before coming back.) show
0 144 moveto (2542       proc = 0;) show
0 132 moveto (2543     }) show
0 120 moveto (2544     release\(&ptable.lock\);) show
0 108 moveto (2545 ) show
0 96 moveto (2546   }) show
0 84 moveto (2547 }) show
0 72 moveto (2548 ) show
0 60 moveto (2549 ) show
0 24 moveto (Sheet 25) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 9) show
0 648 moveto (2550 #else) show
0 636 moveto (2551 // CS333_P3 MLFQ scheduler implementation goes here) show
0 624 moveto (2552 void) show
0 612 moveto (2553 scheduler\(void\)) show
0 600 moveto (2554 {) show
0 588 moveto (2555 ) show
0 576 moveto (2556   int CURRENT = 0;) show
0 564 moveto (2557   struct proc *p = 0;) show
0 552 moveto (2558   uint now = 0;) show
0 540 moveto (2559 ) show
0 528 moveto (2560 //  acquire\(&ptable.lock\);) show
0 516 moveto (2561 //  ptable.PromoteAtTime = TICKS_TO_PROMOTE;) show
0 504 moveto (2562 //  release\(&ptable.lock\);) show
0 492 moveto (2563   for\(;;\){) show
0 480 moveto (2564     // Enable interrupts on this processor.) show
0 468 moveto (2565     sti\(\);) show
0 456 moveto (2566 //    if\(now >= ptable.PromoteAtTime \){) show
0 444 moveto (2567 //          promote\(\);) show
0 432 moveto (2568 //          ptable.PromoteAtTime = ptable.PromoteAtTime + TICKS_TO_PROMOTE;) show
0 420 moveto (2569 //    }) show
0 408 moveto (2570     if\(CURRENT == NUM_READY_LISTS\) //Go back to top of queue) show
0 396 moveto (2571         CURRENT = 0;) show
0 384 moveto (2572     // Loop over process table looking for process to run.) show
0 372 moveto (2573     acquire\(&ptable.lock\);) show
0 360 moveto (2574     p = dequeue\(&ptable.ReadyList[CURRENT]\);) show
0 348 moveto (2575     if\(p == 0\){) show
0 336 moveto (2576        CURRENT++;) show
0 324 moveto (2577         release\(&ptable.lock\);) show
0 312 moveto (2578         continue;) show
0 300 moveto (2579     }) show
0 288 moveto (2580       // Switch to chosen process.  It is the process's job) show
0 276 moveto (2581       // to release ptable.lock and then reacquire it) show
0 264 moveto (2582       // before jumping back to us.) show
0 252 moveto (2583       proc = p;) show
0 240 moveto (2584       switchuvm\(p\);) show
0 228 moveto (2585       p->state = RUNNING;) show
0 216 moveto (2586 ) show
0 204 moveto (2587       acquire\(&tickslock\);) show
0 192 moveto (2588       now = \(uint\)ticks;) show
0 180 moveto (2589       release\(&tickslock\);) show
0 168 moveto (2590       p->cpu_ticks_in = now;) show
0 156 moveto (2591       // Is it time to promote?) show
0 144 moveto (2592      swtch\(&cpu->scheduler, proc->context\);) show
0 132 moveto (2593       switchkvm\(\);) show
0 120 moveto (2594 ) show
0 108 moveto (2595       // Process is done running for now.) show
0 96 moveto (2596       // It should have changed its p->state before coming back.) show
0 84 moveto (2597       proc = 0;) show
0 72 moveto (2598     release\(&ptable.lock\);) show
0 60 moveto (2599    }) show
0 24 moveto (Sheet 25) show
grestore
restore
showpage
%%Page: 34 34
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 10) show
0 648 moveto (2600 }) show
0 636 moveto (2601 #endif) show
0 624 moveto (2602 ) show
0 612 moveto (2603 // Enter scheduler.  Must hold only ptable.lock) show
0 600 moveto (2604 // and have changed proc->state.) show
0 588 moveto (2605 void) show
0 576 moveto (2606 sched\(void\)) show
0 564 moveto (2607 {) show
0 552 moveto (2608   int rc;) show
0 540 moveto (2609   int intena;) show
0 528 moveto (2610   uint now;) show
0 516 moveto (2611 ) show
0 504 moveto (2612   if\(!holding\(&ptable.lock\)\)) show
0 492 moveto (2613     panic\("sched ptable.lock"\);) show
0 480 moveto (2614   if\(cpu->ncli != 1\)) show
0 468 moveto (2615     panic\("sched locks"\);) show
0 456 moveto (2616   if\(proc->state == RUNNING\)) show
0 444 moveto (2617     panic\("sched running"\);) show
0 432 moveto (2618   if\(readeflags\(\)&FL_IF\)) show
0 420 moveto (2619     panic\("sched interruptible"\);) show
0 408 moveto (2620   intena = cpu->intena;) show
0 396 moveto (2621 ) show
0 384 moveto (2622   acquire\(&tickslock\);) show
0 372 moveto (2623   now = \(uint\)ticks;) show
0 360 moveto (2624   release\(&tickslock\);) show
0 348 moveto (2625 ) show
0 336 moveto (2626   proc->cpu_ticks_total = proc->cpu_ticks_total + \(now - proc->cpu_ticks_in\);) show
0 324 moveto (2627 ) show
0 312 moveto (2628   rc = updateBudget\(proc, now\);) show
0 300 moveto (2629   if\(rc && \(proc->priority< NUM_READY_LISTS\)\){) show
0 288 moveto (2630       cprintf\("%s demoted, was %d, now %d\\n", proc->name, proc->priority, proc->priority+1\);) show
0 276 moveto (2631       proc->priority = proc->priority+ 1;) show
0 264 moveto (2632   }) show
0 252 moveto (2633 ) show
0 240 moveto (2634   swtch\(&proc->context, cpu->scheduler\);) show
0 228 moveto (2635   cpu->intena = intena;) show
0 216 moveto (2636 }) show
0 204 moveto (2637 ) show
0 192 moveto (2638 // Give up the CPU for one scheduling round.) show
0 180 moveto (2639 void) show
0 168 moveto (2640 yield\(void\)) show
0 156 moveto (2641 {) show
0 144 moveto (2642   acquire\(&ptable.lock\);  ) show
0 132 moveto (2643   proc->state = RUNNABLE;) show
0 120 moveto (2644   enqueue\(&ptable.ReadyList[proc->priority], proc\);) show
0 108 moveto (2645   sched\(\);) show
0 96 moveto (2646   release\(&ptable.lock\);) show
0 84 moveto (2647 }) show
0 72 moveto (2648 ) show
0 60 moveto (2649 ) show
0 24 moveto (Sheet 26) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 11) show
0 648 moveto (2650 // A fork child's very first scheduling by scheduler\(\)) show
0 636 moveto (2651 // will swtch here.  "Return" to user space.) show
0 624 moveto (2652 void) show
0 612 moveto (2653 forkret\(void\)) show
0 600 moveto (2654 {) show
0 588 moveto (2655   static int first = 1;) show
0 576 moveto (2656   // Still holding ptable.lock from scheduler.) show
0 564 moveto (2657   release\(&ptable.lock\);) show
0 552 moveto (2658 ) show
0 540 moveto (2659   if \(first\) {) show
0 528 moveto (2660     // Some initialization functions must be run in the context) show
0 516 moveto (2661     // of a regular process \(e.g., they call sleep\), and thus cannot) show
0 504 moveto (2662     // be run from main\(\).) show
0 492 moveto (2663     first = 0;) show
0 480 moveto (2664     iinit\(ROOTDEV\);) show
0 468 moveto (2665     initlog\(ROOTDEV\);) show
0 456 moveto (2666   }) show
0 444 moveto (2667 ) show
0 432 moveto (2668   // Return to "caller", actually trapret \(see allocproc\).) show
0 420 moveto (2669 }) show
0 408 moveto (2670 ) show
0 396 moveto (2671 // Atomically release lock and sleep on chan.) show
0 384 moveto (2672 // Reacquires lock when awakened.) show
0 372 moveto (2673 void) show
0 360 moveto (2674 sleep\(void *chan, struct spinlock *lk\)) show
0 348 moveto (2675 {) show
0 336 moveto (2676   if\(proc == 0\)) show
0 324 moveto (2677     panic\("sleep"\);) show
0 312 moveto (2678 ) show
0 300 moveto (2679   if\(lk == 0\)) show
0 288 moveto (2680     panic\("sleep without lk"\);) show
0 276 moveto (2681 ) show
0 264 moveto (2682   // Must acquire ptable.lock in order to) show
0 252 moveto (2683   // change p->state and then call sched.) show
0 240 moveto (2684   // Once we hold ptable.lock, we can be) show
0 228 moveto (2685   // guaranteed that we won't miss any wakeup) show
0 216 moveto (2686   // \(wakeup runs with ptable.lock locked\),) show
0 204 moveto (2687   // so it's okay to release lk.) show
0 192 moveto (2688   if\(lk != &ptable.lock\){  ) show
0 180 moveto (2689     acquire\(&ptable.lock\);  ) show
0 168 moveto (2690     release\(lk\);) show
0 156 moveto (2691   }) show
0 144 moveto (2692 ) show
0 132 moveto (2693   // Go to sleep.) show
0 120 moveto (2694   proc->chan = chan;) show
0 108 moveto (2695   proc->state = SLEEPING;) show
0 96 moveto (2696   sched\(\);) show
0 84 moveto (2697 ) show
0 72 moveto (2698   // Tidy up.) show
0 60 moveto (2699   proc->chan = 0;) show
0 24 moveto (Sheet 26) show
grestore
restore
showpage
%%Page: 35 35
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 12) show
0 648 moveto (2700   // Reacquire original lock.) show
0 636 moveto (2701   if\(lk != &ptable.lock\){  ) show
0 624 moveto (2702     release\(&ptable.lock\);) show
0 612 moveto (2703     acquire\(lk\);) show
0 600 moveto (2704   }) show
0 588 moveto (2705 }) show
0 576 moveto (2706 ) show
0 564 moveto (2707 // Wake up all processes sleeping on chan.) show
0 552 moveto (2708 // The ptable lock must be held.) show
0 540 moveto (2709 static void) show
0 528 moveto (2710 wakeup1\(void *chan\)) show
0 516 moveto (2711 {) show
0 504 moveto (2712   struct proc *p;) show
0 492 moveto (2713 ) show
0 480 moveto (2714   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 468 moveto (2715     if\(p->state == SLEEPING && p->chan == chan\){) show
0 456 moveto (2716       p->state = RUNNABLE;) show
0 444 moveto (2717       enqueue\(&ptable.ReadyList[0], p\);) show
0 432 moveto (2718     }) show
0 420 moveto (2719 ) show
0 408 moveto (2720 }) show
0 396 moveto (2721 ) show
0 384 moveto (2722 // Wake up all processes sleeping on chan.) show
0 372 moveto (2723 void) show
0 360 moveto (2724 wakeup\(void *chan\)) show
0 348 moveto (2725 {) show
0 336 moveto (2726   acquire\(&ptable.lock\);) show
0 324 moveto (2727   wakeup1\(chan\);) show
0 312 moveto (2728   release\(&ptable.lock\);) show
0 300 moveto (2729 }) show
0 288 moveto (2730 ) show
0 276 moveto (2731 // Kill the process with the given pid.) show
0 264 moveto (2732 // Process won't exit until it returns) show
0 252 moveto (2733 // to user space \(see trap in trap.c\).) show
0 240 moveto (2734 int) show
0 228 moveto (2735 kill\(int pid\)) show
0 216 moveto (2736 {) show
0 204 moveto (2737   struct proc *p;) show
0 192 moveto (2738 ) show
0 180 moveto (2739   acquire\(&ptable.lock\);) show
0 168 moveto (2740   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 156 moveto (2741     if\(p->pid == pid\){) show
0 144 moveto (2742       p->killed = 1;) show
0 132 moveto (2743       // Wake process from sleep if necessary.) show
0 120 moveto (2744       if\(p->state == SLEEPING\){) show
0 108 moveto (2745         p->state = RUNNABLE;) show
0 96 moveto (2746         enqueue\(&ptable.ReadyList[0], p\);) show
0 84 moveto (2747       }) show
0 72 moveto (2748       release\(&ptable.lock\);) show
0 60 moveto (2749       return 0;) show
0 24 moveto (Sheet 27) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 13) show
0 648 moveto (2750     }) show
0 636 moveto (2751   }) show
0 624 moveto (2752   release\(&ptable.lock\);) show
0 612 moveto (2753   return -1;) show
0 600 moveto (2754 }) show
0 588 moveto (2755 ) show
0 576 moveto (2756 // Print a process listing to console.  For debugging.) show
0 564 moveto (2757 // Runs when user types ^P on console.) show
0 552 moveto (2758 // No lock to avoid wedging a stuck machine further.) show
0 540 moveto (2759 void) show
0 528 moveto (2760 procdump\(void\)) show
0 516 moveto (2761 {) show
0 504 moveto (2762   static char *states[] = {) show
0 492 moveto (2763   [UNUSED]    "unused",) show
0 480 moveto (2764   [EMBRYO]    "embryo",) show
0 468 moveto (2765   [SLEEPING]  "sleep ",) show
0 456 moveto (2766   [RUNNABLE]  "runble",) show
0 444 moveto (2767   [RUNNING]   "run   ",) show
0 432 moveto (2768   [ZOMBIE]    "zombie") show
0 420 moveto (2769   };) show
0 408 moveto (2770   int i;) show
0 396 moveto (2771   struct proc *p;) show
0 384 moveto (2772   char *state;) show
0 372 moveto (2773   uint pc[10];) show
0 360 moveto (2774 ) show
0 348 moveto (2775   uint now;         //Snag the current ticks and cast) show
0 336 moveto (2776 ) show
0 324 moveto (2777   acquire\(&tickslock\);) show
0 312 moveto (2778   now = \(uint\)ticks;) show
0 300 moveto (2779   release\(&tickslock\);) show
0 288 moveto (2780 ) show
0 276 moveto (2781   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 264 moveto (2782     if\(p->state == UNUSED\)) show
0 252 moveto (2783       continue;) show
0 240 moveto (2784     if\(p->state >= 0 && p->state < NELEM\(states\) && states[p->state]\)) show
0 228 moveto (2785       state = states[p->state];) show
0 216 moveto (2786     else) show
0 204 moveto (2787       state = "???";) show
0 192 moveto (2788     cprintf\("%d %s %s %d %d.%d %d.%d", p->pid, state, p->name, p->priority,) show
0 180 moveto (2789             \(now - p->start_ticks\) / 100,) show
0 168 moveto (2790             \(now - p->start_ticks\) % 100,) show
0 156 moveto (2791              p->cpu_ticks_total / 100,) show
0 144 moveto (2792              p->cpu_ticks_total % 100\);) show
0 132 moveto (2793     if\(p->state == SLEEPING\){) show
0 120 moveto (2794       getcallerpcs\(\(uint*\)p->context->ebp+2, pc\);) show
0 108 moveto (2795       for\(i=0; i<10 && pc[i] != 0; i++\)) show
0 96 moveto (2796         cprintf\(" %p", pc[i]\);) show
0 84 moveto (2797     }) show
0 72 moveto (2798     cprintf\("\\n"\);) show
0 60 moveto (2799   }) show
0 24 moveto (Sheet 27) show
grestore
restore
showpage
%%Page: 36 36
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 14) show
0 648 moveto (2800 }) show
0 636 moveto (2801 ) show
0 624 moveto (2802 ) show
0 612 moveto (2803 int) show
0 600 moveto (2804 sys_getprocs\(void\)) show
0 588 moveto (2805 {) show
0 576 moveto (2806 ) show
0 564 moveto (2807   static char *states[] = {) show
0 552 moveto (2808   [UNUSED]    "unused",) show
0 540 moveto (2809   [EMBRYO]    "embryo",) show
0 528 moveto (2810   [SLEEPING]  "sleep ",) show
0 516 moveto (2811   [RUNNABLE]  "runble",) show
0 504 moveto (2812   [RUNNING]   "run   ",) show
0 492 moveto (2813   [ZOMBIE]    "zombie") show
0 480 moveto (2814   };) show
0 468 moveto (2815 ) show
0 456 moveto (2816   uint now;) show
0 444 moveto (2817   acquire\(&tickslock\);) show
0 432 moveto (2818   now = \(uint\)ticks;) show
0 420 moveto (2819   release\(&tickslock\);) show
0 408 moveto (2820 ) show
0 396 moveto (2821 ) show
0 384 moveto (2822     struct proc* p;) show
0 372 moveto (2823     struct uproc* up;) show
0 360 moveto (2824     int MAX = 0;) show
0 348 moveto (2825     int i = 0;) show
0 336 moveto (2826 ) show
0 324 moveto (2827     if\( argint\(0, &MAX\) == -1\)) show
0 312 moveto (2828         return -1;) show
0 300 moveto (2829 ) show
0 288 moveto (2830     if\(argptr\(1, \(char**\)&up, sizeof\(*up\)\) < 0\)) show
0 276 moveto (2831         return -1;) show
0 264 moveto (2832 ) show
0 252 moveto (2833   acquire\(&ptable.lock\);) show
0 240 moveto (2834 ) show
0 228 moveto (2835   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 216 moveto (2836   {) show
0 204 moveto (2837 ) show
0 192 moveto (2838         if\( p->state && i < MAX\){) show
0 180 moveto (2839 ) show
0 168 moveto (2840             up[i].pid = p->pid;) show
0 156 moveto (2841             up[i].uid = p->uid;) show
0 144 moveto (2842             up[i].gid = p->gid;) show
0 132 moveto (2843             up[i].CPU_total_ticks = p->cpu_ticks_total;) show
0 120 moveto (2844             up[i].elapsed_ticks = now - p->start_ticks;) show
0 108 moveto (2845             up[i].size = p->sz;) show
0 96 moveto (2846 //            up[i].priority = p->priority;) show
0 84 moveto (2847             safestrcpy\(up[i].name, p->name, sizeof\(p->name\)\);) show
0 72 moveto (2848             safestrcpy\(up[i].state, states[p->state], sizeof\(p->state\)\);) show
0 60 moveto (2849             if\(up[i].pid == 1\)) show
0 24 moveto (Sheet 28) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 15) show
0 648 moveto (2850                 up[i].ppid = 1;) show
0 636 moveto (2851             else) show
0 624 moveto (2852                 up[i].ppid = p->parent->pid;) show
0 612 moveto (2853             i++;) show
0 600 moveto (2854         }) show
0 588 moveto (2855   }) show
0 576 moveto (2856   release\(&ptable.lock\);) show
0 564 moveto (2857   return i;) show
0 552 moveto (2858 }) show
0 540 moveto (2859 ) show
0 528 moveto (2860 //Implementations for priority queue struct) show
0 516 moveto (2861 ) show
0 504 moveto (2862 //Constructor set all values to null) show
0 492 moveto (2863 int) show
0 480 moveto (2864 queue\(struct queue *this, struct proc *first \)) show
0 468 moveto (2865 {) show
0 456 moveto (2866     this->head  = this->tail = first;         // This works fine even if the list is null) show
0 444 moveto (2867     return 0;                                 // it just feels more OO to have a constructor) show
0 432 moveto (2868                                               // and makes it more readable) show
0 420 moveto (2869 }) show
0 408 moveto (2870 ) show
0 396 moveto (2871 // add process to the end of the list) show
0 384 moveto (2872 int) show
0 372 moveto (2873 enqueue\(struct queue *this, struct proc *nproc\){) show
0 360 moveto (2874 ) show
0 348 moveto (2875       if\(this->tail == 0\){                  // If list is empty initialize) show
0 336 moveto (2876           return queue\(this, nproc\);) show
0 324 moveto (2877           return 0;) show
0 312 moveto (2878       }) show
0 300 moveto (2879 ) show
0 288 moveto (2880       this->tail->next = nproc;            // Otherwise add it in as normal) show
0 276 moveto (2881       this->tail = nproc;) show
0 264 moveto (2882       this->tail->next = 0;) show
0 252 moveto (2883       return 0;) show
0 240 moveto (2884 }) show
0 228 moveto (2885 ) show
0 216 moveto (2886 ) show
0 204 moveto (2887 ) show
0 192 moveto (2888 ) show
0 180 moveto (2889 ) show
0 168 moveto (2890 ) show
0 156 moveto (2891 ) show
0 144 moveto (2892 ) show
0 132 moveto (2893 ) show
0 120 moveto (2894 ) show
0 108 moveto (2895 ) show
0 96 moveto (2896 ) show
0 84 moveto (2897 ) show
0 72 moveto (2898 ) show
0 60 moveto (2899 ) show
0 24 moveto (Sheet 28) show
grestore
restore
showpage
%%Page: 37 37
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/proc.c  Page 16) show
0 648 moveto (2900 // take process from head of list) show
0 636 moveto (2901 struct proc*) show
0 624 moveto (2902 dequeue\(struct queue *this\){) show
0 612 moveto (2903 ) show
0 600 moveto (2904      struct proc* nproc = 0;;) show
0 588 moveto (2905       if\(this->tail == 0\)) show
0 576 moveto (2906           return  nproc;) show
0 564 moveto (2907       if\(this->tail == this->head\){) show
0 552 moveto (2908           nproc = this->tail;) show
0 540 moveto (2909           this->head = 0;) show
0 528 moveto (2910           this->tail = 0;) show
0 516 moveto (2911           nproc->next = 0;) show
0 504 moveto (2912           return nproc;) show
0 492 moveto (2913         }) show
0 480 moveto (2914       nproc = this->head;) show
0 468 moveto (2915       this->head = this->head->next;) show
0 456 moveto (2916       nproc->next = 0;) show
0 444 moveto (2917       return nproc;) show
0 432 moveto (2918 ) show
0 420 moveto (2919 }) show
0 408 moveto (2920 ) show
0 396 moveto (2921 int) show
0 384 moveto (2922 updateBudget\(struct proc * this, int now\){) show
0 372 moveto (2923 ) show
0 360 moveto (2924     this->budget = this->budget - \(now - this->cpu_ticks_in\);) show
0 348 moveto (2925     if\(this->budget <=0\){) show
0 336 moveto (2926         this->budget = INITBUDGET;) show
0 324 moveto (2927         return 1;) show
0 312 moveto (2928     }) show
0 300 moveto (2929     return 0;) show
0 288 moveto (2930 }) show
0 276 moveto (2931 ) show
0 264 moveto (2932 void) show
0 252 moveto (2933 promote\(\){) show
0 240 moveto (2934 ) show
0 228 moveto (2935     int i = 1;) show
0 216 moveto (2936     struct proc * p;) show
0 204 moveto (2937     for\(i = 1;  i < NUM_READY_LISTS; i++\){) show
0 192 moveto (2938         p = dequeue\(&ptable.ReadyList[i]\);) show
0 180 moveto (2939         if\(p == 0\)) show
0 168 moveto (2940             continue;) show
0 156 moveto (2941         p->budget = INITBUDGET;) show
0 144 moveto (2942         p->priority = p->priority - 1;) show
0 132 moveto (2943         enqueue\(&ptable.ReadyList[p->priority - 1], p\);) show
0 120 moveto (2944     }) show
0 108 moveto (2945 }) show
0 96 moveto (2946 ) show
0 84 moveto (2947 ) show
0 72 moveto (2948 ) show
0 60 moveto (2949 ) show
0 24 moveto (Sheet 29) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/swtch.S  Page 1) show
0 648 moveto (2950 # Context switch) show
0 636 moveto (2951 #) show
0 624 moveto (2952 #   void swtch\(struct context **old, struct context *new\);) show
0 612 moveto (2953 #) show
0 600 moveto (2954 # Save current register context in old) show
0 588 moveto (2955 # and then load register context from new.) show
0 576 moveto (2956 ) show
0 564 moveto (2957 .globl swtch) show
0 552 moveto (2958 swtch:) show
0 540 moveto (2959   movl 4\(%esp\), %eax) show
0 528 moveto (2960   movl 8\(%esp\), %edx) show
0 516 moveto (2961 ) show
0 504 moveto (2962   # Save old callee-save registers) show
0 492 moveto (2963   pushl %ebp) show
0 480 moveto (2964   pushl %ebx) show
0 468 moveto (2965   pushl %esi) show
0 456 moveto (2966   pushl %edi) show
0 444 moveto (2967 ) show
0 432 moveto (2968   # Switch stacks) show
0 420 moveto (2969   movl %esp, \(%eax\)) show
0 408 moveto (2970   movl %edx, %esp) show
0 396 moveto (2971 ) show
0 384 moveto (2972   # Load new callee-save registers) show
0 372 moveto (2973   popl %edi) show
0 360 moveto (2974   popl %esi) show
0 348 moveto (2975   popl %ebx) show
0 336 moveto (2976   popl %ebp) show
0 324 moveto (2977   ret) show
0 312 moveto (2978 ) show
0 300 moveto (2979 ) show
0 288 moveto (2980 ) show
0 276 moveto (2981 ) show
0 264 moveto (2982 ) show
0 252 moveto (2983 ) show
0 240 moveto (2984 ) show
0 228 moveto (2985 ) show
0 216 moveto (2986 ) show
0 204 moveto (2987 ) show
0 192 moveto (2988 ) show
0 180 moveto (2989 ) show
0 168 moveto (2990 ) show
0 156 moveto (2991 ) show
0 144 moveto (2992 ) show
0 132 moveto (2993 ) show
0 120 moveto (2994 ) show
0 108 moveto (2995 ) show
0 96 moveto (2996 ) show
0 84 moveto (2997 ) show
0 72 moveto (2998 ) show
0 60 moveto (2999 ) show
0 24 moveto (Sheet 29) show
grestore
restore
showpage
%%Page: 38 38
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/kalloc.c  Page 1) show
0 648 moveto (3000 // Physical memory allocator, intended to allocate) show
0 636 moveto (3001 // memory for user processes, kernel stacks, page table pages,) show
0 624 moveto (3002 // and pipe buffers. Allocates 4096-byte pages.) show
0 612 moveto (3003 ) show
0 600 moveto (3004 #include "types.h") show
0 588 moveto (3005 #include "defs.h") show
0 576 moveto (3006 #include "param.h") show
0 564 moveto (3007 #include "memlayout.h") show
0 552 moveto (3008 #include "mmu.h") show
0 540 moveto (3009 #include "spinlock.h") show
0 528 moveto (3010 ) show
0 516 moveto (3011 void freerange\(void *vstart, void *vend\);) show
0 504 moveto (3012 extern char end[]; // first address after kernel loaded from ELF file) show
0 492 moveto (3013 ) show
0 480 moveto (3014 struct run {) show
0 468 moveto (3015   struct run *next;) show
0 456 moveto (3016 };) show
0 444 moveto (3017 ) show
0 432 moveto (3018 struct {) show
0 420 moveto (3019   struct spinlock lock;) show
0 408 moveto (3020   int use_lock;) show
0 396 moveto (3021   struct run *freelist;) show
0 384 moveto (3022 } kmem;) show
0 372 moveto (3023 ) show
0 360 moveto (3024 // Initialization happens in two phases.) show
0 348 moveto (3025 // 1. main\(\) calls kinit1\(\) while still using entrypgdir to place just) show
0 336 moveto (3026 // the pages mapped by entrypgdir on free list.) show
0 324 moveto (3027 // 2. main\(\) calls kinit2\(\) with the rest of the physical pages) show
0 312 moveto (3028 // after installing a full page table that maps them on all cores.) show
0 300 moveto (3029 void) show
0 288 moveto (3030 kinit1\(void *vstart, void *vend\)) show
0 276 moveto (3031 {) show
0 264 moveto (3032   initlock\(&kmem.lock, "kmem"\);) show
0 252 moveto (3033   kmem.use_lock = 0;) show
0 240 moveto (3034   freerange\(vstart, vend\);) show
0 228 moveto (3035 }) show
0 216 moveto (3036 ) show
0 204 moveto (3037 void) show
0 192 moveto (3038 kinit2\(void *vstart, void *vend\)) show
0 180 moveto (3039 {) show
0 168 moveto (3040   freerange\(vstart, vend\);) show
0 156 moveto (3041   kmem.use_lock = 1;) show
0 144 moveto (3042 }) show
0 132 moveto (3043 ) show
0 120 moveto (3044 ) show
0 108 moveto (3045 ) show
0 96 moveto (3046 ) show
0 84 moveto (3047 ) show
0 72 moveto (3048 ) show
0 60 moveto (3049 ) show
0 24 moveto (Sheet 30) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/kalloc.c  Page 2) show
0 648 moveto (3050 void) show
0 636 moveto (3051 freerange\(void *vstart, void *vend\)) show
0 624 moveto (3052 {) show
0 612 moveto (3053   char *p;) show
0 600 moveto (3054   p = \(char*\)PGROUNDUP\(\(uint\)vstart\);) show
0 588 moveto (3055   for\(; p + PGSIZE <= \(char*\)vend; p += PGSIZE\)) show
0 576 moveto (3056     kfree\(p\);) show
0 564 moveto (3057 }) show
0 552 moveto (3058 ) show
0 540 moveto (3059 // Free the page of physical memory pointed at by v,) show
0 528 moveto (3060 // which normally should have been returned by a) show
0 516 moveto (3061 // call to kalloc\(\).  \(The exception is when) show
0 504 moveto (3062 // initializing the allocator; see kinit above.\)) show
0 492 moveto (3063 void) show
0 480 moveto (3064 kfree\(char *v\)) show
0 468 moveto (3065 {) show
0 456 moveto (3066   struct run *r;) show
0 444 moveto (3067 ) show
0 432 moveto (3068   if\(\(uint\)v % PGSIZE || v < end || v2p\(v\) >= PHYSTOP\)) show
0 420 moveto (3069     panic\("kfree"\);) show
0 408 moveto (3070 ) show
0 396 moveto (3071   // Fill with junk to catch dangling refs.) show
0 384 moveto (3072   memset\(v, 1, PGSIZE\);) show
0 372 moveto (3073 ) show
0 360 moveto (3074   if\(kmem.use_lock\)) show
0 348 moveto (3075     acquire\(&kmem.lock\);) show
0 336 moveto (3076   r = \(struct run*\)v;) show
0 324 moveto (3077   r->next = kmem.freelist;) show
0 312 moveto (3078   kmem.freelist = r;) show
0 300 moveto (3079   if\(kmem.use_lock\)) show
0 288 moveto (3080     release\(&kmem.lock\);) show
0 276 moveto (3081 }) show
0 264 moveto (3082 ) show
0 252 moveto (3083 // Allocate one 4096-byte page of physical memory.) show
0 240 moveto (3084 // Returns a pointer that the kernel can use.) show
0 228 moveto (3085 // Returns 0 if the memory cannot be allocated.) show
0 216 moveto (3086 char*) show
0 204 moveto (3087 kalloc\(void\)) show
0 192 moveto (3088 {) show
0 180 moveto (3089   struct run *r;) show
0 168 moveto (3090 ) show
0 156 moveto (3091   if\(kmem.use_lock\)) show
0 144 moveto (3092     acquire\(&kmem.lock\);) show
0 132 moveto (3093   r = kmem.freelist;) show
0 120 moveto (3094   if\(r\)) show
0 108 moveto (3095     kmem.freelist = r->next;) show
0 96 moveto (3096   if\(kmem.use_lock\)) show
0 84 moveto (3097     release\(&kmem.lock\);) show
0 72 moveto (3098   return \(char*\)r;) show
0 60 moveto (3099 }) show
0 24 moveto (Sheet 30) show
grestore
restore
showpage
%%Page: 39 39
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/traps.h  Page 1) show
0 648 moveto (3100 // x86 trap and interrupt constants.) show
0 636 moveto (3101 ) show
0 624 moveto (3102 // Processor-defined:) show
0 612 moveto (3103 #define T_DIVIDE         0      // divide error) show
0 600 moveto (3104 #define T_DEBUG          1      // debug exception) show
0 588 moveto (3105 #define T_NMI            2      // non-maskable interrupt) show
0 576 moveto (3106 #define T_BRKPT          3      // breakpoint) show
0 564 moveto (3107 #define T_OFLOW          4      // overflow) show
0 552 moveto (3108 #define T_BOUND          5      // bounds check) show
0 540 moveto (3109 #define T_ILLOP          6      // illegal opcode) show
0 528 moveto (3110 #define T_DEVICE         7      // device not available) show
0 516 moveto (3111 #define T_DBLFLT         8      // double fault) show
0 504 moveto (3112 // #define T_COPROC      9      // reserved \(not used since 486\)) show
0 492 moveto (3113 #define T_TSS           10      // invalid task switch segment) show
0 480 moveto (3114 #define T_SEGNP         11      // segment not present) show
0 468 moveto (3115 #define T_STACK         12      // stack exception) show
0 456 moveto (3116 #define T_GPFLT         13      // general protection fault) show
0 444 moveto (3117 #define T_PGFLT         14      // page fault) show
0 432 moveto (3118 // #define T_RES        15      // reserved) show
0 420 moveto (3119 #define T_FPERR         16      // floating point error) show
0 408 moveto (3120 #define T_ALIGN         17      // aligment check) show
0 396 moveto (3121 #define T_MCHK          18      // machine check) show
0 384 moveto (3122 #define T_SIMDERR       19      // SIMD floating point error) show
0 372 moveto (3123 ) show
0 360 moveto (3124 // These are arbitrarily chosen, but with care not to overlap) show
0 348 moveto (3125 // processor defined exceptions or interrupt vectors.) show
0 336 moveto (3126 #define T_SYSCALL       64      // system call) show
0 324 moveto (3127 #define T_DEFAULT      500      // catchall) show
0 312 moveto (3128 ) show
0 300 moveto (3129 #define T_IRQ0          32      // IRQ 0 corresponds to int T_IRQ) show
0 288 moveto (3130 ) show
0 276 moveto (3131 #define IRQ_TIMER        0) show
0 264 moveto (3132 #define IRQ_KBD          1) show
0 252 moveto (3133 #define IRQ_COM1         4) show
0 240 moveto (3134 #define IRQ_IDE         14) show
0 228 moveto (3135 #define IRQ_ERROR       19) show
0 216 moveto (3136 #define IRQ_SPURIOUS    31) show
0 204 moveto (3137 ) show
0 192 moveto (3138 ) show
0 180 moveto (3139 ) show
0 168 moveto (3140 ) show
0 156 moveto (3141 ) show
0 144 moveto (3142 ) show
0 132 moveto (3143 ) show
0 120 moveto (3144 ) show
0 108 moveto (3145 ) show
0 96 moveto (3146 ) show
0 84 moveto (3147 ) show
0 72 moveto (3148 ) show
0 60 moveto (3149 ) show
0 24 moveto (Sheet 31) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/vectors.pl  Page 1) show
0 648 moveto (3150 #!/usr/bin/perl -w) show
0 636 moveto (3151 ) show
0 624 moveto (3152 # Generate vectors.S, the trap/interrupt entry points.) show
0 612 moveto (3153 # There has to be one entry point per interrupt number) show
0 600 moveto (3154 # since otherwise there's no way for trap\(\) to discover) show
0 588 moveto (3155 # the interrupt number.) show
0 576 moveto (3156 ) show
0 564 moveto (3157 print "# generated by vectors.pl - do not edit\\n";) show
0 552 moveto (3158 print "# handlers\\n";) show
0 540 moveto (3159 print ".globl alltraps\\n";) show
0 528 moveto (3160 for\(my $i = 0; $i < 256; $i++\){) show
0 516 moveto (3161     print ".globl vector$i\\n";) show
0 504 moveto (3162     print "vector$i:\\n";) show
0 492 moveto (3163     if\(!\($i == 8 || \($i >= 10 && $i <= 14\) || $i == 17\)\){) show
0 480 moveto (3164         print "  pushl \\$0\\n";) show
0 468 moveto (3165     }) show
0 456 moveto (3166     print "  pushl \\$$i\\n";) show
0 444 moveto (3167     print "  jmp alltraps\\n";) show
0 432 moveto (3168 }) show
0 420 moveto (3169 ) show
0 408 moveto (3170 print "\\n# vector table\\n";) show
0 396 moveto (3171 print ".data\\n";) show
0 384 moveto (3172 print ".globl vectors\\n";) show
0 372 moveto (3173 print "vectors:\\n";) show
0 360 moveto (3174 for\(my $i = 0; $i < 256; $i++\){) show
0 348 moveto (3175     print "  .long vector$i\\n";) show
0 336 moveto (3176 }) show
0 324 moveto (3177 ) show
0 312 moveto (3178 # sample output:) show
0 300 moveto (3179 #   # handlers) show
0 288 moveto (3180 #   .globl alltraps) show
0 276 moveto (3181 #   .globl vector0) show
0 264 moveto (3182 #   vector0:) show
0 252 moveto (3183 #     pushl $0) show
0 240 moveto (3184 #     pushl $0) show
0 228 moveto (3185 #     jmp alltraps) show
0 216 moveto (3186 #   ...) show
0 204 moveto (3187 #) show
0 192 moveto (3188 #   # vector table) show
0 180 moveto (3189 #   .data) show
0 168 moveto (3190 #   .globl vectors) show
0 156 moveto (3191 #   vectors:) show
0 144 moveto (3192 #     .long vector0) show
0 132 moveto (3193 #     .long vector1) show
0 120 moveto (3194 #     .long vector2) show
0 108 moveto (3195 #   ...) show
0 96 moveto (3196 ) show
0 84 moveto (3197 ) show
0 72 moveto (3198 ) show
0 60 moveto (3199 ) show
0 24 moveto (Sheet 31) show
grestore
restore
showpage
%%Page: 40 40
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/trapasm.S  Page 1) show
0 648 moveto (3200 #include "mmu.h") show
0 636 moveto (3201 ) show
0 624 moveto (3202   # vectors.S sends all traps here.) show
0 612 moveto (3203 .globl alltraps) show
0 600 moveto (3204 alltraps:) show
0 588 moveto (3205   # Build trap frame.) show
0 576 moveto (3206   pushl %ds) show
0 564 moveto (3207   pushl %es) show
0 552 moveto (3208   pushl %fs) show
0 540 moveto (3209   pushl %gs) show
0 528 moveto (3210   pushal) show
0 516 moveto (3211 ) show
0 504 moveto (3212   # Set up data and per-cpu segments.) show
0 492 moveto (3213   movw $\(SEG_KDATA<<3\), %ax) show
0 480 moveto (3214   movw %ax, %ds) show
0 468 moveto (3215   movw %ax, %es) show
0 456 moveto (3216   movw $\(SEG_KCPU<<3\), %ax) show
0 444 moveto (3217   movw %ax, %fs) show
0 432 moveto (3218   movw %ax, %gs) show
0 420 moveto (3219 ) show
0 408 moveto (3220   # Call trap\(tf\), where tf=%esp) show
0 396 moveto (3221   pushl %esp) show
0 384 moveto (3222   call trap) show
0 372 moveto (3223   addl $4, %esp) show
0 360 moveto (3224 ) show
0 348 moveto (3225   # Return falls through to trapret...) show
0 336 moveto (3226 .globl trapret) show
0 324 moveto (3227 trapret:) show
0 312 moveto (3228   popal) show
0 300 moveto (3229   popl %gs) show
0 288 moveto (3230   popl %fs) show
0 276 moveto (3231   popl %es) show
0 264 moveto (3232   popl %ds) show
0 252 moveto (3233   addl $0x8, %esp  # trapno and errcode) show
0 240 moveto (3234   iret) show
0 228 moveto (3235 ) show
0 216 moveto (3236 ) show
0 204 moveto (3237 ) show
0 192 moveto (3238 ) show
0 180 moveto (3239 ) show
0 168 moveto (3240 ) show
0 156 moveto (3241 ) show
0 144 moveto (3242 ) show
0 132 moveto (3243 ) show
0 120 moveto (3244 ) show
0 108 moveto (3245 ) show
0 96 moveto (3246 ) show
0 84 moveto (3247 ) show
0 72 moveto (3248 ) show
0 60 moveto (3249 ) show
0 24 moveto (Sheet 32) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/trap.c  Page 1) show
0 648 moveto (3250 #include "types.h") show
0 636 moveto (3251 #include "defs.h") show
0 624 moveto (3252 #include "param.h") show
0 612 moveto (3253 #include "memlayout.h") show
0 600 moveto (3254 #include "mmu.h") show
0 588 moveto (3255 #include "proc.h") show
0 576 moveto (3256 #include "x86.h") show
0 564 moveto (3257 #include "traps.h") show
0 552 moveto (3258 #include "spinlock.h") show
0 540 moveto (3259 ) show
0 528 moveto (3260 // Interrupt descriptor table \(shared by all CPUs\).) show
0 516 moveto (3261 struct gatedesc idt[256];) show
0 504 moveto (3262 extern uint vectors[];  // in vectors.S: array of 256 entry pointers) show
0 492 moveto (3263 struct spinlock tickslock;) show
0 480 moveto (3264 uint ticks;) show
0 468 moveto (3265 ) show
0 456 moveto (3266 void) show
0 444 moveto (3267 tvinit\(void\)) show
0 432 moveto (3268 {) show
0 420 moveto (3269   int i;) show
0 408 moveto (3270 ) show
0 396 moveto (3271   for\(i = 0; i < 256; i++\)) show
0 384 moveto (3272     SETGATE\(idt[i], 0, SEG_KCODE<<3, vectors[i], 0\);) show
0 372 moveto (3273   SETGATE\(idt[T_SYSCALL], 1, SEG_KCODE<<3, vectors[T_SYSCALL], DPL_USER\);) show
0 360 moveto (3274 ) show
0 348 moveto (3275   initlock\(&tickslock, "time"\);) show
0 336 moveto (3276 }) show
0 324 moveto (3277 ) show
0 312 moveto (3278 void) show
0 300 moveto (3279 idtinit\(void\)) show
0 288 moveto (3280 {) show
0 276 moveto (3281   lidt\(idt, sizeof\(idt\)\);) show
0 264 moveto (3282 }) show
0 252 moveto (3283 ) show
0 240 moveto (3284 void) show
0 228 moveto (3285 trap\(struct trapframe *tf\)) show
0 216 moveto (3286 {) show
0 204 moveto (3287   if\(tf->trapno == T_SYSCALL\){) show
0 192 moveto (3288     if\(proc->killed\)) show
0 180 moveto (3289       exit\(\);) show
0 168 moveto (3290     proc->tf = tf;) show
0 156 moveto (3291     syscall\(\);) show
0 144 moveto (3292     if\(proc->killed\)) show
0 132 moveto (3293       exit\(\);) show
0 120 moveto (3294     return;) show
0 108 moveto (3295   }) show
0 96 moveto (3296 ) show
0 84 moveto (3297   switch\(tf->trapno\){) show
0 72 moveto (3298   case T_IRQ0 + IRQ_TIMER:) show
0 60 moveto (3299     if\(cpu->id == 0\){) show
0 24 moveto (Sheet 32) show
grestore
restore
showpage
%%Page: 41 41
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/trap.c  Page 2) show
0 648 moveto (3300       acquire\(&tickslock\);) show
0 636 moveto (3301       ticks++;) show
0 624 moveto (3302       release\(&tickslock\);    // NOTE: MarkM has reversed these two lines.) show
0 612 moveto (3303       wakeup\(&ticks\);         // wakeup\(\) should not require the tickslock to be held) show
0 600 moveto (3304     }) show
0 588 moveto (3305     lapiceoi\(\);) show
0 576 moveto (3306     break;) show
0 564 moveto (3307   case T_IRQ0 + IRQ_IDE:) show
0 552 moveto (3308     ideintr\(\);) show
0 540 moveto (3309     lapiceoi\(\);) show
0 528 moveto (3310     break;) show
0 516 moveto (3311   case T_IRQ0 + IRQ_IDE+1:) show
0 504 moveto (3312     // Bochs generates spurious IDE1 interrupts.) show
0 492 moveto (3313     break;) show
0 480 moveto (3314   case T_IRQ0 + IRQ_KBD:) show
0 468 moveto (3315     kbdintr\(\);) show
0 456 moveto (3316     lapiceoi\(\);) show
0 444 moveto (3317     break;) show
0 432 moveto (3318   case T_IRQ0 + IRQ_COM1:) show
0 420 moveto (3319     uartintr\(\);) show
0 408 moveto (3320     lapiceoi\(\);) show
0 396 moveto (3321     break;) show
0 384 moveto (3322   case T_IRQ0 + 7:) show
0 372 moveto (3323   case T_IRQ0 + IRQ_SPURIOUS:) show
0 360 moveto (3324     cprintf\("cpu%d: spurious interrupt at %x:%x\\n",) show
0 348 moveto (3325             cpu->id, tf->cs, tf->eip\);) show
0 336 moveto (3326     lapiceoi\(\);) show
0 324 moveto (3327     break;) show
0 312 moveto (3328 ) show
0 300 moveto (3329   default:) show
0 288 moveto (3330     if\(proc == 0 || \(tf->cs&3\) == 0\){) show
0 276 moveto (3331       // In kernel, it must be our mistake.) show
0 264 moveto (3332       cprintf\("unexpected trap %d from cpu %d eip %x \(cr2=0x%x\)\\n",) show
0 252 moveto (3333               tf->trapno, cpu->id, tf->eip, rcr2\(\)\);) show
0 240 moveto (3334       panic\("trap"\);) show
0 228 moveto (3335     }) show
0 216 moveto (3336     // In user space, assume process misbehaved.) show
0 204 moveto (3337     cprintf\("pid %d %s: trap %d err %d on cpu %d ") show
0 192 moveto (3338             "eip 0x%x addr 0x%x--kill proc\\n",) show
0 180 moveto (3339             proc->pid, proc->name, tf->trapno, tf->err, cpu->id, tf->eip,) show
0 168 moveto (3340             rcr2\(\)\);) show
0 156 moveto (3341     proc->killed = 1;) show
0 144 moveto (3342   }) show
0 132 moveto (3343 ) show
0 120 moveto (3344   // Force process exit if it has been killed and is in user space.) show
0 108 moveto (3345   // \(If it is still executing in the kernel, let it keep running) show
0 96 moveto (3346   // until it gets to the regular system call return.\)) show
0 84 moveto (3347   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 72 moveto (3348     exit\(\);) show
0 60 moveto (3349 ) show
0 24 moveto (Sheet 33) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/trap.c  Page 3) show
0 648 moveto (3350   // Force process to give up CPU on clock tick.) show
0 636 moveto (3351   // If interrupts were on while locks held, would need to check nlock.) show
0 624 moveto (3352   if\(proc && proc->state == RUNNING && tf->trapno == T_IRQ0+IRQ_TIMER\)) show
0 612 moveto (3353     yield\(\);) show
0 600 moveto (3354 ) show
0 588 moveto (3355   // Check if the process has been killed since we yielded) show
0 576 moveto (3356   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 564 moveto (3357     exit\(\);) show
0 552 moveto (3358 }) show
0 540 moveto (3359 ) show
0 528 moveto (3360 ) show
0 516 moveto (3361 ) show
0 504 moveto (3362 ) show
0 492 moveto (3363 ) show
0 480 moveto (3364 ) show
0 468 moveto (3365 ) show
0 456 moveto (3366 ) show
0 444 moveto (3367 ) show
0 432 moveto (3368 ) show
0 420 moveto (3369 ) show
0 408 moveto (3370 ) show
0 396 moveto (3371 ) show
0 384 moveto (3372 ) show
0 372 moveto (3373 ) show
0 360 moveto (3374 ) show
0 348 moveto (3375 ) show
0 336 moveto (3376 ) show
0 324 moveto (3377 ) show
0 312 moveto (3378 ) show
0 300 moveto (3379 ) show
0 288 moveto (3380 ) show
0 276 moveto (3381 ) show
0 264 moveto (3382 ) show
0 252 moveto (3383 ) show
0 240 moveto (3384 ) show
0 228 moveto (3385 ) show
0 216 moveto (3386 ) show
0 204 moveto (3387 ) show
0 192 moveto (3388 ) show
0 180 moveto (3389 ) show
0 168 moveto (3390 ) show
0 156 moveto (3391 ) show
0 144 moveto (3392 ) show
0 132 moveto (3393 ) show
0 120 moveto (3394 ) show
0 108 moveto (3395 ) show
0 96 moveto (3396 ) show
0 84 moveto (3397 ) show
0 72 moveto (3398 ) show
0 60 moveto (3399 ) show
0 24 moveto (Sheet 33) show
grestore
restore
showpage
%%Page: 42 42
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/syscall.h  Page 1) show
0 648 moveto (3400 // System call numbers) show
0 636 moveto (3401 #define SYS_fork    1) show
0 624 moveto (3402 #define SYS_exit    SYS_fork+1) show
0 612 moveto (3403 #define SYS_wait    SYS_exit+1) show
0 600 moveto (3404 #define SYS_pipe    SYS_wait+1) show
0 588 moveto (3405 #define SYS_read    SYS_pipe+1) show
0 576 moveto (3406 #define SYS_kill    SYS_read+1) show
0 564 moveto (3407 #define SYS_exec    SYS_kill+1) show
0 552 moveto (3408 #define SYS_fstat   SYS_exec+1) show
0 540 moveto (3409 #define SYS_chdir   SYS_fstat+1) show
0 528 moveto (3410 #define SYS_dup     SYS_chdir+1) show
0 516 moveto (3411 #define SYS_getpid  SYS_dup+1) show
0 504 moveto (3412 #define SYS_sbrk    SYS_getpid+1) show
0 492 moveto (3413 #define SYS_sleep   SYS_sbrk+1) show
0 480 moveto (3414 #define SYS_uptime  SYS_sleep+1) show
0 468 moveto (3415 #define SYS_open    SYS_uptime+1) show
0 456 moveto (3416 #define SYS_write   SYS_open+1) show
0 444 moveto (3417 #define SYS_mknod   SYS_write+1) show
0 432 moveto (3418 #define SYS_unlink  SYS_mknod+1) show
0 420 moveto (3419 #define SYS_link    SYS_unlink+1) show
0 408 moveto (3420 #define SYS_mkdir   SYS_link+1) show
0 396 moveto (3421 #define SYS_close   SYS_mkdir+1) show
0 384 moveto (3422 #define SYS_halt    SYS_close+1) show
0 372 moveto (3423 // student system calls begin here. Follow the existing pattern.) show
0 360 moveto (3424 ) show
0 348 moveto (3425 #define SYS_date       SYS_halt+1) show
0 336 moveto (3426 ) show
0 324 moveto (3427 #define SYS_getuid     SYS_date+1) show
0 312 moveto (3428 #define SYS_getgid     SYS_getuid+1) show
0 300 moveto (3429 #define SYS_getppid    SYS_getgid+1) show
0 288 moveto (3430 ) show
0 276 moveto (3431 #define SYS_setuid     SYS_getppid+1) show
0 264 moveto (3432 #define SYS_setgid     SYS_setuid+1) show
0 252 moveto (3433 #define SYS_getprocs   SYS_setgid+1) show
0 240 moveto (3434 ) show
0 228 moveto (3435 // Project 3) show
0 216 moveto (3436 #define SYS_setpriority SYS_getprocs+1) show
0 204 moveto (3437 ) show
0 192 moveto (3438 ) show
0 180 moveto (3439 ) show
0 168 moveto (3440 ) show
0 156 moveto (3441 ) show
0 144 moveto (3442 ) show
0 132 moveto (3443 ) show
0 120 moveto (3444 ) show
0 108 moveto (3445 ) show
0 96 moveto (3446 ) show
0 84 moveto (3447 ) show
0 72 moveto (3448 ) show
0 60 moveto (3449 ) show
0 24 moveto (Sheet 34) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/syscall.c  Page 1) show
0 648 moveto (3450 #include "types.h") show
0 636 moveto (3451 #include "defs.h") show
0 624 moveto (3452 #include "param.h") show
0 612 moveto (3453 #include "memlayout.h") show
0 600 moveto (3454 #include "mmu.h") show
0 588 moveto (3455 #include "proc.h") show
0 576 moveto (3456 #include "x86.h") show
0 564 moveto (3457 #include "syscall.h") show
0 552 moveto (3458 ) show
0 540 moveto (3459 // User code makes a system call with INT T_SYSCALL.) show
0 528 moveto (3460 // System call number in %eax.) show
0 516 moveto (3461 // Arguments on the stack, from the user call to the C) show
0 504 moveto (3462 // library system call function. The saved user %esp points) show
0 492 moveto (3463 // to a saved program counter, and then the first argument.) show
0 480 moveto (3464 ) show
0 468 moveto (3465 // Fetch the int at addr from the current process.) show
0 456 moveto (3466 int) show
0 444 moveto (3467 fetchint\(uint addr, int *ip\)) show
0 432 moveto (3468 {) show
0 420 moveto (3469   if\(addr >= proc->sz || addr+4 > proc->sz\)) show
0 408 moveto (3470     return -1;) show
0 396 moveto (3471   *ip = *\(int*\)\(addr\);) show
0 384 moveto (3472   return 0;) show
0 372 moveto (3473 }) show
0 360 moveto (3474 ) show
0 348 moveto (3475 // Fetch the nul-terminated string at addr from the current process.) show
0 336 moveto (3476 // Doesn't actually copy the string - just sets *pp to point at it.) show
0 324 moveto (3477 // Returns length of string, not including nul.) show
0 312 moveto (3478 int) show
0 300 moveto (3479 fetchstr\(uint addr, char **pp\)) show
0 288 moveto (3480 {) show
0 276 moveto (3481   char *s, *ep;) show
0 264 moveto (3482 ) show
0 252 moveto (3483   if\(addr >= proc->sz\)) show
0 240 moveto (3484     return -1;) show
0 228 moveto (3485   *pp = \(char*\)addr;) show
0 216 moveto (3486   ep = \(char*\)proc->sz;) show
0 204 moveto (3487   for\(s = *pp; s < ep; s++\)) show
0 192 moveto (3488     if\(*s == 0\)) show
0 180 moveto (3489       return s - *pp;) show
0 168 moveto (3490   return -1;) show
0 156 moveto (3491 }) show
0 144 moveto (3492 ) show
0 132 moveto (3493 // Fetch the nth 32-bit system call argument.) show
0 120 moveto (3494 int) show
0 108 moveto (3495 argint\(int n, int *ip\)) show
0 96 moveto (3496 {) show
0 84 moveto (3497   return fetchint\(proc->tf->esp + 4 + 4*n, ip\);) show
0 72 moveto (3498 }) show
0 60 moveto (3499 ) show
0 24 moveto (Sheet 34) show
grestore
restore
showpage
%%Page: 43 43
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/syscall.c  Page 2) show
0 648 moveto (3500 // Fetch the nth word-sized system call argument as a pointer) show
0 636 moveto (3501 // to a block of memory of size n bytes.  Check that the pointer) show
0 624 moveto (3502 // lies within the process address space.) show
0 612 moveto (3503 int) show
0 600 moveto (3504 argptr\(int n, char **pp, int size\)) show
0 588 moveto (3505 {) show
0 576 moveto (3506   int i;) show
0 564 moveto (3507 ) show
0 552 moveto (3508   if\(argint\(n, &i\) < 0\)) show
0 540 moveto (3509     return -1;) show
0 528 moveto (3510   if\(\(uint\)i >= proc->sz || \(uint\)i+size > proc->sz\)) show
0 516 moveto (3511     return -1;) show
0 504 moveto (3512   *pp = \(char*\)i;) show
0 492 moveto (3513   return 0;) show
0 480 moveto (3514 }) show
0 468 moveto (3515 ) show
0 456 moveto (3516 // Fetch the nth word-sized system call argument as a string pointer.) show
0 444 moveto (3517 // Check that the pointer is valid and the string is nul-terminated.) show
0 432 moveto (3518 // \(There is no shared writable memory, so the string can't change) show
0 420 moveto (3519 // between this check and being used by the kernel.\)) show
0 408 moveto (3520 int) show
0 396 moveto (3521 argstr\(int n, char **pp\)) show
0 384 moveto (3522 {) show
0 372 moveto (3523   int addr;) show
0 360 moveto (3524   if\(argint\(n, &addr\) < 0\)) show
0 348 moveto (3525     return -1;) show
0 336 moveto (3526   return fetchstr\(addr, pp\);) show
0 324 moveto (3527 }) show
0 312 moveto (3528 ) show
0 300 moveto (3529 extern int sys_chdir\(void\);) show
0 288 moveto (3530 extern int sys_close\(void\);) show
0 276 moveto (3531 extern int sys_dup\(void\);) show
0 264 moveto (3532 extern int sys_exec\(void\);) show
0 252 moveto (3533 extern int sys_exit\(void\);) show
0 240 moveto (3534 extern int sys_fork\(void\);) show
0 228 moveto (3535 extern int sys_fstat\(void\);) show
0 216 moveto (3536 extern int sys_getpid\(void\);) show
0 204 moveto (3537 extern int sys_kill\(void\);) show
0 192 moveto (3538 extern int sys_link\(void\);) show
0 180 moveto (3539 extern int sys_mkdir\(void\);) show
0 168 moveto (3540 extern int sys_mknod\(void\);) show
0 156 moveto (3541 extern int sys_open\(void\);) show
0 144 moveto (3542 extern int sys_pipe\(void\);) show
0 132 moveto (3543 extern int sys_read\(void\);) show
0 120 moveto (3544 extern int sys_sbrk\(void\);) show
0 108 moveto (3545 extern int sys_sleep\(void\);) show
0 96 moveto (3546 extern int sys_unlink\(void\);) show
0 84 moveto (3547 extern int sys_wait\(void\);) show
0 72 moveto (3548 extern int sys_write\(void\);) show
0 60 moveto (3549 extern int sys_uptime\(void\);) show
0 24 moveto (Sheet 35) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/syscall.c  Page 3) show
0 648 moveto (3550 extern int sys_halt\(void\);) show
0 636 moveto (3551 ) show
0 624 moveto (3552 //Student functions) show
0 612 moveto (3553 extern int sys_date\(void\);) show
0 600 moveto (3554 ) show
0 588 moveto (3555 extern int sys_getuid\(void\);) show
0 576 moveto (3556 extern int sys_getgid\(void\);) show
0 564 moveto (3557 extern int sys_getppid\(void\);) show
0 552 moveto (3558 ) show
0 540 moveto (3559 extern int sys_setuid\(void\);) show
0 528 moveto (3560 extern int sys_setgid\(void\);) show
0 516 moveto (3561 ) show
0 504 moveto (3562 extern int sys_getprocs\(void\);) show
0 492 moveto (3563 // Project 3) show
0 480 moveto (3564 extern int sys_setpriority\(void\);) show
0 468 moveto (3565 ) show
0 456 moveto (3566 static int \(*syscalls[]\)\(void\) = {) show
0 444 moveto (3567 [SYS_fork]    sys_fork,) show
0 432 moveto (3568 [SYS_exit]    sys_exit,) show
0 420 moveto (3569 [SYS_wait]    sys_wait,) show
0 408 moveto (3570 [SYS_pipe]    sys_pipe,) show
0 396 moveto (3571 [SYS_read]    sys_read,) show
0 384 moveto (3572 [SYS_kill]    sys_kill,) show
0 372 moveto (3573 [SYS_exec]    sys_exec,) show
0 360 moveto (3574 [SYS_fstat]   sys_fstat,) show
0 348 moveto (3575 [SYS_chdir]   sys_chdir,) show
0 336 moveto (3576 [SYS_dup]     sys_dup,) show
0 324 moveto (3577 [SYS_getpid]  sys_getpid,) show
0 312 moveto (3578 [SYS_sbrk]    sys_sbrk,) show
0 300 moveto (3579 [SYS_sleep]   sys_sleep,) show
0 288 moveto (3580 [SYS_uptime]  sys_uptime,) show
0 276 moveto (3581 [SYS_open]    sys_open,) show
0 264 moveto (3582 [SYS_write]   sys_write,) show
0 252 moveto (3583 [SYS_mknod]   sys_mknod,) show
0 240 moveto (3584 [SYS_unlink]  sys_unlink,) show
0 228 moveto (3585 [SYS_link]    sys_link,) show
0 216 moveto (3586 [SYS_mkdir]   sys_mkdir,) show
0 204 moveto (3587 [SYS_close]   sys_close,) show
0 192 moveto (3588 [SYS_halt]    sys_halt,) show
0 180 moveto (3589 ) show
0 168 moveto (3590 //Student Functions) show
0 156 moveto (3591 [SYS_date]    sys_date,) show
0 144 moveto (3592 ) show
0 132 moveto (3593 [SYS_getuid]  sys_getuid,) show
0 120 moveto (3594 [SYS_getgid]  sys_getgid,) show
0 108 moveto (3595 [SYS_getppid] sys_getppid,) show
0 96 moveto (3596 ) show
0 84 moveto (3597 [SYS_setuid]  sys_setuid,) show
0 72 moveto (3598 [SYS_setgid]  sys_setgid,) show
0 60 moveto (3599 ) show
0 24 moveto (Sheet 35) show
grestore
restore
showpage
%%Page: 44 44
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/syscall.c  Page 4) show
0 648 moveto (3600 [SYS_getprocs] sys_getprocs,) show
0 636 moveto (3601 ) show
0 624 moveto (3602 // Project 3) show
0 612 moveto (3603 [SYS_setpriority] sys_setpriority,) show
0 600 moveto (3604 ) show
0 588 moveto (3605 };) show
0 576 moveto (3606 ) show
0 564 moveto (3607 // put data structure for printing out system call invocation information here) show
0 552 moveto (3608 // This is basically an enum, but can get called differently) show
0 540 moveto (3609 #ifdef PRINT_SYSCALLS) show
0 528 moveto (3610 char* \(sysname[]\) = {) show
0 516 moveto (3611 [SYS_fork]    "sys_fork",) show
0 504 moveto (3612 [SYS_exit]    "sys_exit",) show
0 492 moveto (3613 [SYS_wait]    "sys_wait",) show
0 480 moveto (3614 [SYS_pipe]    "sys_pipe",) show
0 468 moveto (3615 [SYS_read]    "sys_read",) show
0 456 moveto (3616 [SYS_kill]    "sys_kill",) show
0 444 moveto (3617 [SYS_exec]    "sys_exec",) show
0 432 moveto (3618 [SYS_fstat]   "sys_fstat",) show
0 420 moveto (3619 [SYS_chdir]   "sys_chdir",) show
0 408 moveto (3620 [SYS_dup]     "sys_dup",) show
0 396 moveto (3621 [SYS_getpid]  "sys_getpid",) show
0 384 moveto (3622 [SYS_sbrk]    "sys_sbrk",) show
0 372 moveto (3623 [SYS_sleep]   "sys_sleep",) show
0 360 moveto (3624 [SYS_uptime]  "sys_uptime",) show
0 348 moveto (3625 [SYS_open]    "sys_open",) show
0 336 moveto (3626 [SYS_write]   "sys_write",) show
0 324 moveto (3627 [SYS_mknod]   "sys_mknod",) show
0 312 moveto (3628 [SYS_unlink]  "sys_unlink",) show
0 300 moveto (3629 [SYS_link]    "sys_link",) show
0 288 moveto (3630 [SYS_mkdir]   "sys_mkdir",) show
0 276 moveto (3631 [SYS_close]   "sys_close",) show
0 264 moveto (3632 [SYS_halt]    "sys_halt",) show
0 252 moveto (3633 };) show
0 240 moveto (3634 #endif) show
0 228 moveto (3635 ) show
0 216 moveto (3636 ) show
0 204 moveto (3637 void) show
0 192 moveto (3638 syscall\(void\)) show
0 180 moveto (3639 {) show
0 168 moveto (3640   int num;) show
0 156 moveto (3641 ) show
0 144 moveto (3642   num = proc->tf->eax;) show
0 132 moveto (3643   if\(num > 0 && num < NELEM\(syscalls\) && syscalls[num]\) {) show
0 120 moveto (3644     proc->tf->eax = syscalls[num]\(\);) show
0 108 moveto (3645     //Start of Project 1) show
0 96 moveto (3646     //cprintf\("Syscall Happening '\\n'"\);) show
0 84 moveto (3647 ) show
0 72 moveto (3648 ) show
0 60 moveto (3649 ) show
0 24 moveto (Sheet 36) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/syscall.c  Page 5) show
0 648 moveto (3650     #ifdef PRINT_SYSCALLS) show
0 636 moveto (3651     cprintf\("\\n \\t \\t \\t  %s -> %d \\n", sysname[num], proc->tf->eax \);) show
0 624 moveto (3652     #endif) show
0 612 moveto (3653 ) show
0 600 moveto (3654   } else {) show
0 588 moveto (3655     cprintf\("%d %s: unknown sys call %d\\n",) show
0 576 moveto (3656             proc->pid, proc->name, num\);) show
0 564 moveto (3657     proc->tf->eax = -1;) show
0 552 moveto (3658   }) show
0 540 moveto (3659 }) show
0 528 moveto (3660 ) show
0 516 moveto (3661 ) show
0 504 moveto (3662 ) show
0 492 moveto (3663 ) show
0 480 moveto (3664 ) show
0 468 moveto (3665 ) show
0 456 moveto (3666 ) show
0 444 moveto (3667 ) show
0 432 moveto (3668 ) show
0 420 moveto (3669 ) show
0 408 moveto (3670 ) show
0 396 moveto (3671 ) show
0 384 moveto (3672 ) show
0 372 moveto (3673 ) show
0 360 moveto (3674 ) show
0 348 moveto (3675 ) show
0 336 moveto (3676 ) show
0 324 moveto (3677 ) show
0 312 moveto (3678 ) show
0 300 moveto (3679 ) show
0 288 moveto (3680 ) show
0 276 moveto (3681 ) show
0 264 moveto (3682 ) show
0 252 moveto (3683 ) show
0 240 moveto (3684 ) show
0 228 moveto (3685 ) show
0 216 moveto (3686 ) show
0 204 moveto (3687 ) show
0 192 moveto (3688 ) show
0 180 moveto (3689 ) show
0 168 moveto (3690 ) show
0 156 moveto (3691 ) show
0 144 moveto (3692 ) show
0 132 moveto (3693 ) show
0 120 moveto (3694 ) show
0 108 moveto (3695 ) show
0 96 moveto (3696 ) show
0 84 moveto (3697 ) show
0 72 moveto (3698 ) show
0 60 moveto (3699 ) show
0 24 moveto (Sheet 36) show
grestore
restore
showpage
%%Page: 45 45
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysproc.c  Page 1) show
0 648 moveto (3700 #include "types.h") show
0 636 moveto (3701 #include "x86.h") show
0 624 moveto (3702 #include "defs.h") show
0 612 moveto (3703 #include "date.h") show
0 600 moveto (3704 #include "param.h") show
0 588 moveto (3705 #include "memlayout.h") show
0 576 moveto (3706 #include "mmu.h") show
0 564 moveto (3707 #include "proc.h") show
0 552 moveto (3708 ) show
0 540 moveto (3709 int) show
0 528 moveto (3710 sys_fork\(void\)) show
0 516 moveto (3711 {) show
0 504 moveto (3712   return fork\(\);) show
0 492 moveto (3713 }) show
0 480 moveto (3714 ) show
0 468 moveto (3715 int) show
0 456 moveto (3716 sys_exit\(void\)) show
0 444 moveto (3717 {) show
0 432 moveto (3718   exit\(\);) show
0 420 moveto (3719   return 0;  // not reached) show
0 408 moveto (3720 }) show
0 396 moveto (3721 ) show
0 384 moveto (3722 int) show
0 372 moveto (3723 sys_wait\(void\)) show
0 360 moveto (3724 {) show
0 348 moveto (3725   return wait\(\);) show
0 336 moveto (3726 }) show
0 324 moveto (3727 ) show
0 312 moveto (3728 int) show
0 300 moveto (3729 sys_kill\(void\)) show
0 288 moveto (3730 {) show
0 276 moveto (3731   int pid;) show
0 264 moveto (3732 ) show
0 252 moveto (3733   if\(argint\(0, &pid\) < 0\)) show
0 240 moveto (3734     return -1;) show
0 228 moveto (3735   return kill\(pid\);) show
0 216 moveto (3736 }) show
0 204 moveto (3737 ) show
0 192 moveto (3738 int) show
0 180 moveto (3739 sys_getpid\(void\)) show
0 168 moveto (3740 {) show
0 156 moveto (3741   return proc->pid;) show
0 144 moveto (3742 }) show
0 132 moveto (3743 ) show
0 120 moveto (3744 ) show
0 108 moveto (3745 ) show
0 96 moveto (3746 ) show
0 84 moveto (3747 ) show
0 72 moveto (3748 ) show
0 60 moveto (3749 ) show
0 24 moveto (Sheet 37) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysproc.c  Page 2) show
0 648 moveto (3750 int) show
0 636 moveto (3751 sys_sbrk\(void\)) show
0 624 moveto (3752 {) show
0 612 moveto (3753   int addr;) show
0 600 moveto (3754   int n;) show
0 588 moveto (3755 ) show
0 576 moveto (3756   if\(argint\(0, &n\) < 0\)) show
0 564 moveto (3757     return -1;) show
0 552 moveto (3758   addr = proc->sz;) show
0 540 moveto (3759   if\(growproc\(n\) < 0\)) show
0 528 moveto (3760     return -1;) show
0 516 moveto (3761   return addr;) show
0 504 moveto (3762 }) show
0 492 moveto (3763 ) show
0 480 moveto (3764 int) show
0 468 moveto (3765 sys_sleep\(void\)) show
0 456 moveto (3766 {) show
0 444 moveto (3767   int n;) show
0 432 moveto (3768   uint ticks0;) show
0 420 moveto (3769 ) show
0 408 moveto (3770   if\(argint\(0, &n\) < 0\)) show
0 396 moveto (3771     return -1;) show
0 384 moveto (3772   acquire\(&tickslock\);) show
0 372 moveto (3773   ticks0 = ticks;) show
0 360 moveto (3774   while\(ticks - ticks0 < n\){) show
0 348 moveto (3775     if\(proc->killed\){) show
0 336 moveto (3776       release\(&tickslock\);) show
0 324 moveto (3777       return -1;) show
0 312 moveto (3778     }) show
0 300 moveto (3779     sleep\(&ticks, &tickslock\);) show
0 288 moveto (3780   }) show
0 276 moveto (3781   release\(&tickslock\);) show
0 264 moveto (3782   return 0;) show
0 252 moveto (3783 }) show
0 240 moveto (3784 ) show
0 228 moveto (3785 // return how many clock tick interrupts have occurred) show
0 216 moveto (3786 // since start.) show
0 204 moveto (3787 int) show
0 192 moveto (3788 sys_uptime\(void\)) show
0 180 moveto (3789 {) show
0 168 moveto (3790   uint xticks;) show
0 156 moveto (3791 ) show
0 144 moveto (3792   acquire\(&tickslock\);) show
0 132 moveto (3793   xticks = ticks;) show
0 120 moveto (3794   release\(&tickslock\);) show
0 108 moveto (3795   return xticks;) show
0 96 moveto (3796 }) show
0 84 moveto (3797 ) show
0 72 moveto (3798 ) show
0 60 moveto (3799 ) show
0 24 moveto (Sheet 37) show
grestore
restore
showpage
%%Page: 46 46
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysproc.c  Page 3) show
0 648 moveto (3800 //Turn of the computer) show
0 636 moveto (3801 int sys_halt\(void\){) show
0 624 moveto (3802   cprintf\("Shutting down ...\\n"\);) show
0 612 moveto (3803   outw \(0xB004, 0x0 | 0x2000\);) show
0 600 moveto (3804   return 0;) show
0 588 moveto (3805 }) show
0 576 moveto (3806 ) show
0 564 moveto (3807 int sys_date\(void\){) show
0 552 moveto (3808 ) show
0 540 moveto (3809     struct rtcdate* d;) show
0 528 moveto (3810 ) show
0 516 moveto (3811     if\(argptr\(0, \(char**\)&d, sizeof\(*d\)\) <0\)) show
0 504 moveto (3812         return -1;) show
0 492 moveto (3813 ) show
0 480 moveto (3814     cmostime\(d\);) show
0 468 moveto (3815     return 0;) show
0 456 moveto (3816 }) show
0 444 moveto (3817 ) show
0 432 moveto (3818 ) show
0 420 moveto (3819 uint) show
0 408 moveto (3820 sys_getuid\(void\)) show
0 396 moveto (3821 {) show
0 384 moveto (3822     return proc->uid;) show
0 372 moveto (3823 }) show
0 360 moveto (3824 ) show
0 348 moveto (3825 uint) show
0 336 moveto (3826 sys_getgid\(void\)) show
0 324 moveto (3827 {) show
0 312 moveto (3828     return proc->gid;) show
0 300 moveto (3829 }) show
0 288 moveto (3830 ) show
0 276 moveto (3831 uint) show
0 264 moveto (3832 sys_getppid\(void\)) show
0 252 moveto (3833 {) show
0 240 moveto (3834 ) show
0 228 moveto (3835     if\(proc->pid == 1\)) show
0 216 moveto (3836         return 1;) show
0 204 moveto (3837     return proc->parent->pid;) show
0 192 moveto (3838 }) show
0 180 moveto (3839 ) show
0 168 moveto (3840 ) show
0 156 moveto (3841 ) show
0 144 moveto (3842 ) show
0 132 moveto (3843 ) show
0 120 moveto (3844 ) show
0 108 moveto (3845 ) show
0 96 moveto (3846 ) show
0 84 moveto (3847 ) show
0 72 moveto (3848 ) show
0 60 moveto (3849 ) show
0 24 moveto (Sheet 38) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysproc.c  Page 4) show
0 648 moveto (3850 int) show
0 636 moveto (3851 sys_setuid\(void\)) show
0 624 moveto (3852 {) show
0 612 moveto (3853 ) show
0 600 moveto (3854 ) show
0 588 moveto (3855     if\(argint\(0, \(int*\)&proc->uid\)\)) show
0 576 moveto (3856         return -1;) show
0 564 moveto (3857 ) show
0 552 moveto (3858     if\(proc->uid < 0 || proc->uid > 32767\){) show
0 540 moveto (3859         proc->uid = 0;) show
0 528 moveto (3860         return -1;) show
0 516 moveto (3861     }) show
0 504 moveto (3862     else) show
0 492 moveto (3863         return 0;) show
0 480 moveto (3864 }) show
0 468 moveto (3865 ) show
0 456 moveto (3866 int) show
0 444 moveto (3867 sys_setgid\(void\)) show
0 432 moveto (3868 {) show
0 420 moveto (3869 ) show
0 408 moveto (3870     if\(argint\(0, \(int*\)&proc->gid\) \)) show
0 396 moveto (3871         return -1;) show
0 384 moveto (3872     if\(proc->gid < 0 || proc -> gid > 32767\){) show
0 372 moveto (3873         proc->gid = 0;) show
0 360 moveto (3874         return -1;) show
0 348 moveto (3875     }) show
0 336 moveto (3876     else) show
0 324 moveto (3877         return 0;) show
0 312 moveto (3878 }) show
0 300 moveto (3879 ) show
0 288 moveto (3880 ) show
0 276 moveto (3881 // Project 3) show
0 264 moveto (3882 int) show
0 252 moveto (3883 sys_setpriority\(void\){) show
0 240 moveto (3884 ) show
0 228 moveto (3885     int pid, priority;) show
0 216 moveto (3886    if\(argint\(0, &pid\) < 0 \)) show
0 204 moveto (3887         return -1;) show
0 192 moveto (3888    if\(argint\(0, &priority\) < 0 && priority <= NUM_READY_LISTS \) // validate stack space and check queue bounds) show
0 180 moveto (3889         return -1;) show
0 168 moveto (3890    if\(proc->pid == pid\){   // garuntee this is correct process) show
0 156 moveto (3891        proc->priority = priority; //set new priority) show
0 144 moveto (3892        return 0;) show
0 132 moveto (3893     }) show
0 120 moveto (3894    else) show
0 108 moveto (3895        return -1;) show
0 96 moveto (3896 ) show
0 84 moveto (3897     return 0;        //Error not reached!) show
0 72 moveto (3898 }) show
0 60 moveto (3899 ) show
0 24 moveto (Sheet 38) show
grestore
restore
showpage
%%Page: 47 47
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/halt.c  Page 1) show
0 648 moveto (3900 // halt the system.) show
0 636 moveto (3901 #include "types.h") show
0 624 moveto (3902 #include "user.h") show
0 612 moveto (3903 ) show
0 600 moveto (3904 int) show
0 588 moveto (3905 main\(void\) {) show
0 576 moveto (3906   halt\(\);) show
0 564 moveto (3907   return 0;) show
0 552 moveto (3908 }) show
0 540 moveto (3909 ) show
0 528 moveto (3910 ) show
0 516 moveto (3911 ) show
0 504 moveto (3912 ) show
0 492 moveto (3913 ) show
0 480 moveto (3914 ) show
0 468 moveto (3915 ) show
0 456 moveto (3916 ) show
0 444 moveto (3917 ) show
0 432 moveto (3918 ) show
0 420 moveto (3919 ) show
0 408 moveto (3920 ) show
0 396 moveto (3921 ) show
0 384 moveto (3922 ) show
0 372 moveto (3923 ) show
0 360 moveto (3924 ) show
0 348 moveto (3925 ) show
0 336 moveto (3926 ) show
0 324 moveto (3927 ) show
0 312 moveto (3928 ) show
0 300 moveto (3929 ) show
0 288 moveto (3930 ) show
0 276 moveto (3931 ) show
0 264 moveto (3932 ) show
0 252 moveto (3933 ) show
0 240 moveto (3934 ) show
0 228 moveto (3935 ) show
0 216 moveto (3936 ) show
0 204 moveto (3937 ) show
0 192 moveto (3938 ) show
0 180 moveto (3939 ) show
0 168 moveto (3940 ) show
0 156 moveto (3941 ) show
0 144 moveto (3942 ) show
0 132 moveto (3943 ) show
0 120 moveto (3944 ) show
0 108 moveto (3945 ) show
0 96 moveto (3946 ) show
0 84 moveto (3947 ) show
0 72 moveto (3948 ) show
0 60 moveto (3949 ) show
0 24 moveto (Sheet 39) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/buf.h  Page 1) show
0 648 moveto (3950 struct buf {) show
0 636 moveto (3951   int flags;) show
0 624 moveto (3952   uint dev;) show
0 612 moveto (3953   uint blockno;) show
0 600 moveto (3954   struct buf *prev; // LRU cache list) show
0 588 moveto (3955   struct buf *next;) show
0 576 moveto (3956   struct buf *qnext; // disk queue) show
0 564 moveto (3957   uchar data[BSIZE];) show
0 552 moveto (3958 };) show
0 540 moveto (3959 #define B_BUSY  0x1  // buffer is locked by some process) show
0 528 moveto (3960 #define B_VALID 0x2  // buffer has been read from disk) show
0 516 moveto (3961 #define B_DIRTY 0x4  // buffer needs to be written to disk) show
0 504 moveto (3962 ) show
0 492 moveto (3963 ) show
0 480 moveto (3964 ) show
0 468 moveto (3965 ) show
0 456 moveto (3966 ) show
0 444 moveto (3967 ) show
0 432 moveto (3968 ) show
0 420 moveto (3969 ) show
0 408 moveto (3970 ) show
0 396 moveto (3971 ) show
0 384 moveto (3972 ) show
0 372 moveto (3973 ) show
0 360 moveto (3974 ) show
0 348 moveto (3975 ) show
0 336 moveto (3976 ) show
0 324 moveto (3977 ) show
0 312 moveto (3978 ) show
0 300 moveto (3979 ) show
0 288 moveto (3980 ) show
0 276 moveto (3981 ) show
0 264 moveto (3982 ) show
0 252 moveto (3983 ) show
0 240 moveto (3984 ) show
0 228 moveto (3985 ) show
0 216 moveto (3986 ) show
0 204 moveto (3987 ) show
0 192 moveto (3988 ) show
0 180 moveto (3989 ) show
0 168 moveto (3990 ) show
0 156 moveto (3991 ) show
0 144 moveto (3992 ) show
0 132 moveto (3993 ) show
0 120 moveto (3994 ) show
0 108 moveto (3995 ) show
0 96 moveto (3996 ) show
0 84 moveto (3997 ) show
0 72 moveto (3998 ) show
0 60 moveto (3999 ) show
0 24 moveto (Sheet 39) show
grestore
restore
showpage
%%Page: 48 48
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fcntl.h  Page 1) show
0 648 moveto (4000 #define O_RDONLY  0x000) show
0 636 moveto (4001 #define O_WRONLY  0x001) show
0 624 moveto (4002 #define O_RDWR    0x002) show
0 612 moveto (4003 #define O_CREATE  0x200) show
0 600 moveto (4004 ) show
0 588 moveto (4005 ) show
0 576 moveto (4006 ) show
0 564 moveto (4007 ) show
0 552 moveto (4008 ) show
0 540 moveto (4009 ) show
0 528 moveto (4010 ) show
0 516 moveto (4011 ) show
0 504 moveto (4012 ) show
0 492 moveto (4013 ) show
0 480 moveto (4014 ) show
0 468 moveto (4015 ) show
0 456 moveto (4016 ) show
0 444 moveto (4017 ) show
0 432 moveto (4018 ) show
0 420 moveto (4019 ) show
0 408 moveto (4020 ) show
0 396 moveto (4021 ) show
0 384 moveto (4022 ) show
0 372 moveto (4023 ) show
0 360 moveto (4024 ) show
0 348 moveto (4025 ) show
0 336 moveto (4026 ) show
0 324 moveto (4027 ) show
0 312 moveto (4028 ) show
0 300 moveto (4029 ) show
0 288 moveto (4030 ) show
0 276 moveto (4031 ) show
0 264 moveto (4032 ) show
0 252 moveto (4033 ) show
0 240 moveto (4034 ) show
0 228 moveto (4035 ) show
0 216 moveto (4036 ) show
0 204 moveto (4037 ) show
0 192 moveto (4038 ) show
0 180 moveto (4039 ) show
0 168 moveto (4040 ) show
0 156 moveto (4041 ) show
0 144 moveto (4042 ) show
0 132 moveto (4043 ) show
0 120 moveto (4044 ) show
0 108 moveto (4045 ) show
0 96 moveto (4046 ) show
0 84 moveto (4047 ) show
0 72 moveto (4048 ) show
0 60 moveto (4049 ) show
0 24 moveto (Sheet 40) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/stat.h  Page 1) show
0 648 moveto (4050 #define T_DIR  1   // Directory) show
0 636 moveto (4051 #define T_FILE 2   // File) show
0 624 moveto (4052 #define T_DEV  3   // Device) show
0 612 moveto (4053 ) show
0 600 moveto (4054 struct stat {) show
0 588 moveto (4055   short type;  // Type of file) show
0 576 moveto (4056   int dev;     // File system's disk device) show
0 564 moveto (4057   uint ino;    // Inode number) show
0 552 moveto (4058   short nlink; // Number of links to file) show
0 540 moveto (4059   uint size;   // Size of file in bytes) show
0 528 moveto (4060 };) show
0 516 moveto (4061 ) show
0 504 moveto (4062 ) show
0 492 moveto (4063 ) show
0 480 moveto (4064 ) show
0 468 moveto (4065 ) show
0 456 moveto (4066 ) show
0 444 moveto (4067 ) show
0 432 moveto (4068 ) show
0 420 moveto (4069 ) show
0 408 moveto (4070 ) show
0 396 moveto (4071 ) show
0 384 moveto (4072 ) show
0 372 moveto (4073 ) show
0 360 moveto (4074 ) show
0 348 moveto (4075 ) show
0 336 moveto (4076 ) show
0 324 moveto (4077 ) show
0 312 moveto (4078 ) show
0 300 moveto (4079 ) show
0 288 moveto (4080 ) show
0 276 moveto (4081 ) show
0 264 moveto (4082 ) show
0 252 moveto (4083 ) show
0 240 moveto (4084 ) show
0 228 moveto (4085 ) show
0 216 moveto (4086 ) show
0 204 moveto (4087 ) show
0 192 moveto (4088 ) show
0 180 moveto (4089 ) show
0 168 moveto (4090 ) show
0 156 moveto (4091 ) show
0 144 moveto (4092 ) show
0 132 moveto (4093 ) show
0 120 moveto (4094 ) show
0 108 moveto (4095 ) show
0 96 moveto (4096 ) show
0 84 moveto (4097 ) show
0 72 moveto (4098 ) show
0 60 moveto (4099 ) show
0 24 moveto (Sheet 40) show
grestore
restore
showpage
%%Page: 49 49
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.h  Page 1) show
0 648 moveto (4100 // On-disk file system format.) show
0 636 moveto (4101 // Both the kernel and user programs use this header file.) show
0 624 moveto (4102 ) show
0 612 moveto (4103 ) show
0 600 moveto (4104 #define ROOTINO 1  // root i-number) show
0 588 moveto (4105 #define BSIZE 512  // block size) show
0 576 moveto (4106 ) show
0 564 moveto (4107 // Disk layout:) show
0 552 moveto (4108 // [ boot block | super block | log | inode blocks | free bit map | data blocks ]) show
0 540 moveto (4109 //) show
0 528 moveto (4110 // mkfs computes the super block and builds an initial file system. The super describes) show
0 516 moveto (4111 // the disk layout:) show
0 504 moveto (4112 struct superblock {) show
0 492 moveto (4113   uint size;         // Size of file system image \(blocks\)) show
0 480 moveto (4114   uint nblocks;      // Number of data blocks) show
0 468 moveto (4115   uint ninodes;      // Number of inodes.) show
0 456 moveto (4116   uint nlog;         // Number of log blocks) show
0 444 moveto (4117   uint logstart;     // Block number of first log block) show
0 432 moveto (4118   uint inodestart;   // Block number of first inode block) show
0 420 moveto (4119   uint bmapstart;    // Block number of first free map block) show
0 408 moveto (4120 };) show
0 396 moveto (4121 ) show
0 384 moveto (4122 #define NDIRECT 12) show
0 372 moveto (4123 #define NINDIRECT \(BSIZE / sizeof\(uint\)\)) show
0 360 moveto (4124 #define MAXFILE \(NDIRECT + NINDIRECT\)) show
0 348 moveto (4125 ) show
0 336 moveto (4126 // On-disk inode structure) show
0 324 moveto (4127 struct dinode {) show
0 312 moveto (4128   short type;           // File type) show
0 300 moveto (4129   short major;          // Major device number \(T_DEV only\)) show
0 288 moveto (4130   short minor;          // Minor device number \(T_DEV only\)) show
0 276 moveto (4131   short nlink;          // Number of links to inode in file system) show
0 264 moveto (4132   uint size;            // Size of file \(bytes\)) show
0 252 moveto (4133   uint addrs[NDIRECT+1];   // Data block addresses) show
0 240 moveto (4134 };) show
0 228 moveto (4135 ) show
0 216 moveto (4136 ) show
0 204 moveto (4137 ) show
0 192 moveto (4138 ) show
0 180 moveto (4139 ) show
0 168 moveto (4140 ) show
0 156 moveto (4141 ) show
0 144 moveto (4142 ) show
0 132 moveto (4143 ) show
0 120 moveto (4144 ) show
0 108 moveto (4145 ) show
0 96 moveto (4146 ) show
0 84 moveto (4147 ) show
0 72 moveto (4148 ) show
0 60 moveto (4149 ) show
0 24 moveto (Sheet 41) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.h  Page 2) show
0 648 moveto (4150 // Inodes per block.) show
0 636 moveto (4151 #define IPB           \(BSIZE / sizeof\(struct dinode\)\)) show
0 624 moveto (4152 ) show
0 612 moveto (4153 // Block containing inode i) show
0 600 moveto (4154 #define IBLOCK\(i, sb\)     \(\(i\) / IPB + sb.inodestart\)) show
0 588 moveto (4155 ) show
0 576 moveto (4156 // Bitmap bits per block) show
0 564 moveto (4157 #define BPB           \(BSIZE*8\)) show
0 552 moveto (4158 ) show
0 540 moveto (4159 // Block of free map containing bit for block b) show
0 528 moveto (4160 #define BBLOCK\(b, sb\) \(b/BPB + sb.bmapstart\)) show
0 516 moveto (4161 ) show
0 504 moveto (4162 // Directory is a file containing a sequence of dirent structures.) show
0 492 moveto (4163 #define DIRSIZ 14) show
0 480 moveto (4164 ) show
0 468 moveto (4165 struct dirent {) show
0 456 moveto (4166   ushort inum;) show
0 444 moveto (4167   char name[DIRSIZ];) show
0 432 moveto (4168 };) show
0 420 moveto (4169 ) show
0 408 moveto (4170 ) show
0 396 moveto (4171 ) show
0 384 moveto (4172 ) show
0 372 moveto (4173 ) show
0 360 moveto (4174 ) show
0 348 moveto (4175 ) show
0 336 moveto (4176 ) show
0 324 moveto (4177 ) show
0 312 moveto (4178 ) show
0 300 moveto (4179 ) show
0 288 moveto (4180 ) show
0 276 moveto (4181 ) show
0 264 moveto (4182 ) show
0 252 moveto (4183 ) show
0 240 moveto (4184 ) show
0 228 moveto (4185 ) show
0 216 moveto (4186 ) show
0 204 moveto (4187 ) show
0 192 moveto (4188 ) show
0 180 moveto (4189 ) show
0 168 moveto (4190 ) show
0 156 moveto (4191 ) show
0 144 moveto (4192 ) show
0 132 moveto (4193 ) show
0 120 moveto (4194 ) show
0 108 moveto (4195 ) show
0 96 moveto (4196 ) show
0 84 moveto (4197 ) show
0 72 moveto (4198 ) show
0 60 moveto (4199 ) show
0 24 moveto (Sheet 41) show
grestore
restore
showpage
%%Page: 50 50
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/file.h  Page 1) show
0 648 moveto (4200 struct file {) show
0 636 moveto (4201   enum { FD_NONE, FD_PIPE, FD_INODE } type;) show
0 624 moveto (4202   int ref; // reference count) show
0 612 moveto (4203   char readable;) show
0 600 moveto (4204   char writable;) show
0 588 moveto (4205   struct pipe *pipe;) show
0 576 moveto (4206   struct inode *ip;) show
0 564 moveto (4207   uint off;) show
0 552 moveto (4208 };) show
0 540 moveto (4209 ) show
0 528 moveto (4210 ) show
0 516 moveto (4211 // in-memory copy of an inode) show
0 504 moveto (4212 struct inode {) show
0 492 moveto (4213   uint dev;           // Device number) show
0 480 moveto (4214   uint inum;          // Inode number) show
0 468 moveto (4215   int ref;            // Reference count) show
0 456 moveto (4216   int flags;          // I_BUSY, I_VALID) show
0 444 moveto (4217 ) show
0 432 moveto (4218   short type;         // copy of disk inode) show
0 420 moveto (4219   short major;) show
0 408 moveto (4220   short minor;) show
0 396 moveto (4221   short nlink;) show
0 384 moveto (4222   uint size;) show
0 372 moveto (4223   uint addrs[NDIRECT+1];) show
0 360 moveto (4224 };) show
0 348 moveto (4225 #define I_BUSY 0x1) show
0 336 moveto (4226 #define I_VALID 0x2) show
0 324 moveto (4227 ) show
0 312 moveto (4228 // table mapping major device number to) show
0 300 moveto (4229 // device functions) show
0 288 moveto (4230 struct devsw {) show
0 276 moveto (4231   int \(*read\)\(struct inode*, char*, int\);) show
0 264 moveto (4232   int \(*write\)\(struct inode*, char*, int\);) show
0 252 moveto (4233 };) show
0 240 moveto (4234 ) show
0 228 moveto (4235 extern struct devsw devsw[];) show
0 216 moveto (4236 ) show
0 204 moveto (4237 #define CONSOLE 1) show
0 192 moveto (4238 ) show
0 180 moveto (4239 // Blank page.) show
0 168 moveto (4240 ) show
0 156 moveto (4241 ) show
0 144 moveto (4242 ) show
0 132 moveto (4243 ) show
0 120 moveto (4244 ) show
0 108 moveto (4245 ) show
0 96 moveto (4246 ) show
0 84 moveto (4247 ) show
0 72 moveto (4248 ) show
0 60 moveto (4249 ) show
0 24 moveto (Sheet 42) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/ide.c  Page 1) show
0 648 moveto (4250 // Simple PIO-based \(non-DMA\) IDE driver code.) show
0 636 moveto (4251 ) show
0 624 moveto (4252 #include "types.h") show
0 612 moveto (4253 #include "defs.h") show
0 600 moveto (4254 #include "param.h") show
0 588 moveto (4255 #include "memlayout.h") show
0 576 moveto (4256 #include "mmu.h") show
0 564 moveto (4257 #include "proc.h") show
0 552 moveto (4258 #include "x86.h") show
0 540 moveto (4259 #include "traps.h") show
0 528 moveto (4260 #include "spinlock.h") show
0 516 moveto (4261 #include "fs.h") show
0 504 moveto (4262 #include "buf.h") show
0 492 moveto (4263 ) show
0 480 moveto (4264 #define SECTOR_SIZE   512) show
0 468 moveto (4265 #define IDE_BSY       0x80) show
0 456 moveto (4266 #define IDE_DRDY      0x40) show
0 444 moveto (4267 #define IDE_DF        0x20) show
0 432 moveto (4268 #define IDE_ERR       0x01) show
0 420 moveto (4269 ) show
0 408 moveto (4270 #define IDE_CMD_READ  0x20) show
0 396 moveto (4271 #define IDE_CMD_WRITE 0x30) show
0 384 moveto (4272 ) show
0 372 moveto (4273 // idequeue points to the buf now being read/written to the disk.) show
0 360 moveto (4274 // idequeue->qnext points to the next buf to be processed.) show
0 348 moveto (4275 // You must hold idelock while manipulating queue.) show
0 336 moveto (4276 ) show
0 324 moveto (4277 static struct spinlock idelock;) show
0 312 moveto (4278 static struct buf *idequeue;) show
0 300 moveto (4279 ) show
0 288 moveto (4280 static int havedisk1;) show
0 276 moveto (4281 static void idestart\(struct buf*\);) show
0 264 moveto (4282 ) show
0 252 moveto (4283 // Wait for IDE disk to become ready.) show
0 240 moveto (4284 static int) show
0 228 moveto (4285 idewait\(int checkerr\)) show
0 216 moveto (4286 {) show
0 204 moveto (4287   int r;) show
0 192 moveto (4288 ) show
0 180 moveto (4289   while\(\(\(r = inb\(0x1f7\)\) & \(IDE_BSY|IDE_DRDY\)\) != IDE_DRDY\)) show
0 168 moveto (4290     ;) show
0 156 moveto (4291   if\(checkerr && \(r & \(IDE_DF|IDE_ERR\)\) != 0\)) show
0 144 moveto (4292     return -1;) show
0 132 moveto (4293   return 0;) show
0 120 moveto (4294 }) show
0 108 moveto (4295 ) show
0 96 moveto (4296 ) show
0 84 moveto (4297 ) show
0 72 moveto (4298 ) show
0 60 moveto (4299 ) show
0 24 moveto (Sheet 42) show
grestore
restore
showpage
%%Page: 51 51
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/ide.c  Page 2) show
0 648 moveto (4300 void) show
0 636 moveto (4301 ideinit\(void\)) show
0 624 moveto (4302 {) show
0 612 moveto (4303   int i;) show
0 600 moveto (4304 ) show
0 588 moveto (4305   initlock\(&idelock, "ide"\);) show
0 576 moveto (4306   picenable\(IRQ_IDE\);) show
0 564 moveto (4307   ioapicenable\(IRQ_IDE, ncpu - 1\);) show
0 552 moveto (4308   idewait\(0\);) show
0 540 moveto (4309 ) show
0 528 moveto (4310   // Check if disk 1 is present) show
0 516 moveto (4311   outb\(0x1f6, 0xe0 | \(1<<4\)\);) show
0 504 moveto (4312   for\(i=0; i<1000; i++\){) show
0 492 moveto (4313     if\(inb\(0x1f7\) != 0\){) show
0 480 moveto (4314       havedisk1 = 1;) show
0 468 moveto (4315       break;) show
0 456 moveto (4316     }) show
0 444 moveto (4317   }) show
0 432 moveto (4318 ) show
0 420 moveto (4319   // Switch back to disk 0.) show
0 408 moveto (4320   outb\(0x1f6, 0xe0 | \(0<<4\)\);) show
0 396 moveto (4321 }) show
0 384 moveto (4322 ) show
0 372 moveto (4323 // Start the request for b.  Caller must hold idelock.) show
0 360 moveto (4324 static void) show
0 348 moveto (4325 idestart\(struct buf *b\)) show
0 336 moveto (4326 {) show
0 324 moveto (4327   if\(b == 0\)) show
0 312 moveto (4328     panic\("idestart"\);) show
0 300 moveto (4329   if\(b->blockno >= FSSIZE\)) show
0 288 moveto (4330     panic\("incorrect blockno"\);) show
0 276 moveto (4331   int sector_per_block =  BSIZE/SECTOR_SIZE;) show
0 264 moveto (4332   int sector = b->blockno * sector_per_block;) show
0 252 moveto (4333 ) show
0 240 moveto (4334   if \(sector_per_block > 7\) panic\("idestart"\);) show
0 228 moveto (4335 ) show
0 216 moveto (4336   idewait\(0\);) show
0 204 moveto (4337   outb\(0x3f6, 0\);  // generate interrupt) show
0 192 moveto (4338   outb\(0x1f2, sector_per_block\);  // number of sectors) show
0 180 moveto (4339   outb\(0x1f3, sector & 0xff\);) show
0 168 moveto (4340   outb\(0x1f4, \(sector >> 8\) & 0xff\);) show
0 156 moveto (4341   outb\(0x1f5, \(sector >> 16\) & 0xff\);) show
0 144 moveto (4342   outb\(0x1f6, 0xe0 | \(\(b->dev&1\)<<4\) | \(\(sector>>24\)&0x0f\)\);) show
0 132 moveto (4343   if\(b->flags & B_DIRTY\){) show
0 120 moveto (4344     outb\(0x1f7, IDE_CMD_WRITE\);) show
0 108 moveto (4345     outsl\(0x1f0, b->data, BSIZE/4\);) show
0 96 moveto (4346   } else {) show
0 84 moveto (4347     outb\(0x1f7, IDE_CMD_READ\);) show
0 72 moveto (4348   }) show
0 60 moveto (4349 }) show
0 24 moveto (Sheet 43) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/ide.c  Page 3) show
0 648 moveto (4350 // Interrupt handler.) show
0 636 moveto (4351 void) show
0 624 moveto (4352 ideintr\(void\)) show
0 612 moveto (4353 {) show
0 600 moveto (4354   struct buf *b;) show
0 588 moveto (4355 ) show
0 576 moveto (4356   // First queued buffer is the active request.) show
0 564 moveto (4357   acquire\(&idelock\);) show
0 552 moveto (4358   if\(\(b = idequeue\) == 0\){) show
0 540 moveto (4359     release\(&idelock\);) show
0 528 moveto (4360     // cprintf\("spurious IDE interrupt\\n"\);) show
0 516 moveto (4361     return;) show
0 504 moveto (4362   }) show
0 492 moveto (4363   idequeue = b->qnext;) show
0 480 moveto (4364 ) show
0 468 moveto (4365   // Read data if needed.) show
0 456 moveto (4366   if\(!\(b->flags & B_DIRTY\) && idewait\(1\) >= 0\)) show
0 444 moveto (4367     insl\(0x1f0, b->data, BSIZE/4\);) show
0 432 moveto (4368 ) show
0 420 moveto (4369   // Wake process waiting for this buf.) show
0 408 moveto (4370   b->flags |= B_VALID;) show
0 396 moveto (4371   b->flags &= ~B_DIRTY;) show
0 384 moveto (4372   wakeup\(b\);) show
0 372 moveto (4373 ) show
0 360 moveto (4374   // Start disk on next buf in queue.) show
0 348 moveto (4375   if\(idequeue != 0\)) show
0 336 moveto (4376     idestart\(idequeue\);) show
0 324 moveto (4377 ) show
0 312 moveto (4378   release\(&idelock\);) show
0 300 moveto (4379 }) show
0 288 moveto (4380 ) show
0 276 moveto (4381 // Sync buf with disk.) show
0 264 moveto (4382 // If B_DIRTY is set, write buf to disk, clear B_DIRTY, set B_VALID.) show
0 252 moveto (4383 // Else if B_VALID is not set, read buf from disk, set B_VALID.) show
0 240 moveto (4384 void) show
0 228 moveto (4385 iderw\(struct buf *b\)) show
0 216 moveto (4386 {) show
0 204 moveto (4387   struct buf **pp;) show
0 192 moveto (4388 ) show
0 180 moveto (4389   if\(!\(b->flags & B_BUSY\)\)) show
0 168 moveto (4390     panic\("iderw: buf not busy"\);) show
0 156 moveto (4391   if\(\(b->flags & \(B_VALID|B_DIRTY\)\) == B_VALID\)) show
0 144 moveto (4392     panic\("iderw: nothing to do"\);) show
0 132 moveto (4393   if\(b->dev != 0 && !havedisk1\)) show
0 120 moveto (4394     panic\("iderw: ide disk 1 not present"\);) show
0 108 moveto (4395 ) show
0 96 moveto (4396   acquire\(&idelock\);  ) show
0 84 moveto (4397 ) show
0 72 moveto (4398 ) show
0 60 moveto (4399 ) show
0 24 moveto (Sheet 43) show
grestore
restore
showpage
%%Page: 52 52
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/ide.c  Page 4) show
0 648 moveto (4400   // Append b to idequeue.) show
0 636 moveto (4401   b->qnext = 0;) show
0 624 moveto (4402   for\(pp=&idequeue; *pp; pp=&\(*pp\)->qnext\)  ) show
0 612 moveto (4403     ;) show
0 600 moveto (4404   *pp = b;) show
0 588 moveto (4405 ) show
0 576 moveto (4406   // Start disk if necessary.) show
0 564 moveto (4407   if\(idequeue == b\)) show
0 552 moveto (4408     idestart\(b\);) show
0 540 moveto (4409 ) show
0 528 moveto (4410   // Wait for request to finish.) show
0 516 moveto (4411   while\(\(b->flags & \(B_VALID|B_DIRTY\)\) != B_VALID\){) show
0 504 moveto (4412     sleep\(b, &idelock\);) show
0 492 moveto (4413   }) show
0 480 moveto (4414 ) show
0 468 moveto (4415   release\(&idelock\);) show
0 456 moveto (4416 }) show
0 444 moveto (4417 ) show
0 432 moveto (4418 ) show
0 420 moveto (4419 ) show
0 408 moveto (4420 ) show
0 396 moveto (4421 ) show
0 384 moveto (4422 ) show
0 372 moveto (4423 ) show
0 360 moveto (4424 ) show
0 348 moveto (4425 ) show
0 336 moveto (4426 ) show
0 324 moveto (4427 ) show
0 312 moveto (4428 ) show
0 300 moveto (4429 ) show
0 288 moveto (4430 ) show
0 276 moveto (4431 ) show
0 264 moveto (4432 ) show
0 252 moveto (4433 ) show
0 240 moveto (4434 ) show
0 228 moveto (4435 ) show
0 216 moveto (4436 ) show
0 204 moveto (4437 ) show
0 192 moveto (4438 ) show
0 180 moveto (4439 ) show
0 168 moveto (4440 ) show
0 156 moveto (4441 ) show
0 144 moveto (4442 ) show
0 132 moveto (4443 ) show
0 120 moveto (4444 ) show
0 108 moveto (4445 ) show
0 96 moveto (4446 ) show
0 84 moveto (4447 ) show
0 72 moveto (4448 ) show
0 60 moveto (4449 ) show
0 24 moveto (Sheet 44) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/bio.c  Page 1) show
0 648 moveto (4450 // Buffer cache.) show
0 636 moveto (4451 //) show
0 624 moveto (4452 // The buffer cache is a linked list of buf structures holding) show
0 612 moveto (4453 // cached copies of disk block contents.  Caching disk blocks) show
0 600 moveto (4454 // in memory reduces the number of disk reads and also provides) show
0 588 moveto (4455 // a synchronization point for disk blocks used by multiple processes.) show
0 576 moveto (4456 //) show
0 564 moveto (4457 // Interface:) show
0 552 moveto (4458 // * To get a buffer for a particular disk block, call bread.) show
0 540 moveto (4459 // * After changing buffer data, call bwrite to write it to disk.) show
0 528 moveto (4460 // * When done with the buffer, call brelse.) show
0 516 moveto (4461 // * Do not use the buffer after calling brelse.) show
0 504 moveto (4462 // * Only one process at a time can use a buffer,) show
0 492 moveto (4463 //     so do not keep them longer than necessary.) show
0 480 moveto (4464 //) show
0 468 moveto (4465 // The implementation uses three state flags internally:) show
0 456 moveto (4466 // * B_BUSY: the block has been returned from bread) show
0 444 moveto (4467 //     and has not been passed back to brelse.) show
0 432 moveto (4468 // * B_VALID: the buffer data has been read from the disk.) show
0 420 moveto (4469 // * B_DIRTY: the buffer data has been modified) show
0 408 moveto (4470 //     and needs to be written to disk.) show
0 396 moveto (4471 ) show
0 384 moveto (4472 #include "types.h") show
0 372 moveto (4473 #include "defs.h") show
0 360 moveto (4474 #include "param.h") show
0 348 moveto (4475 #include "spinlock.h") show
0 336 moveto (4476 #include "fs.h") show
0 324 moveto (4477 #include "buf.h") show
0 312 moveto (4478 ) show
0 300 moveto (4479 struct {) show
0 288 moveto (4480   struct spinlock lock;) show
0 276 moveto (4481   struct buf buf[NBUF];) show
0 264 moveto (4482 ) show
0 252 moveto (4483   // Linked list of all buffers, through prev/next.) show
0 240 moveto (4484   // head.next is most recently used.) show
0 228 moveto (4485   struct buf head;) show
0 216 moveto (4486 } bcache;) show
0 204 moveto (4487 ) show
0 192 moveto (4488 void) show
0 180 moveto (4489 binit\(void\)) show
0 168 moveto (4490 {) show
0 156 moveto (4491   struct buf *b;) show
0 144 moveto (4492 ) show
0 132 moveto (4493   initlock\(&bcache.lock, "bcache"\);) show
0 120 moveto (4494 ) show
0 108 moveto (4495   // Create linked list of buffers) show
0 96 moveto (4496   bcache.head.prev = &bcache.head;) show
0 84 moveto (4497   bcache.head.next = &bcache.head;) show
0 72 moveto (4498   for\(b = bcache.buf; b < bcache.buf+NBUF; b++\){) show
0 60 moveto (4499     b->next = bcache.head.next;) show
0 24 moveto (Sheet 44) show
grestore
restore
showpage
%%Page: 53 53
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/bio.c  Page 2) show
0 648 moveto (4500     b->prev = &bcache.head;) show
0 636 moveto (4501     b->dev = -1;) show
0 624 moveto (4502     bcache.head.next->prev = b;) show
0 612 moveto (4503     bcache.head.next = b;) show
0 600 moveto (4504   }) show
0 588 moveto (4505 }) show
0 576 moveto (4506 ) show
0 564 moveto (4507 // Look through buffer cache for block on device dev.) show
0 552 moveto (4508 // If not found, allocate a buffer.) show
0 540 moveto (4509 // In either case, return B_BUSY buffer.) show
0 528 moveto (4510 static struct buf*) show
0 516 moveto (4511 bget\(uint dev, uint blockno\)) show
0 504 moveto (4512 {) show
0 492 moveto (4513   struct buf *b;) show
0 480 moveto (4514 ) show
0 468 moveto (4515   acquire\(&bcache.lock\);) show
0 456 moveto (4516 ) show
0 444 moveto (4517  loop:) show
0 432 moveto (4518   // Is the block already cached?) show
0 420 moveto (4519   for\(b = bcache.head.next; b != &bcache.head; b = b->next\){) show
0 408 moveto (4520     if\(b->dev == dev && b->blockno == blockno\){) show
0 396 moveto (4521       if\(!\(b->flags & B_BUSY\)\){) show
0 384 moveto (4522         b->flags |= B_BUSY;) show
0 372 moveto (4523         release\(&bcache.lock\);) show
0 360 moveto (4524         return b;) show
0 348 moveto (4525       }) show
0 336 moveto (4526       sleep\(b, &bcache.lock\);) show
0 324 moveto (4527       goto loop;) show
0 312 moveto (4528     }) show
0 300 moveto (4529   }) show
0 288 moveto (4530 ) show
0 276 moveto (4531   // Not cached; recycle some non-busy and clean buffer.) show
0 264 moveto (4532   // "clean" because B_DIRTY and !B_BUSY means log.c) show
0 252 moveto (4533   // hasn't yet committed the changes to the buffer.) show
0 240 moveto (4534   for\(b = bcache.head.prev; b != &bcache.head; b = b->prev\){) show
0 228 moveto (4535     if\(\(b->flags & B_BUSY\) == 0 && \(b->flags & B_DIRTY\) == 0\){) show
0 216 moveto (4536       b->dev = dev;) show
0 204 moveto (4537       b->blockno = blockno;) show
0 192 moveto (4538       b->flags = B_BUSY;) show
0 180 moveto (4539       release\(&bcache.lock\);) show
0 168 moveto (4540       return b;) show
0 156 moveto (4541     }) show
0 144 moveto (4542   }) show
0 132 moveto (4543   panic\("bget: no buffers"\);) show
0 120 moveto (4544 }) show
0 108 moveto (4545 ) show
0 96 moveto (4546 ) show
0 84 moveto (4547 ) show
0 72 moveto (4548 ) show
0 60 moveto (4549 ) show
0 24 moveto (Sheet 45) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/bio.c  Page 3) show
0 648 moveto (4550 // Return a B_BUSY buf with the contents of the indicated block.) show
0 636 moveto (4551 struct buf*) show
0 624 moveto (4552 bread\(uint dev, uint blockno\)) show
0 612 moveto (4553 {) show
0 600 moveto (4554   struct buf *b;) show
0 588 moveto (4555 ) show
0 576 moveto (4556   b = bget\(dev, blockno\);) show
0 564 moveto (4557   if\(!\(b->flags & B_VALID\)\) {) show
0 552 moveto (4558     iderw\(b\);) show
0 540 moveto (4559   }) show
0 528 moveto (4560   return b;) show
0 516 moveto (4561 }) show
0 504 moveto (4562 ) show
0 492 moveto (4563 // Write b's contents to disk.  Must be B_BUSY.) show
0 480 moveto (4564 void) show
0 468 moveto (4565 bwrite\(struct buf *b\)) show
0 456 moveto (4566 {) show
0 444 moveto (4567   if\(\(b->flags & B_BUSY\) == 0\)) show
0 432 moveto (4568     panic\("bwrite"\);) show
0 420 moveto (4569   b->flags |= B_DIRTY;) show
0 408 moveto (4570   iderw\(b\);) show
0 396 moveto (4571 }) show
0 384 moveto (4572 ) show
0 372 moveto (4573 // Release a B_BUSY buffer.) show
0 360 moveto (4574 // Move to the head of the MRU list.) show
0 348 moveto (4575 void) show
0 336 moveto (4576 brelse\(struct buf *b\)) show
0 324 moveto (4577 {) show
0 312 moveto (4578   if\(\(b->flags & B_BUSY\) == 0\)) show
0 300 moveto (4579     panic\("brelse"\);) show
0 288 moveto (4580 ) show
0 276 moveto (4581   acquire\(&bcache.lock\);) show
0 264 moveto (4582 ) show
0 252 moveto (4583   b->next->prev = b->prev;) show
0 240 moveto (4584   b->prev->next = b->next;) show
0 228 moveto (4585   b->next = bcache.head.next;) show
0 216 moveto (4586   b->prev = &bcache.head;) show
0 204 moveto (4587   bcache.head.next->prev = b;) show
0 192 moveto (4588   bcache.head.next = b;) show
0 180 moveto (4589 ) show
0 168 moveto (4590   b->flags &= ~B_BUSY;) show
0 156 moveto (4591   wakeup\(b\);) show
0 144 moveto (4592 ) show
0 132 moveto (4593   release\(&bcache.lock\);) show
0 120 moveto (4594 }) show
0 108 moveto (4595 // Blank page.) show
0 96 moveto (4596 ) show
0 84 moveto (4597 ) show
0 72 moveto (4598 ) show
0 60 moveto (4599 ) show
0 24 moveto (Sheet 45) show
grestore
restore
showpage
%%Page: 54 54
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/log.c  Page 1) show
0 648 moveto (4600 #include "types.h") show
0 636 moveto (4601 #include "defs.h") show
0 624 moveto (4602 #include "param.h") show
0 612 moveto (4603 #include "spinlock.h") show
0 600 moveto (4604 #include "fs.h") show
0 588 moveto (4605 #include "buf.h") show
0 576 moveto (4606 ) show
0 564 moveto (4607 // Simple logging that allows concurrent FS system calls.) show
0 552 moveto (4608 //) show
0 540 moveto (4609 // A log transaction contains the updates of multiple FS system) show
0 528 moveto (4610 // calls. The logging system only commits when there are) show
0 516 moveto (4611 // no FS system calls active. Thus there is never) show
0 504 moveto (4612 // any reasoning required about whether a commit might) show
0 492 moveto (4613 // write an uncommitted system call's updates to disk.) show
0 480 moveto (4614 //) show
0 468 moveto (4615 // A system call should call begin_op\(\)/end_op\(\) to mark) show
0 456 moveto (4616 // its start and end. Usually begin_op\(\) just increments) show
0 444 moveto (4617 // the count of in-progress FS system calls and returns.) show
0 432 moveto (4618 // But if it thinks the log is close to running out, it) show
0 420 moveto (4619 // sleeps until the last outstanding end_op\(\) commits.) show
0 408 moveto (4620 //) show
0 396 moveto (4621 // The log is a physical re-do log containing disk blocks.) show
0 384 moveto (4622 // The on-disk log format:) show
0 372 moveto (4623 //   header block, containing block #s for block A, B, C, ...) show
0 360 moveto (4624 //   block A) show
0 348 moveto (4625 //   block B) show
0 336 moveto (4626 //   block C) show
0 324 moveto (4627 //   ...) show
0 312 moveto (4628 // Log appends are synchronous.) show
0 300 moveto (4629 ) show
0 288 moveto (4630 // Contents of the header block, used for both the on-disk header block) show
0 276 moveto (4631 // and to keep track in memory of logged block# before commit.) show
0 264 moveto (4632 struct logheader {) show
0 252 moveto (4633   int n;) show
0 240 moveto (4634   int block[LOGSIZE];) show
0 228 moveto (4635 };) show
0 216 moveto (4636 ) show
0 204 moveto (4637 struct log {) show
0 192 moveto (4638   struct spinlock lock;) show
0 180 moveto (4639   int start;) show
0 168 moveto (4640   int size;) show
0 156 moveto (4641   int outstanding; // how many FS sys calls are executing.) show
0 144 moveto (4642   int committing;  // in commit\(\), please wait.) show
0 132 moveto (4643   int dev;) show
0 120 moveto (4644   struct logheader lh;) show
0 108 moveto (4645 };) show
0 96 moveto (4646 ) show
0 84 moveto (4647 ) show
0 72 moveto (4648 ) show
0 60 moveto (4649 ) show
0 24 moveto (Sheet 46) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/log.c  Page 2) show
0 648 moveto (4650 struct log log;) show
0 636 moveto (4651 ) show
0 624 moveto (4652 static void recover_from_log\(void\);) show
0 612 moveto (4653 static void commit\(\);) show
0 600 moveto (4654 ) show
0 588 moveto (4655 void) show
0 576 moveto (4656 initlog\(int dev\)) show
0 564 moveto (4657 {) show
0 552 moveto (4658   if \(sizeof\(struct logheader\) >= BSIZE\)) show
0 540 moveto (4659     panic\("initlog: too big logheader"\);) show
0 528 moveto (4660 ) show
0 516 moveto (4661   struct superblock sb;) show
0 504 moveto (4662   initlock\(&log.lock, "log"\);) show
0 492 moveto (4663   readsb\(dev, &sb\);) show
0 480 moveto (4664   log.start = sb.logstart;) show
0 468 moveto (4665   log.size = sb.nlog;) show
0 456 moveto (4666   log.dev = dev;) show
0 444 moveto (4667   recover_from_log\(\);) show
0 432 moveto (4668 }) show
0 420 moveto (4669 ) show
0 408 moveto (4670 // Copy committed blocks from log to their home location) show
0 396 moveto (4671 static void) show
0 384 moveto (4672 install_trans\(void\)) show
0 372 moveto (4673 {) show
0 360 moveto (4674   int tail;) show
0 348 moveto (4675 ) show
0 336 moveto (4676   for \(tail = 0; tail < log.lh.n; tail++\) {) show
0 324 moveto (4677     struct buf *lbuf = bread\(log.dev, log.start+tail+1\); // read log block) show
0 312 moveto (4678     struct buf *dbuf = bread\(log.dev, log.lh.block[tail]\); // read dst) show
0 300 moveto (4679     memmove\(dbuf->data, lbuf->data, BSIZE\);  // copy block to dst) show
0 288 moveto (4680     bwrite\(dbuf\);  // write dst to disk) show
0 276 moveto (4681     brelse\(lbuf\);) show
0 264 moveto (4682     brelse\(dbuf\);) show
0 252 moveto (4683   }) show
0 240 moveto (4684 }) show
0 228 moveto (4685 ) show
0 216 moveto (4686 // Read the log header from disk into the in-memory log header) show
0 204 moveto (4687 static void) show
0 192 moveto (4688 read_head\(void\)) show
0 180 moveto (4689 {) show
0 168 moveto (4690   struct buf *buf = bread\(log.dev, log.start\);) show
0 156 moveto (4691   struct logheader *lh = \(struct logheader *\) \(buf->data\);) show
0 144 moveto (4692   int i;) show
0 132 moveto (4693   log.lh.n = lh->n;) show
0 120 moveto (4694   for \(i = 0; i < log.lh.n; i++\) {) show
0 108 moveto (4695     log.lh.block[i] = lh->block[i];) show
0 96 moveto (4696   }) show
0 84 moveto (4697   brelse\(buf\);) show
0 72 moveto (4698 }) show
0 60 moveto (4699 ) show
0 24 moveto (Sheet 46) show
grestore
restore
showpage
%%Page: 55 55
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/log.c  Page 3) show
0 648 moveto (4700 // Write in-memory log header to disk.) show
0 636 moveto (4701 // This is the true point at which the) show
0 624 moveto (4702 // current transaction commits.) show
0 612 moveto (4703 static void) show
0 600 moveto (4704 write_head\(void\)) show
0 588 moveto (4705 {) show
0 576 moveto (4706   struct buf *buf = bread\(log.dev, log.start\);) show
0 564 moveto (4707   struct logheader *hb = \(struct logheader *\) \(buf->data\);) show
0 552 moveto (4708   int i;) show
0 540 moveto (4709   hb->n = log.lh.n;) show
0 528 moveto (4710   for \(i = 0; i < log.lh.n; i++\) {) show
0 516 moveto (4711     hb->block[i] = log.lh.block[i];) show
0 504 moveto (4712   }) show
0 492 moveto (4713   bwrite\(buf\);) show
0 480 moveto (4714   brelse\(buf\);) show
0 468 moveto (4715 }) show
0 456 moveto (4716 ) show
0 444 moveto (4717 static void) show
0 432 moveto (4718 recover_from_log\(void\)) show
0 420 moveto (4719 {) show
0 408 moveto (4720   read_head\(\);) show
0 396 moveto (4721   install_trans\(\); // if committed, copy from log to disk) show
0 384 moveto (4722   log.lh.n = 0;) show
0 372 moveto (4723   write_head\(\); // clear the log) show
0 360 moveto (4724 }) show
0 348 moveto (4725 ) show
0 336 moveto (4726 // called at the start of each FS system call.) show
0 324 moveto (4727 void) show
0 312 moveto (4728 begin_op\(void\)) show
0 300 moveto (4729 {) show
0 288 moveto (4730   acquire\(&log.lock\);) show
0 276 moveto (4731   while\(1\){) show
0 264 moveto (4732     if\(log.committing\){) show
0 252 moveto (4733       sleep\(&log, &log.lock\);) show
0 240 moveto (4734     } else if\(log.lh.n + \(log.outstanding+1\)*MAXOPBLOCKS > LOGSIZE\){) show
0 228 moveto (4735       // this op might exhaust log space; wait for commit.) show
0 216 moveto (4736       sleep\(&log, &log.lock\);) show
0 204 moveto (4737     } else {) show
0 192 moveto (4738       log.outstanding += 1;) show
0 180 moveto (4739       release\(&log.lock\);) show
0 168 moveto (4740       break;) show
0 156 moveto (4741     }) show
0 144 moveto (4742   }) show
0 132 moveto (4743 }) show
0 120 moveto (4744 ) show
0 108 moveto (4745 ) show
0 96 moveto (4746 ) show
0 84 moveto (4747 ) show
0 72 moveto (4748 ) show
0 60 moveto (4749 ) show
0 24 moveto (Sheet 47) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/log.c  Page 4) show
0 648 moveto (4750 // called at the end of each FS system call.) show
0 636 moveto (4751 // commits if this was the last outstanding operation.) show
0 624 moveto (4752 void) show
0 612 moveto (4753 end_op\(void\)) show
0 600 moveto (4754 {) show
0 588 moveto (4755   int do_commit = 0;) show
0 576 moveto (4756 ) show
0 564 moveto (4757   acquire\(&log.lock\);) show
0 552 moveto (4758   log.outstanding -= 1;) show
0 540 moveto (4759   if\(log.committing\)) show
0 528 moveto (4760     panic\("log.committing"\);) show
0 516 moveto (4761   if\(log.outstanding == 0\){) show
0 504 moveto (4762     do_commit = 1;) show
0 492 moveto (4763     log.committing = 1;) show
0 480 moveto (4764   } else {) show
0 468 moveto (4765     // begin_op\(\) may be waiting for log space.) show
0 456 moveto (4766     wakeup\(&log\);) show
0 444 moveto (4767   }) show
0 432 moveto (4768   release\(&log.lock\);) show
0 420 moveto (4769 ) show
0 408 moveto (4770   if\(do_commit\){) show
0 396 moveto (4771     // call commit w/o holding locks, since not allowed) show
0 384 moveto (4772     // to sleep with locks.) show
0 372 moveto (4773     commit\(\);) show
0 360 moveto (4774     acquire\(&log.lock\);) show
0 348 moveto (4775     log.committing = 0;) show
0 336 moveto (4776     wakeup\(&log\);) show
0 324 moveto (4777     release\(&log.lock\);) show
0 312 moveto (4778   }) show
0 300 moveto (4779 }) show
0 288 moveto (4780 ) show
0 276 moveto (4781 // Copy modified blocks from cache to log.) show
0 264 moveto (4782 static void) show
0 252 moveto (4783 write_log\(void\)) show
0 240 moveto (4784 {) show
0 228 moveto (4785   int tail;) show
0 216 moveto (4786 ) show
0 204 moveto (4787   for \(tail = 0; tail < log.lh.n; tail++\) {) show
0 192 moveto (4788     struct buf *to = bread\(log.dev, log.start+tail+1\); // log block) show
0 180 moveto (4789     struct buf *from = bread\(log.dev, log.lh.block[tail]\); // cache block) show
0 168 moveto (4790     memmove\(to->data, from->data, BSIZE\);) show
0 156 moveto (4791     bwrite\(to\);  // write the log) show
0 144 moveto (4792     brelse\(from\);) show
0 132 moveto (4793     brelse\(to\);) show
0 120 moveto (4794   }) show
0 108 moveto (4795 }) show
0 96 moveto (4796 ) show
0 84 moveto (4797 ) show
0 72 moveto (4798 ) show
0 60 moveto (4799 ) show
0 24 moveto (Sheet 47) show
grestore
restore
showpage
%%Page: 56 56
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/log.c  Page 5) show
0 648 moveto (4800 static void) show
0 636 moveto (4801 commit\(\)) show
0 624 moveto (4802 {) show
0 612 moveto (4803   if \(log.lh.n > 0\) {) show
0 600 moveto (4804     write_log\(\);     // Write modified blocks from cache to log) show
0 588 moveto (4805     write_head\(\);    // Write header to disk -- the real commit) show
0 576 moveto (4806     install_trans\(\); // Now install writes to home locations) show
0 564 moveto (4807     log.lh.n = 0;) show
0 552 moveto (4808     write_head\(\);    // Erase the transaction from the log) show
0 540 moveto (4809   }) show
0 528 moveto (4810 }) show
0 516 moveto (4811 ) show
0 504 moveto (4812 // Caller has modified b->data and is done with the buffer.) show
0 492 moveto (4813 // Record the block number and pin in the cache with B_DIRTY.) show
0 480 moveto (4814 // commit\(\)/write_log\(\) will do the disk write.) show
0 468 moveto (4815 //) show
0 456 moveto (4816 // log_write\(\) replaces bwrite\(\); a typical use is:) show
0 444 moveto (4817 //   bp = bread\(...\)) show
0 432 moveto (4818 //   modify bp->data[]) show
0 420 moveto (4819 //   log_write\(bp\)) show
0 408 moveto (4820 //   brelse\(bp\)) show
0 396 moveto (4821 void) show
0 384 moveto (4822 log_write\(struct buf *b\)) show
0 372 moveto (4823 {) show
0 360 moveto (4824   int i;) show
0 348 moveto (4825 ) show
0 336 moveto (4826   if \(log.lh.n >= LOGSIZE || log.lh.n >= log.size - 1\)) show
0 324 moveto (4827     panic\("too big a transaction"\);) show
0 312 moveto (4828   if \(log.outstanding < 1\)) show
0 300 moveto (4829     panic\("log_write outside of trans"\);) show
0 288 moveto (4830 ) show
0 276 moveto (4831   acquire\(&log.lock\);) show
0 264 moveto (4832   for \(i = 0; i < log.lh.n; i++\) {) show
0 252 moveto (4833     if \(log.lh.block[i] == b->blockno\)   // log absorbtion) show
0 240 moveto (4834       break;) show
0 228 moveto (4835   }) show
0 216 moveto (4836   log.lh.block[i] = b->blockno;) show
0 204 moveto (4837   if \(i == log.lh.n\)) show
0 192 moveto (4838     log.lh.n++;) show
0 180 moveto (4839   b->flags |= B_DIRTY; // prevent eviction) show
0 168 moveto (4840   release\(&log.lock\);) show
0 156 moveto (4841 }) show
0 144 moveto (4842 ) show
0 132 moveto (4843 ) show
0 120 moveto (4844 ) show
0 108 moveto (4845 ) show
0 96 moveto (4846 ) show
0 84 moveto (4847 ) show
0 72 moveto (4848 ) show
0 60 moveto (4849 ) show
0 24 moveto (Sheet 48) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 1) show
0 648 moveto (4850 // File system implementation.  Five layers:) show
0 636 moveto (4851 //   + Blocks: allocator for raw disk blocks.) show
0 624 moveto (4852 //   + Log: crash recovery for multi-step updates.) show
0 612 moveto (4853 //   + Files: inode allocator, reading, writing, metadata.) show
0 600 moveto (4854 //   + Directories: inode with special contents \(list of other inodes!\)) show
0 588 moveto (4855 //   + Names: paths like /usr/rtm/xv6/fs.c for convenient naming.) show
0 576 moveto (4856 //) show
0 564 moveto (4857 // This file contains the low-level file system manipulation) show
0 552 moveto (4858 // routines.  The \(higher-level\) system call implementations) show
0 540 moveto (4859 // are in sysfile.c.) show
0 528 moveto (4860 ) show
0 516 moveto (4861 #include "types.h") show
0 504 moveto (4862 #include "defs.h") show
0 492 moveto (4863 #include "param.h") show
0 480 moveto (4864 #include "stat.h") show
0 468 moveto (4865 #include "mmu.h") show
0 456 moveto (4866 #include "proc.h") show
0 444 moveto (4867 #include "spinlock.h") show
0 432 moveto (4868 #include "fs.h") show
0 420 moveto (4869 #include "buf.h") show
0 408 moveto (4870 #include "file.h") show
0 396 moveto (4871 ) show
0 384 moveto (4872 #define min\(a, b\) \(\(a\) < \(b\) ? \(a\) : \(b\)\)) show
0 372 moveto (4873 static void itrunc\(struct inode*\);) show
0 360 moveto (4874 struct superblock sb;   // there should be one per dev, but we run with one dev) show
0 348 moveto (4875 ) show
0 336 moveto (4876 // Read the super block.) show
0 324 moveto (4877 void) show
0 312 moveto (4878 readsb\(int dev, struct superblock *sb\)) show
0 300 moveto (4879 {) show
0 288 moveto (4880   struct buf *bp;) show
0 276 moveto (4881 ) show
0 264 moveto (4882   bp = bread\(dev, 1\);) show
0 252 moveto (4883   memmove\(sb, bp->data, sizeof\(*sb\)\);) show
0 240 moveto (4884   brelse\(bp\);) show
0 228 moveto (4885 }) show
0 216 moveto (4886 ) show
0 204 moveto (4887 // Zero a block.) show
0 192 moveto (4888 static void) show
0 180 moveto (4889 bzero\(int dev, int bno\)) show
0 168 moveto (4890 {) show
0 156 moveto (4891   struct buf *bp;) show
0 144 moveto (4892 ) show
0 132 moveto (4893   bp = bread\(dev, bno\);) show
0 120 moveto (4894   memset\(bp->data, 0, BSIZE\);) show
0 108 moveto (4895   log_write\(bp\);) show
0 96 moveto (4896   brelse\(bp\);) show
0 84 moveto (4897 }) show
0 72 moveto (4898 ) show
0 60 moveto (4899 ) show
0 24 moveto (Sheet 48) show
grestore
restore
showpage
%%Page: 57 57
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 2) show
0 648 moveto (4900 // Blocks.) show
0 636 moveto (4901 ) show
0 624 moveto (4902 // Allocate a zeroed disk block.) show
0 612 moveto (4903 static uint) show
0 600 moveto (4904 balloc\(uint dev\)) show
0 588 moveto (4905 {) show
0 576 moveto (4906   int b, bi, m;) show
0 564 moveto (4907   struct buf *bp;) show
0 552 moveto (4908 ) show
0 540 moveto (4909   bp = 0;) show
0 528 moveto (4910   for\(b = 0; b < sb.size; b += BPB\){) show
0 516 moveto (4911     bp = bread\(dev, BBLOCK\(b, sb\)\);) show
0 504 moveto (4912     for\(bi = 0; bi < BPB && b + bi < sb.size; bi++\){) show
0 492 moveto (4913       m = 1 << \(bi % 8\);) show
0 480 moveto (4914       if\(\(bp->data[bi/8] & m\) == 0\){  // Is block free?) show
0 468 moveto (4915         bp->data[bi/8] |= m;  // Mark block in use.) show
0 456 moveto (4916         log_write\(bp\);) show
0 444 moveto (4917         brelse\(bp\);) show
0 432 moveto (4918         bzero\(dev, b + bi\);) show
0 420 moveto (4919         return b + bi;) show
0 408 moveto (4920       }) show
0 396 moveto (4921     }) show
0 384 moveto (4922     brelse\(bp\);) show
0 372 moveto (4923   }) show
0 360 moveto (4924   panic\("balloc: out of blocks"\);) show
0 348 moveto (4925 }) show
0 336 moveto (4926 ) show
0 324 moveto (4927 // Free a disk block.) show
0 312 moveto (4928 static void) show
0 300 moveto (4929 bfree\(int dev, uint b\)) show
0 288 moveto (4930 {) show
0 276 moveto (4931   struct buf *bp;) show
0 264 moveto (4932   int bi, m;) show
0 252 moveto (4933 ) show
0 240 moveto (4934   readsb\(dev, &sb\);) show
0 228 moveto (4935   bp = bread\(dev, BBLOCK\(b, sb\)\);) show
0 216 moveto (4936   bi = b % BPB;) show
0 204 moveto (4937   m = 1 << \(bi % 8\);) show
0 192 moveto (4938   if\(\(bp->data[bi/8] & m\) == 0\)) show
0 180 moveto (4939     panic\("freeing free block"\);) show
0 168 moveto (4940   bp->data[bi/8] &= ~m;) show
0 156 moveto (4941   log_write\(bp\);) show
0 144 moveto (4942   brelse\(bp\);) show
0 132 moveto (4943 }) show
0 120 moveto (4944 ) show
0 108 moveto (4945 ) show
0 96 moveto (4946 ) show
0 84 moveto (4947 ) show
0 72 moveto (4948 ) show
0 60 moveto (4949 ) show
0 24 moveto (Sheet 49) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 3) show
0 648 moveto (4950 // Inodes.) show
0 636 moveto (4951 //) show
0 624 moveto (4952 // An inode describes a single unnamed file.) show
0 612 moveto (4953 // The inode disk structure holds metadata: the file's type,) show
0 600 moveto (4954 // its size, the number of links referring to it, and the) show
0 588 moveto (4955 // list of blocks holding the file's content.) show
0 576 moveto (4956 //) show
0 564 moveto (4957 // The inodes are laid out sequentially on disk at) show
0 552 moveto (4958 // sb.startinode. Each inode has a number, indicating its) show
0 540 moveto (4959 // position on the disk.) show
0 528 moveto (4960 //) show
0 516 moveto (4961 // The kernel keeps a cache of in-use inodes in memory) show
0 504 moveto (4962 // to provide a place for synchronizing access) show
0 492 moveto (4963 // to inodes used by multiple processes. The cached) show
0 480 moveto (4964 // inodes include book-keeping information that is) show
0 468 moveto (4965 // not stored on disk: ip->ref and ip->flags.) show
0 456 moveto (4966 //) show
0 444 moveto (4967 // An inode and its in-memory represtative go through a) show
0 432 moveto (4968 // sequence of states before they can be used by the) show
0 420 moveto (4969 // rest of the file system code.) show
0 408 moveto (4970 //) show
0 396 moveto (4971 // * Allocation: an inode is allocated if its type \(on disk\)) show
0 384 moveto (4972 //   is non-zero. ialloc\(\) allocates, iput\(\) frees if) show
0 372 moveto (4973 //   the link count has fallen to zero.) show
0 360 moveto (4974 //) show
0 348 moveto (4975 // * Referencing in cache: an entry in the inode cache) show
0 336 moveto (4976 //   is free if ip->ref is zero. Otherwise ip->ref tracks) show
0 324 moveto (4977 //   the number of in-memory pointers to the entry \(open) show
0 312 moveto (4978 //   files and current directories\). iget\(\) to find or) show
0 300 moveto (4979 //   create a cache entry and increment its ref, iput\(\)) show
0 288 moveto (4980 //   to decrement ref.) show
0 276 moveto (4981 //) show
0 264 moveto (4982 // * Valid: the information \(type, size, &c\) in an inode) show
0 252 moveto (4983 //   cache entry is only correct when the I_VALID bit) show
0 240 moveto (4984 //   is set in ip->flags. ilock\(\) reads the inode from) show
0 228 moveto (4985 //   the disk and sets I_VALID, while iput\(\) clears) show
0 216 moveto (4986 //   I_VALID if ip->ref has fallen to zero.) show
0 204 moveto (4987 //) show
0 192 moveto (4988 // * Locked: file system code may only examine and modify) show
0 180 moveto (4989 //   the information in an inode and its content if it) show
0 168 moveto (4990 //   has first locked the inode. The I_BUSY flag indicates) show
0 156 moveto (4991 //   that the inode is locked. ilock\(\) sets I_BUSY,) show
0 144 moveto (4992 //   while iunlock clears it.) show
0 132 moveto (4993 //) show
0 120 moveto (4994 // Thus a typical sequence is:) show
0 108 moveto (4995 //   ip = iget\(dev, inum\)) show
0 96 moveto (4996 //   ilock\(ip\)) show
0 84 moveto (4997 //   ... examine and modify ip->xxx ...) show
0 72 moveto (4998 //   iunlock\(ip\)) show
0 60 moveto (4999 //   iput\(ip\)) show
0 24 moveto (Sheet 49) show
grestore
restore
showpage
%%Page: 58 58
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 4) show
0 648 moveto (5000 //) show
0 636 moveto (5001 // ilock\(\) is separate from iget\(\) so that system calls can) show
0 624 moveto (5002 // get a long-term reference to an inode \(as for an open file\)) show
0 612 moveto (5003 // and only lock it for short periods \(e.g., in read\(\)\).) show
0 600 moveto (5004 // The separation also helps avoid deadlock and races during) show
0 588 moveto (5005 // pathname lookup. iget\(\) increments ip->ref so that the inode) show
0 576 moveto (5006 // stays cached and pointers to it remain valid.) show
0 564 moveto (5007 //) show
0 552 moveto (5008 // Many internal file system functions expect the caller to) show
0 540 moveto (5009 // have locked the inodes involved; this lets callers create) show
0 528 moveto (5010 // multi-step atomic operations.) show
0 516 moveto (5011 ) show
0 504 moveto (5012 struct {) show
0 492 moveto (5013   struct spinlock lock;) show
0 480 moveto (5014   struct inode inode[NINODE];) show
0 468 moveto (5015 } icache;) show
0 456 moveto (5016 ) show
0 444 moveto (5017 void) show
0 432 moveto (5018 iinit\(int dev\)) show
0 420 moveto (5019 {) show
0 408 moveto (5020   initlock\(&icache.lock, "icache"\);) show
0 396 moveto (5021   readsb\(dev, &sb\);) show
0 384 moveto (5022   cprintf\("sb: size %d nblocks %d ninodes %d nlog %d logstart %d inodestart %d bmap start %d\\n", sb.size,) show
0 372 moveto (5023           sb.nblocks, sb.ninodes, sb.nlog, sb.logstart, sb.inodestart, sb.bmapstart\);) show
0 360 moveto (5024 }) show
0 348 moveto (5025 ) show
0 336 moveto (5026 static struct inode* iget\(uint dev, uint inum\);) show
0 324 moveto (5027 ) show
0 312 moveto (5028 // Allocate a new inode with the given type on device dev.) show
0 300 moveto (5029 // A free inode has a type of zero.) show
0 288 moveto (5030 struct inode*) show
0 276 moveto (5031 ialloc\(uint dev, short type\)) show
0 264 moveto (5032 {) show
0 252 moveto (5033   int inum;) show
0 240 moveto (5034   struct buf *bp;) show
0 228 moveto (5035   struct dinode *dip;) show
0 216 moveto (5036 ) show
0 204 moveto (5037   for\(inum = 1; inum < sb.ninodes; inum++\){) show
0 192 moveto (5038     bp = bread\(dev, IBLOCK\(inum, sb\)\);) show
0 180 moveto (5039     dip = \(struct dinode*\)bp->data + inum%IPB;) show
0 168 moveto (5040     if\(dip->type == 0\){  // a free inode) show
0 156 moveto (5041       memset\(dip, 0, sizeof\(*dip\)\);) show
0 144 moveto (5042       dip->type = type;) show
0 132 moveto (5043       log_write\(bp\);   // mark it allocated on the disk) show
0 120 moveto (5044       brelse\(bp\);) show
0 108 moveto (5045       return iget\(dev, inum\);) show
0 96 moveto (5046     }) show
0 84 moveto (5047     brelse\(bp\);) show
0 72 moveto (5048   }) show
0 60 moveto (5049   panic\("ialloc: no inodes"\);) show
0 24 moveto (Sheet 50) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 5) show
0 648 moveto (5050 }) show
0 636 moveto (5051 ) show
0 624 moveto (5052 // Copy a modified in-memory inode to disk.) show
0 612 moveto (5053 void) show
0 600 moveto (5054 iupdate\(struct inode *ip\)) show
0 588 moveto (5055 {) show
0 576 moveto (5056   struct buf *bp;) show
0 564 moveto (5057   struct dinode *dip;) show
0 552 moveto (5058 ) show
0 540 moveto (5059   bp = bread\(ip->dev, IBLOCK\(ip->inum, sb\)\);) show
0 528 moveto (5060   dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 516 moveto (5061   dip->type = ip->type;) show
0 504 moveto (5062   dip->major = ip->major;) show
0 492 moveto (5063   dip->minor = ip->minor;) show
0 480 moveto (5064   dip->nlink = ip->nlink;) show
0 468 moveto (5065   dip->size = ip->size;) show
0 456 moveto (5066   memmove\(dip->addrs, ip->addrs, sizeof\(ip->addrs\)\);) show
0 444 moveto (5067   log_write\(bp\);) show
0 432 moveto (5068   brelse\(bp\);) show
0 420 moveto (5069 }) show
0 408 moveto (5070 ) show
0 396 moveto (5071 // Find the inode with number inum on device dev) show
0 384 moveto (5072 // and return the in-memory copy. Does not lock) show
0 372 moveto (5073 // the inode and does not read it from disk.) show
0 360 moveto (5074 static struct inode*) show
0 348 moveto (5075 iget\(uint dev, uint inum\)) show
0 336 moveto (5076 {) show
0 324 moveto (5077   struct inode *ip, *empty;) show
0 312 moveto (5078 ) show
0 300 moveto (5079   acquire\(&icache.lock\);) show
0 288 moveto (5080 ) show
0 276 moveto (5081   // Is the inode already cached?) show
0 264 moveto (5082   empty = 0;) show
0 252 moveto (5083   for\(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++\){) show
0 240 moveto (5084     if\(ip->ref > 0 && ip->dev == dev && ip->inum == inum\){) show
0 228 moveto (5085       ip->ref++;) show
0 216 moveto (5086       release\(&icache.lock\);) show
0 204 moveto (5087       return ip;) show
0 192 moveto (5088     }) show
0 180 moveto (5089     if\(empty == 0 && ip->ref == 0\)    // Remember empty slot.) show
0 168 moveto (5090       empty = ip;) show
0 156 moveto (5091   }) show
0 144 moveto (5092 ) show
0 132 moveto (5093   // Recycle an inode cache entry.) show
0 120 moveto (5094   if\(empty == 0\)) show
0 108 moveto (5095     panic\("iget: no inodes"\);) show
0 96 moveto (5096 ) show
0 84 moveto (5097 ) show
0 72 moveto (5098 ) show
0 60 moveto (5099 ) show
0 24 moveto (Sheet 50) show
grestore
restore
showpage
%%Page: 59 59
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 6) show
0 648 moveto (5100   ip = empty;) show
0 636 moveto (5101   ip->dev = dev;) show
0 624 moveto (5102   ip->inum = inum;) show
0 612 moveto (5103   ip->ref = 1;) show
0 600 moveto (5104   ip->flags = 0;) show
0 588 moveto (5105   release\(&icache.lock\);) show
0 576 moveto (5106 ) show
0 564 moveto (5107   return ip;) show
0 552 moveto (5108 }) show
0 540 moveto (5109 ) show
0 528 moveto (5110 // Increment reference count for ip.) show
0 516 moveto (5111 // Returns ip to enable ip = idup\(ip1\) idiom.) show
0 504 moveto (5112 struct inode*) show
0 492 moveto (5113 idup\(struct inode *ip\)) show
0 480 moveto (5114 {) show
0 468 moveto (5115   acquire\(&icache.lock\);) show
0 456 moveto (5116   ip->ref++;) show
0 444 moveto (5117   release\(&icache.lock\);) show
0 432 moveto (5118   return ip;) show
0 420 moveto (5119 }) show
0 408 moveto (5120 ) show
0 396 moveto (5121 // Lock the given inode.) show
0 384 moveto (5122 // Reads the inode from disk if necessary.) show
0 372 moveto (5123 void) show
0 360 moveto (5124 ilock\(struct inode *ip\)) show
0 348 moveto (5125 {) show
0 336 moveto (5126   struct buf *bp;) show
0 324 moveto (5127   struct dinode *dip;) show
0 312 moveto (5128 ) show
0 300 moveto (5129   if\(ip == 0 || ip->ref < 1\)) show
0 288 moveto (5130     panic\("ilock"\);) show
0 276 moveto (5131 ) show
0 264 moveto (5132   acquire\(&icache.lock\);) show
0 252 moveto (5133   while\(ip->flags & I_BUSY\)) show
0 240 moveto (5134     sleep\(ip, &icache.lock\);) show
0 228 moveto (5135   ip->flags |= I_BUSY;) show
0 216 moveto (5136   release\(&icache.lock\);) show
0 204 moveto (5137 ) show
0 192 moveto (5138   if\(!\(ip->flags & I_VALID\)\){) show
0 180 moveto (5139     bp = bread\(ip->dev, IBLOCK\(ip->inum, sb\)\);) show
0 168 moveto (5140     dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 156 moveto (5141     ip->type = dip->type;) show
0 144 moveto (5142     ip->major = dip->major;) show
0 132 moveto (5143     ip->minor = dip->minor;) show
0 120 moveto (5144     ip->nlink = dip->nlink;) show
0 108 moveto (5145     ip->size = dip->size;) show
0 96 moveto (5146     memmove\(ip->addrs, dip->addrs, sizeof\(ip->addrs\)\);) show
0 84 moveto (5147     brelse\(bp\);) show
0 72 moveto (5148     ip->flags |= I_VALID;) show
0 60 moveto (5149     if\(ip->type == 0\)) show
0 24 moveto (Sheet 51) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 7) show
0 648 moveto (5150       panic\("ilock: no type"\);) show
0 636 moveto (5151   }) show
0 624 moveto (5152 }) show
0 612 moveto (5153 ) show
0 600 moveto (5154 // Unlock the given inode.) show
0 588 moveto (5155 void) show
0 576 moveto (5156 iunlock\(struct inode *ip\)) show
0 564 moveto (5157 {) show
0 552 moveto (5158   if\(ip == 0 || !\(ip->flags & I_BUSY\) || ip->ref < 1\)) show
0 540 moveto (5159     panic\("iunlock"\);) show
0 528 moveto (5160 ) show
0 516 moveto (5161   acquire\(&icache.lock\);) show
0 504 moveto (5162   ip->flags &= ~I_BUSY;) show
0 492 moveto (5163   wakeup\(ip\);) show
0 480 moveto (5164   release\(&icache.lock\);) show
0 468 moveto (5165 }) show
0 456 moveto (5166 ) show
0 444 moveto (5167 // Drop a reference to an in-memory inode.) show
0 432 moveto (5168 // If that was the last reference, the inode cache entry can) show
0 420 moveto (5169 // be recycled.) show
0 408 moveto (5170 // If that was the last reference and the inode has no links) show
0 396 moveto (5171 // to it, free the inode \(and its content\) on disk.) show
0 384 moveto (5172 // All calls to iput\(\) must be inside a transaction in) show
0 372 moveto (5173 // case it has to free the inode.) show
0 360 moveto (5174 void) show
0 348 moveto (5175 iput\(struct inode *ip\)) show
0 336 moveto (5176 {) show
0 324 moveto (5177   acquire\(&icache.lock\);) show
0 312 moveto (5178   if\(ip->ref == 1 && \(ip->flags & I_VALID\) && ip->nlink == 0\){) show
0 300 moveto (5179     // inode has no links and no other references: truncate and free.) show
0 288 moveto (5180     if\(ip->flags & I_BUSY\)) show
0 276 moveto (5181       panic\("iput busy"\);) show
0 264 moveto (5182     ip->flags |= I_BUSY;) show
0 252 moveto (5183     release\(&icache.lock\);) show
0 240 moveto (5184     itrunc\(ip\);) show
0 228 moveto (5185     ip->type = 0;) show
0 216 moveto (5186     iupdate\(ip\);) show
0 204 moveto (5187     acquire\(&icache.lock\);) show
0 192 moveto (5188     ip->flags = 0;) show
0 180 moveto (5189     wakeup\(ip\);) show
0 168 moveto (5190   }) show
0 156 moveto (5191   ip->ref--;) show
0 144 moveto (5192   release\(&icache.lock\);) show
0 132 moveto (5193 }) show
0 120 moveto (5194 ) show
0 108 moveto (5195 ) show
0 96 moveto (5196 ) show
0 84 moveto (5197 ) show
0 72 moveto (5198 ) show
0 60 moveto (5199 ) show
0 24 moveto (Sheet 51) show
grestore
restore
showpage
%%Page: 60 60
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 8) show
0 648 moveto (5200 // Common idiom: unlock, then put.) show
0 636 moveto (5201 void) show
0 624 moveto (5202 iunlockput\(struct inode *ip\)) show
0 612 moveto (5203 {) show
0 600 moveto (5204   iunlock\(ip\);) show
0 588 moveto (5205   iput\(ip\);) show
0 576 moveto (5206 }) show
0 564 moveto (5207 ) show
0 552 moveto (5208 // Inode content) show
0 540 moveto (5209 //) show
0 528 moveto (5210 // The content \(data\) associated with each inode is stored) show
0 516 moveto (5211 // in blocks on the disk. The first NDIRECT block numbers) show
0 504 moveto (5212 // are listed in ip->addrs[].  The next NINDIRECT blocks are) show
0 492 moveto (5213 // listed in block ip->addrs[NDIRECT].) show
0 480 moveto (5214 ) show
0 468 moveto (5215 // Return the disk block address of the nth block in inode ip.) show
0 456 moveto (5216 // If there is no such block, bmap allocates one.) show
0 444 moveto (5217 static uint) show
0 432 moveto (5218 bmap\(struct inode *ip, uint bn\)) show
0 420 moveto (5219 {) show
0 408 moveto (5220   uint addr, *a;) show
0 396 moveto (5221   struct buf *bp;) show
0 384 moveto (5222 ) show
0 372 moveto (5223   if\(bn < NDIRECT\){) show
0 360 moveto (5224     if\(\(addr = ip->addrs[bn]\) == 0\)) show
0 348 moveto (5225       ip->addrs[bn] = addr = balloc\(ip->dev\);) show
0 336 moveto (5226     return addr;) show
0 324 moveto (5227   }) show
0 312 moveto (5228   bn -= NDIRECT;) show
0 300 moveto (5229 ) show
0 288 moveto (5230   if\(bn < NINDIRECT\){) show
0 276 moveto (5231     // Load indirect block, allocating if necessary.) show
0 264 moveto (5232     if\(\(addr = ip->addrs[NDIRECT]\) == 0\)) show
0 252 moveto (5233       ip->addrs[NDIRECT] = addr = balloc\(ip->dev\);) show
0 240 moveto (5234     bp = bread\(ip->dev, addr\);) show
0 228 moveto (5235     a = \(uint*\)bp->data;) show
0 216 moveto (5236     if\(\(addr = a[bn]\) == 0\){) show
0 204 moveto (5237       a[bn] = addr = balloc\(ip->dev\);) show
0 192 moveto (5238       log_write\(bp\);) show
0 180 moveto (5239     }) show
0 168 moveto (5240     brelse\(bp\);) show
0 156 moveto (5241     return addr;) show
0 144 moveto (5242   }) show
0 132 moveto (5243 ) show
0 120 moveto (5244   panic\("bmap: out of range"\);) show
0 108 moveto (5245 }) show
0 96 moveto (5246 ) show
0 84 moveto (5247 ) show
0 72 moveto (5248 ) show
0 60 moveto (5249 ) show
0 24 moveto (Sheet 52) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 9) show
0 648 moveto (5250 // Truncate inode \(discard contents\).) show
0 636 moveto (5251 // Only called when the inode has no links) show
0 624 moveto (5252 // to it \(no directory entries referring to it\)) show
0 612 moveto (5253 // and has no in-memory reference to it \(is) show
0 600 moveto (5254 // not an open file or current directory\).) show
0 588 moveto (5255 static void) show
0 576 moveto (5256 itrunc\(struct inode *ip\)) show
0 564 moveto (5257 {) show
0 552 moveto (5258   int i, j;) show
0 540 moveto (5259   struct buf *bp;) show
0 528 moveto (5260   uint *a;) show
0 516 moveto (5261 ) show
0 504 moveto (5262   for\(i = 0; i < NDIRECT; i++\){) show
0 492 moveto (5263     if\(ip->addrs[i]\){) show
0 480 moveto (5264       bfree\(ip->dev, ip->addrs[i]\);) show
0 468 moveto (5265       ip->addrs[i] = 0;) show
0 456 moveto (5266     }) show
0 444 moveto (5267   }) show
0 432 moveto (5268 ) show
0 420 moveto (5269   if\(ip->addrs[NDIRECT]\){) show
0 408 moveto (5270     bp = bread\(ip->dev, ip->addrs[NDIRECT]\);) show
0 396 moveto (5271     a = \(uint*\)bp->data;) show
0 384 moveto (5272     for\(j = 0; j < NINDIRECT; j++\){) show
0 372 moveto (5273       if\(a[j]\)) show
0 360 moveto (5274         bfree\(ip->dev, a[j]\);) show
0 348 moveto (5275     }) show
0 336 moveto (5276     brelse\(bp\);) show
0 324 moveto (5277     bfree\(ip->dev, ip->addrs[NDIRECT]\);) show
0 312 moveto (5278     ip->addrs[NDIRECT] = 0;) show
0 300 moveto (5279   }) show
0 288 moveto (5280 ) show
0 276 moveto (5281   ip->size = 0;) show
0 264 moveto (5282   iupdate\(ip\);) show
0 252 moveto (5283 }) show
0 240 moveto (5284 ) show
0 228 moveto (5285 // Copy stat information from inode.) show
0 216 moveto (5286 void) show
0 204 moveto (5287 stati\(struct inode *ip, struct stat *st\)) show
0 192 moveto (5288 {) show
0 180 moveto (5289   st->dev = ip->dev;) show
0 168 moveto (5290   st->ino = ip->inum;) show
0 156 moveto (5291   st->type = ip->type;) show
0 144 moveto (5292   st->nlink = ip->nlink;) show
0 132 moveto (5293   st->size = ip->size;) show
0 120 moveto (5294 }) show
0 108 moveto (5295 ) show
0 96 moveto (5296 ) show
0 84 moveto (5297 ) show
0 72 moveto (5298 ) show
0 60 moveto (5299 ) show
0 24 moveto (Sheet 52) show
grestore
restore
showpage
%%Page: 61 61
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 10) show
0 648 moveto (5300 // Read data from inode.) show
0 636 moveto (5301 int) show
0 624 moveto (5302 readi\(struct inode *ip, char *dst, uint off, uint n\)) show
0 612 moveto (5303 {) show
0 600 moveto (5304   uint tot, m;) show
0 588 moveto (5305   struct buf *bp;) show
0 576 moveto (5306 ) show
0 564 moveto (5307   if\(ip->type == T_DEV\){) show
0 552 moveto (5308     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read\)) show
0 540 moveto (5309       return -1;) show
0 528 moveto (5310     return devsw[ip->major].read\(ip, dst, n\);) show
0 516 moveto (5311   }) show
0 504 moveto (5312 ) show
0 492 moveto (5313   if\(off > ip->size || off + n < off\)) show
0 480 moveto (5314     return -1;) show
0 468 moveto (5315   if\(off + n > ip->size\)) show
0 456 moveto (5316     n = ip->size - off;) show
0 444 moveto (5317 ) show
0 432 moveto (5318   for\(tot=0; tot<n; tot+=m, off+=m, dst+=m\){) show
0 420 moveto (5319     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 408 moveto (5320     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 396 moveto (5321     memmove\(dst, bp->data + off%BSIZE, m\);) show
0 384 moveto (5322     brelse\(bp\);) show
0 372 moveto (5323   }) show
0 360 moveto (5324   return n;) show
0 348 moveto (5325 }) show
0 336 moveto (5326 ) show
0 324 moveto (5327 // Write data to inode.) show
0 312 moveto (5328 int) show
0 300 moveto (5329 writei\(struct inode *ip, char *src, uint off, uint n\)) show
0 288 moveto (5330 {) show
0 276 moveto (5331   uint tot, m;) show
0 264 moveto (5332   struct buf *bp;) show
0 252 moveto (5333 ) show
0 240 moveto (5334   if\(ip->type == T_DEV\){) show
0 228 moveto (5335     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write\)) show
0 216 moveto (5336       return -1;) show
0 204 moveto (5337     return devsw[ip->major].write\(ip, src, n\);) show
0 192 moveto (5338   }) show
0 180 moveto (5339 ) show
0 168 moveto (5340   if\(off > ip->size || off + n < off\)) show
0 156 moveto (5341     return -1;) show
0 144 moveto (5342   if\(off + n > MAXFILE*BSIZE\)) show
0 132 moveto (5343     return -1;) show
0 120 moveto (5344 ) show
0 108 moveto (5345   for\(tot=0; tot<n; tot+=m, off+=m, src+=m\){) show
0 96 moveto (5346     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 84 moveto (5347     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 72 moveto (5348     memmove\(bp->data + off%BSIZE, src, m\);) show
0 60 moveto (5349     log_write\(bp\);) show
0 24 moveto (Sheet 53) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 11) show
0 648 moveto (5350     brelse\(bp\);) show
0 636 moveto (5351   }) show
0 624 moveto (5352 ) show
0 612 moveto (5353   if\(n > 0 && off > ip->size\){) show
0 600 moveto (5354     ip->size = off;) show
0 588 moveto (5355     iupdate\(ip\);) show
0 576 moveto (5356   }) show
0 564 moveto (5357   return n;) show
0 552 moveto (5358 }) show
0 540 moveto (5359 ) show
0 528 moveto (5360 // Directories) show
0 516 moveto (5361 ) show
0 504 moveto (5362 int) show
0 492 moveto (5363 namecmp\(const char *s, const char *t\)) show
0 480 moveto (5364 {) show
0 468 moveto (5365   return strncmp\(s, t, DIRSIZ\);) show
0 456 moveto (5366 }) show
0 444 moveto (5367 ) show
0 432 moveto (5368 // Look for a directory entry in a directory.) show
0 420 moveto (5369 // If found, set *poff to byte offset of entry.) show
0 408 moveto (5370 struct inode*) show
0 396 moveto (5371 dirlookup\(struct inode *dp, char *name, uint *poff\)) show
0 384 moveto (5372 {) show
0 372 moveto (5373   uint off, inum;) show
0 360 moveto (5374   struct dirent de;) show
0 348 moveto (5375 ) show
0 336 moveto (5376   if\(dp->type != T_DIR\)) show
0 324 moveto (5377     panic\("dirlookup not DIR"\);) show
0 312 moveto (5378 ) show
0 300 moveto (5379   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 288 moveto (5380     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 276 moveto (5381       panic\("dirlink read"\);) show
0 264 moveto (5382     if\(de.inum == 0\)) show
0 252 moveto (5383       continue;) show
0 240 moveto (5384     if\(namecmp\(name, de.name\) == 0\){) show
0 228 moveto (5385       // entry matches path element) show
0 216 moveto (5386       if\(poff\)) show
0 204 moveto (5387         *poff = off;) show
0 192 moveto (5388       inum = de.inum;) show
0 180 moveto (5389       return iget\(dp->dev, inum\);) show
0 168 moveto (5390     }) show
0 156 moveto (5391   }) show
0 144 moveto (5392 ) show
0 132 moveto (5393   return 0;) show
0 120 moveto (5394 }) show
0 108 moveto (5395 ) show
0 96 moveto (5396 ) show
0 84 moveto (5397 ) show
0 72 moveto (5398 ) show
0 60 moveto (5399 ) show
0 24 moveto (Sheet 53) show
grestore
restore
showpage
%%Page: 62 62
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 12) show
0 648 moveto (5400 // Write a new directory entry \(name, inum\) into the directory dp.) show
0 636 moveto (5401 int) show
0 624 moveto (5402 dirlink\(struct inode *dp, char *name, uint inum\)) show
0 612 moveto (5403 {) show
0 600 moveto (5404   int off;) show
0 588 moveto (5405   struct dirent de;) show
0 576 moveto (5406   struct inode *ip;) show
0 564 moveto (5407 ) show
0 552 moveto (5408   // Check that name is not present.) show
0 540 moveto (5409   if\(\(ip = dirlookup\(dp, name, 0\)\) != 0\){) show
0 528 moveto (5410     iput\(ip\);) show
0 516 moveto (5411     return -1;) show
0 504 moveto (5412   }) show
0 492 moveto (5413 ) show
0 480 moveto (5414   // Look for an empty dirent.) show
0 468 moveto (5415   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 456 moveto (5416     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 444 moveto (5417       panic\("dirlink read"\);) show
0 432 moveto (5418     if\(de.inum == 0\)) show
0 420 moveto (5419       break;) show
0 408 moveto (5420   }) show
0 396 moveto (5421 ) show
0 384 moveto (5422   strncpy\(de.name, name, DIRSIZ\);) show
0 372 moveto (5423   de.inum = inum;) show
0 360 moveto (5424   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 348 moveto (5425     panic\("dirlink"\);) show
0 336 moveto (5426 ) show
0 324 moveto (5427   return 0;) show
0 312 moveto (5428 }) show
0 300 moveto (5429 ) show
0 288 moveto (5430 // Paths) show
0 276 moveto (5431 ) show
0 264 moveto (5432 // Copy the next path element from path into name.) show
0 252 moveto (5433 // Return a pointer to the element following the copied one.) show
0 240 moveto (5434 // The returned path has no leading slashes,) show
0 228 moveto (5435 // so the caller can check *path=='\\0' to see if the name is the last one.) show
0 216 moveto (5436 // If no name to remove, return 0.) show
0 204 moveto (5437 //) show
0 192 moveto (5438 // Examples:) show
0 180 moveto (5439 //   skipelem\("a/bb/c", name\) = "bb/c", setting name = "a") show
0 168 moveto (5440 //   skipelem\("///a//bb", name\) = "bb", setting name = "a") show
0 156 moveto (5441 //   skipelem\("a", name\) = "", setting name = "a") show
0 144 moveto (5442 //   skipelem\("", name\) = skipelem\("////", name\) = 0) show
0 132 moveto (5443 //) show
0 120 moveto (5444 static char*) show
0 108 moveto (5445 skipelem\(char *path, char *name\)) show
0 96 moveto (5446 {) show
0 84 moveto (5447   char *s;) show
0 72 moveto (5448   int len;) show
0 60 moveto (5449 ) show
0 24 moveto (Sheet 54) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 13) show
0 648 moveto (5450   while\(*path == '/'\)) show
0 636 moveto (5451     path++;) show
0 624 moveto (5452   if\(*path == 0\)) show
0 612 moveto (5453     return 0;) show
0 600 moveto (5454   s = path;) show
0 588 moveto (5455   while\(*path != '/' && *path != 0\)) show
0 576 moveto (5456     path++;) show
0 564 moveto (5457   len = path - s;) show
0 552 moveto (5458   if\(len >= DIRSIZ\)) show
0 540 moveto (5459     memmove\(name, s, DIRSIZ\);) show
0 528 moveto (5460   else {) show
0 516 moveto (5461     memmove\(name, s, len\);) show
0 504 moveto (5462     name[len] = 0;) show
0 492 moveto (5463   }) show
0 480 moveto (5464   while\(*path == '/'\)) show
0 468 moveto (5465     path++;) show
0 456 moveto (5466   return path;) show
0 444 moveto (5467 }) show
0 432 moveto (5468 ) show
0 420 moveto (5469 // Look up and return the inode for a path name.) show
0 408 moveto (5470 // If parent != 0, return the inode for the parent and copy the final) show
0 396 moveto (5471 // path element into name, which must have room for DIRSIZ bytes.) show
0 384 moveto (5472 // Must be called inside a transaction since it calls iput\(\).) show
0 372 moveto (5473 static struct inode*) show
0 360 moveto (5474 namex\(char *path, int nameiparent, char *name\)) show
0 348 moveto (5475 {) show
0 336 moveto (5476   struct inode *ip, *next;) show
0 324 moveto (5477 ) show
0 312 moveto (5478   if\(*path == '/'\)) show
0 300 moveto (5479     ip = iget\(ROOTDEV, ROOTINO\);) show
0 288 moveto (5480   else) show
0 276 moveto (5481     ip = idup\(proc->cwd\);) show
0 264 moveto (5482 ) show
0 252 moveto (5483   while\(\(path = skipelem\(path, name\)\) != 0\){) show
0 240 moveto (5484     ilock\(ip\);) show
0 228 moveto (5485     if\(ip->type != T_DIR\){) show
0 216 moveto (5486       iunlockput\(ip\);) show
0 204 moveto (5487       return 0;) show
0 192 moveto (5488     }) show
0 180 moveto (5489     if\(nameiparent && *path == '\\0'\){) show
0 168 moveto (5490       // Stop one level early.) show
0 156 moveto (5491       iunlock\(ip\);) show
0 144 moveto (5492       return ip;) show
0 132 moveto (5493     }) show
0 120 moveto (5494     if\(\(next = dirlookup\(ip, name, 0\)\) == 0\){) show
0 108 moveto (5495       iunlockput\(ip\);) show
0 96 moveto (5496       return 0;) show
0 84 moveto (5497     }) show
0 72 moveto (5498     iunlockput\(ip\);) show
0 60 moveto (5499     ip = next;) show
0 24 moveto (Sheet 54) show
grestore
restore
showpage
%%Page: 63 63
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/fs.c  Page 14) show
0 648 moveto (5500   }) show
0 636 moveto (5501   if\(nameiparent\){) show
0 624 moveto (5502     iput\(ip\);) show
0 612 moveto (5503     return 0;) show
0 600 moveto (5504   }) show
0 588 moveto (5505   return ip;) show
0 576 moveto (5506 }) show
0 564 moveto (5507 ) show
0 552 moveto (5508 struct inode*) show
0 540 moveto (5509 namei\(char *path\)) show
0 528 moveto (5510 {) show
0 516 moveto (5511   char name[DIRSIZ];) show
0 504 moveto (5512   return namex\(path, 0, name\);) show
0 492 moveto (5513 }) show
0 480 moveto (5514 ) show
0 468 moveto (5515 struct inode*) show
0 456 moveto (5516 nameiparent\(char *path, char *name\)) show
0 444 moveto (5517 {) show
0 432 moveto (5518   return namex\(path, 1, name\);) show
0 420 moveto (5519 }) show
0 408 moveto (5520 ) show
0 396 moveto (5521 ) show
0 384 moveto (5522 ) show
0 372 moveto (5523 ) show
0 360 moveto (5524 ) show
0 348 moveto (5525 ) show
0 336 moveto (5526 ) show
0 324 moveto (5527 ) show
0 312 moveto (5528 ) show
0 300 moveto (5529 ) show
0 288 moveto (5530 ) show
0 276 moveto (5531 ) show
0 264 moveto (5532 ) show
0 252 moveto (5533 ) show
0 240 moveto (5534 ) show
0 228 moveto (5535 ) show
0 216 moveto (5536 ) show
0 204 moveto (5537 ) show
0 192 moveto (5538 ) show
0 180 moveto (5539 ) show
0 168 moveto (5540 ) show
0 156 moveto (5541 ) show
0 144 moveto (5542 ) show
0 132 moveto (5543 ) show
0 120 moveto (5544 ) show
0 108 moveto (5545 ) show
0 96 moveto (5546 ) show
0 84 moveto (5547 ) show
0 72 moveto (5548 ) show
0 60 moveto (5549 ) show
0 24 moveto (Sheet 55) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/file.c  Page 1) show
0 648 moveto (5550 //) show
0 636 moveto (5551 // File descriptors) show
0 624 moveto (5552 //) show
0 612 moveto (5553 ) show
0 600 moveto (5554 #include "types.h") show
0 588 moveto (5555 #include "defs.h") show
0 576 moveto (5556 #include "param.h") show
0 564 moveto (5557 #include "fs.h") show
0 552 moveto (5558 #include "file.h") show
0 540 moveto (5559 #include "spinlock.h") show
0 528 moveto (5560 ) show
0 516 moveto (5561 struct devsw devsw[NDEV];) show
0 504 moveto (5562 struct {) show
0 492 moveto (5563   struct spinlock lock;) show
0 480 moveto (5564   struct file file[NFILE];) show
0 468 moveto (5565 } ftable;) show
0 456 moveto (5566 ) show
0 444 moveto (5567 void) show
0 432 moveto (5568 fileinit\(void\)) show
0 420 moveto (5569 {) show
0 408 moveto (5570   initlock\(&ftable.lock, "ftable"\);) show
0 396 moveto (5571 }) show
0 384 moveto (5572 ) show
0 372 moveto (5573 // Allocate a file structure.) show
0 360 moveto (5574 struct file*) show
0 348 moveto (5575 filealloc\(void\)) show
0 336 moveto (5576 {) show
0 324 moveto (5577   struct file *f;) show
0 312 moveto (5578 ) show
0 300 moveto (5579   acquire\(&ftable.lock\);) show
0 288 moveto (5580   for\(f = ftable.file; f < ftable.file + NFILE; f++\){) show
0 276 moveto (5581     if\(f->ref == 0\){) show
0 264 moveto (5582       f->ref = 1;) show
0 252 moveto (5583       release\(&ftable.lock\);) show
0 240 moveto (5584       return f;) show
0 228 moveto (5585     }) show
0 216 moveto (5586   }) show
0 204 moveto (5587   release\(&ftable.lock\);) show
0 192 moveto (5588   return 0;) show
0 180 moveto (5589 }) show
0 168 moveto (5590 ) show
0 156 moveto (5591 ) show
0 144 moveto (5592 ) show
0 132 moveto (5593 ) show
0 120 moveto (5594 ) show
0 108 moveto (5595 ) show
0 96 moveto (5596 ) show
0 84 moveto (5597 ) show
0 72 moveto (5598 ) show
0 60 moveto (5599 ) show
0 24 moveto (Sheet 55) show
grestore
restore
showpage
%%Page: 64 64
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/file.c  Page 2) show
0 648 moveto (5600 // Increment ref count for file f.) show
0 636 moveto (5601 struct file*) show
0 624 moveto (5602 filedup\(struct file *f\)) show
0 612 moveto (5603 {) show
0 600 moveto (5604   acquire\(&ftable.lock\);) show
0 588 moveto (5605   if\(f->ref < 1\)) show
0 576 moveto (5606     panic\("filedup"\);) show
0 564 moveto (5607   f->ref++;) show
0 552 moveto (5608   release\(&ftable.lock\);) show
0 540 moveto (5609   return f;) show
0 528 moveto (5610 }) show
0 516 moveto (5611 ) show
0 504 moveto (5612 // Close file f.  \(Decrement ref count, close when reaches 0.\)) show
0 492 moveto (5613 void) show
0 480 moveto (5614 fileclose\(struct file *f\)) show
0 468 moveto (5615 {) show
0 456 moveto (5616   struct file ff;) show
0 444 moveto (5617 ) show
0 432 moveto (5618   acquire\(&ftable.lock\);) show
0 420 moveto (5619   if\(f->ref < 1\)) show
0 408 moveto (5620     panic\("fileclose"\);) show
0 396 moveto (5621   if\(--f->ref > 0\){) show
0 384 moveto (5622     release\(&ftable.lock\);) show
0 372 moveto (5623     return;) show
0 360 moveto (5624   }) show
0 348 moveto (5625   ff = *f;) show
0 336 moveto (5626   f->ref = 0;) show
0 324 moveto (5627   f->type = FD_NONE;) show
0 312 moveto (5628   release\(&ftable.lock\);) show
0 300 moveto (5629 ) show
0 288 moveto (5630   if\(ff.type == FD_PIPE\)) show
0 276 moveto (5631     pipeclose\(ff.pipe, ff.writable\);) show
0 264 moveto (5632   else if\(ff.type == FD_INODE\){) show
0 252 moveto (5633     begin_op\(\);) show
0 240 moveto (5634     iput\(ff.ip\);) show
0 228 moveto (5635     end_op\(\);) show
0 216 moveto (5636   }) show
0 204 moveto (5637 }) show
0 192 moveto (5638 ) show
0 180 moveto (5639 ) show
0 168 moveto (5640 ) show
0 156 moveto (5641 ) show
0 144 moveto (5642 ) show
0 132 moveto (5643 ) show
0 120 moveto (5644 ) show
0 108 moveto (5645 ) show
0 96 moveto (5646 ) show
0 84 moveto (5647 ) show
0 72 moveto (5648 ) show
0 60 moveto (5649 ) show
0 24 moveto (Sheet 56) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/file.c  Page 3) show
0 648 moveto (5650 // Get metadata about file f.) show
0 636 moveto (5651 int) show
0 624 moveto (5652 filestat\(struct file *f, struct stat *st\)) show
0 612 moveto (5653 {) show
0 600 moveto (5654   if\(f->type == FD_INODE\){) show
0 588 moveto (5655     ilock\(f->ip\);) show
0 576 moveto (5656     stati\(f->ip, st\);) show
0 564 moveto (5657     iunlock\(f->ip\);) show
0 552 moveto (5658     return 0;) show
0 540 moveto (5659   }) show
0 528 moveto (5660   return -1;) show
0 516 moveto (5661 }) show
0 504 moveto (5662 ) show
0 492 moveto (5663 // Read from file f.) show
0 480 moveto (5664 int) show
0 468 moveto (5665 fileread\(struct file *f, char *addr, int n\)) show
0 456 moveto (5666 {) show
0 444 moveto (5667   int r;) show
0 432 moveto (5668 ) show
0 420 moveto (5669   if\(f->readable == 0\)) show
0 408 moveto (5670     return -1;) show
0 396 moveto (5671   if\(f->type == FD_PIPE\)) show
0 384 moveto (5672     return piperead\(f->pipe, addr, n\);) show
0 372 moveto (5673   if\(f->type == FD_INODE\){) show
0 360 moveto (5674     ilock\(f->ip\);) show
0 348 moveto (5675     if\(\(r = readi\(f->ip, addr, f->off, n\)\) > 0\)) show
0 336 moveto (5676       f->off += r;) show
0 324 moveto (5677     iunlock\(f->ip\);) show
0 312 moveto (5678     return r;) show
0 300 moveto (5679   }) show
0 288 moveto (5680   panic\("fileread"\);) show
0 276 moveto (5681 }) show
0 264 moveto (5682 ) show
0 252 moveto (5683 // Write to file f.) show
0 240 moveto (5684 int) show
0 228 moveto (5685 filewrite\(struct file *f, char *addr, int n\)) show
0 216 moveto (5686 {) show
0 204 moveto (5687   int r;) show
0 192 moveto (5688 ) show
0 180 moveto (5689   if\(f->writable == 0\)) show
0 168 moveto (5690     return -1;) show
0 156 moveto (5691   if\(f->type == FD_PIPE\)) show
0 144 moveto (5692     return pipewrite\(f->pipe, addr, n\);) show
0 132 moveto (5693   if\(f->type == FD_INODE\){) show
0 120 moveto (5694     // write a few blocks at a time to avoid exceeding) show
0 108 moveto (5695     // the maximum log transaction size, including) show
0 96 moveto (5696     // i-node, indirect block, allocation blocks,) show
0 84 moveto (5697     // and 2 blocks of slop for non-aligned writes.) show
0 72 moveto (5698     // this really belongs lower down, since writei\(\)) show
0 60 moveto (5699     // might be writing a device like the console.) show
0 24 moveto (Sheet 56) show
grestore
restore
showpage
%%Page: 65 65
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/file.c  Page 4) show
0 648 moveto (5700     int max = \(\(LOGSIZE-1-1-2\) / 2\) * 512;) show
0 636 moveto (5701     int i = 0;) show
0 624 moveto (5702     while\(i < n\){) show
0 612 moveto (5703       int n1 = n - i;) show
0 600 moveto (5704       if\(n1 > max\)) show
0 588 moveto (5705         n1 = max;) show
0 576 moveto (5706 ) show
0 564 moveto (5707       begin_op\(\);) show
0 552 moveto (5708       ilock\(f->ip\);) show
0 540 moveto (5709       if \(\(r = writei\(f->ip, addr + i, f->off, n1\)\) > 0\)) show
0 528 moveto (5710         f->off += r;) show
0 516 moveto (5711       iunlock\(f->ip\);) show
0 504 moveto (5712       end_op\(\);) show
0 492 moveto (5713 ) show
0 480 moveto (5714       if\(r < 0\)) show
0 468 moveto (5715         break;) show
0 456 moveto (5716       if\(r != n1\)) show
0 444 moveto (5717         panic\("short filewrite"\);) show
0 432 moveto (5718       i += r;) show
0 420 moveto (5719     }) show
0 408 moveto (5720     return i == n ? n : -1;) show
0 396 moveto (5721   }) show
0 384 moveto (5722   panic\("filewrite"\);) show
0 372 moveto (5723 }) show
0 360 moveto (5724 ) show
0 348 moveto (5725 ) show
0 336 moveto (5726 ) show
0 324 moveto (5727 ) show
0 312 moveto (5728 ) show
0 300 moveto (5729 ) show
0 288 moveto (5730 ) show
0 276 moveto (5731 ) show
0 264 moveto (5732 ) show
0 252 moveto (5733 ) show
0 240 moveto (5734 ) show
0 228 moveto (5735 ) show
0 216 moveto (5736 ) show
0 204 moveto (5737 ) show
0 192 moveto (5738 ) show
0 180 moveto (5739 ) show
0 168 moveto (5740 ) show
0 156 moveto (5741 ) show
0 144 moveto (5742 ) show
0 132 moveto (5743 ) show
0 120 moveto (5744 ) show
0 108 moveto (5745 ) show
0 96 moveto (5746 ) show
0 84 moveto (5747 ) show
0 72 moveto (5748 ) show
0 60 moveto (5749 ) show
0 24 moveto (Sheet 57) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 1) show
0 648 moveto (5750 //) show
0 636 moveto (5751 // File-system system calls.) show
0 624 moveto (5752 // Mostly argument checking, since we don't trust) show
0 612 moveto (5753 // user code, and calls into file.c and fs.c.) show
0 600 moveto (5754 //) show
0 588 moveto (5755 ) show
0 576 moveto (5756 #include "types.h") show
0 564 moveto (5757 #include "defs.h") show
0 552 moveto (5758 #include "param.h") show
0 540 moveto (5759 #include "stat.h") show
0 528 moveto (5760 #include "mmu.h") show
0 516 moveto (5761 #include "proc.h") show
0 504 moveto (5762 #include "fs.h") show
0 492 moveto (5763 #include "file.h") show
0 480 moveto (5764 #include "fcntl.h") show
0 468 moveto (5765 ) show
0 456 moveto (5766 // Fetch the nth word-sized system call argument as a file descriptor) show
0 444 moveto (5767 // and return both the descriptor and the corresponding struct file.) show
0 432 moveto (5768 static int) show
0 420 moveto (5769 argfd\(int n, int *pfd, struct file **pf\)) show
0 408 moveto (5770 {) show
0 396 moveto (5771   int fd;) show
0 384 moveto (5772   struct file *f;) show
0 372 moveto (5773 ) show
0 360 moveto (5774   if\(argint\(n, &fd\) < 0\)) show
0 348 moveto (5775     return -1;) show
0 336 moveto (5776   if\(fd < 0 || fd >= NOFILE || \(f=proc->ofile[fd]\) == 0\)) show
0 324 moveto (5777     return -1;) show
0 312 moveto (5778   if\(pfd\)) show
0 300 moveto (5779     *pfd = fd;) show
0 288 moveto (5780   if\(pf\)) show
0 276 moveto (5781     *pf = f;) show
0 264 moveto (5782   return 0;) show
0 252 moveto (5783 }) show
0 240 moveto (5784 ) show
0 228 moveto (5785 // Allocate a file descriptor for the given file.) show
0 216 moveto (5786 // Takes over file reference from caller on success.) show
0 204 moveto (5787 static int) show
0 192 moveto (5788 fdalloc\(struct file *f\)) show
0 180 moveto (5789 {) show
0 168 moveto (5790   int fd;) show
0 156 moveto (5791 ) show
0 144 moveto (5792   for\(fd = 0; fd < NOFILE; fd++\){) show
0 132 moveto (5793     if\(proc->ofile[fd] == 0\){) show
0 120 moveto (5794       proc->ofile[fd] = f;) show
0 108 moveto (5795       return fd;) show
0 96 moveto (5796     }) show
0 84 moveto (5797   }) show
0 72 moveto (5798   return -1;) show
0 60 moveto (5799 }) show
0 24 moveto (Sheet 57) show
grestore
restore
showpage
%%Page: 66 66
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 2) show
0 648 moveto (5800 int) show
0 636 moveto (5801 sys_dup\(void\)) show
0 624 moveto (5802 {) show
0 612 moveto (5803   struct file *f;) show
0 600 moveto (5804   int fd;) show
0 588 moveto (5805 ) show
0 576 moveto (5806   if\(argfd\(0, 0, &f\) < 0\)) show
0 564 moveto (5807     return -1;) show
0 552 moveto (5808   if\(\(fd=fdalloc\(f\)\) < 0\)) show
0 540 moveto (5809     return -1;) show
0 528 moveto (5810   filedup\(f\);) show
0 516 moveto (5811   return fd;) show
0 504 moveto (5812 }) show
0 492 moveto (5813 ) show
0 480 moveto (5814 int) show
0 468 moveto (5815 sys_read\(void\)) show
0 456 moveto (5816 {) show
0 444 moveto (5817   struct file *f;) show
0 432 moveto (5818   int n;) show
0 420 moveto (5819   char *p;) show
0 408 moveto (5820 ) show
0 396 moveto (5821   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 384 moveto (5822     return -1;) show
0 372 moveto (5823   return fileread\(f, p, n\);) show
0 360 moveto (5824 }) show
0 348 moveto (5825 ) show
0 336 moveto (5826 int) show
0 324 moveto (5827 sys_write\(void\)) show
0 312 moveto (5828 {) show
0 300 moveto (5829   struct file *f;) show
0 288 moveto (5830   int n;) show
0 276 moveto (5831   char *p;) show
0 264 moveto (5832 ) show
0 252 moveto (5833   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 240 moveto (5834     return -1;) show
0 228 moveto (5835   return filewrite\(f, p, n\);) show
0 216 moveto (5836 }) show
0 204 moveto (5837 ) show
0 192 moveto (5838 int) show
0 180 moveto (5839 sys_close\(void\)) show
0 168 moveto (5840 {) show
0 156 moveto (5841   int fd;) show
0 144 moveto (5842   struct file *f;) show
0 132 moveto (5843 ) show
0 120 moveto (5844   if\(argfd\(0, &fd, &f\) < 0\)) show
0 108 moveto (5845     return -1;) show
0 96 moveto (5846   proc->ofile[fd] = 0;) show
0 84 moveto (5847   fileclose\(f\);) show
0 72 moveto (5848   return 0;) show
0 60 moveto (5849 }) show
0 24 moveto (Sheet 58) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 3) show
0 648 moveto (5850 int) show
0 636 moveto (5851 sys_fstat\(void\)) show
0 624 moveto (5852 {) show
0 612 moveto (5853   struct file *f;) show
0 600 moveto (5854   struct stat *st;) show
0 588 moveto (5855 ) show
0 576 moveto (5856   if\(argfd\(0, 0, &f\) < 0 || argptr\(1, \(void*\)&st, sizeof\(*st\)\) < 0\)) show
0 564 moveto (5857     return -1;) show
0 552 moveto (5858   return filestat\(f, st\);) show
0 540 moveto (5859 }) show
0 528 moveto (5860 ) show
0 516 moveto (5861 // Create the path new as a link to the same inode as old.) show
0 504 moveto (5862 int) show
0 492 moveto (5863 sys_link\(void\)) show
0 480 moveto (5864 {) show
0 468 moveto (5865   char name[DIRSIZ], *new, *old;) show
0 456 moveto (5866   struct inode *dp, *ip;) show
0 444 moveto (5867 ) show
0 432 moveto (5868   if\(argstr\(0, &old\) < 0 || argstr\(1, &new\) < 0\)) show
0 420 moveto (5869     return -1;) show
0 408 moveto (5870 ) show
0 396 moveto (5871   begin_op\(\);) show
0 384 moveto (5872   if\(\(ip = namei\(old\)\) == 0\){) show
0 372 moveto (5873     end_op\(\);) show
0 360 moveto (5874     return -1;) show
0 348 moveto (5875   }) show
0 336 moveto (5876 ) show
0 324 moveto (5877   ilock\(ip\);) show
0 312 moveto (5878   if\(ip->type == T_DIR\){) show
0 300 moveto (5879     iunlockput\(ip\);) show
0 288 moveto (5880     end_op\(\);) show
0 276 moveto (5881     return -1;) show
0 264 moveto (5882   }) show
0 252 moveto (5883 ) show
0 240 moveto (5884   ip->nlink++;) show
0 228 moveto (5885   iupdate\(ip\);) show
0 216 moveto (5886   iunlock\(ip\);) show
0 204 moveto (5887 ) show
0 192 moveto (5888   if\(\(dp = nameiparent\(new, name\)\) == 0\)) show
0 180 moveto (5889     goto bad;) show
0 168 moveto (5890   ilock\(dp\);) show
0 156 moveto (5891   if\(dp->dev != ip->dev || dirlink\(dp, name, ip->inum\) < 0\){) show
0 144 moveto (5892     iunlockput\(dp\);) show
0 132 moveto (5893     goto bad;) show
0 120 moveto (5894   }) show
0 108 moveto (5895   iunlockput\(dp\);) show
0 96 moveto (5896   iput\(ip\);) show
0 84 moveto (5897 ) show
0 72 moveto (5898   end_op\(\);) show
0 60 moveto (5899 ) show
0 24 moveto (Sheet 58) show
grestore
restore
showpage
%%Page: 67 67
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 4) show
0 648 moveto (5900   return 0;) show
0 636 moveto (5901 ) show
0 624 moveto (5902 bad:) show
0 612 moveto (5903   ilock\(ip\);) show
0 600 moveto (5904   ip->nlink--;) show
0 588 moveto (5905   iupdate\(ip\);) show
0 576 moveto (5906   iunlockput\(ip\);) show
0 564 moveto (5907   end_op\(\);) show
0 552 moveto (5908   return -1;) show
0 540 moveto (5909 }) show
0 528 moveto (5910 ) show
0 516 moveto (5911 // Is the directory dp empty except for "." and ".." ?) show
0 504 moveto (5912 static int) show
0 492 moveto (5913 isdirempty\(struct inode *dp\)) show
0 480 moveto (5914 {) show
0 468 moveto (5915   int off;) show
0 456 moveto (5916   struct dirent de;) show
0 444 moveto (5917 ) show
0 432 moveto (5918   for\(off=2*sizeof\(de\); off<dp->size; off+=sizeof\(de\)\){) show
0 420 moveto (5919     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 408 moveto (5920       panic\("isdirempty: readi"\);) show
0 396 moveto (5921     if\(de.inum != 0\)) show
0 384 moveto (5922       return 0;) show
0 372 moveto (5923   }) show
0 360 moveto (5924   return 1;) show
0 348 moveto (5925 }) show
0 336 moveto (5926 ) show
0 324 moveto (5927 int) show
0 312 moveto (5928 sys_unlink\(void\)) show
0 300 moveto (5929 {) show
0 288 moveto (5930   struct inode *ip, *dp;) show
0 276 moveto (5931   struct dirent de;) show
0 264 moveto (5932   char name[DIRSIZ], *path;) show
0 252 moveto (5933   uint off;) show
0 240 moveto (5934 ) show
0 228 moveto (5935   if\(argstr\(0, &path\) < 0\)) show
0 216 moveto (5936     return -1;) show
0 204 moveto (5937 ) show
0 192 moveto (5938   begin_op\(\);) show
0 180 moveto (5939   if\(\(dp = nameiparent\(path, name\)\) == 0\){) show
0 168 moveto (5940     end_op\(\);) show
0 156 moveto (5941     return -1;) show
0 144 moveto (5942   }) show
0 132 moveto (5943 ) show
0 120 moveto (5944   ilock\(dp\);) show
0 108 moveto (5945 ) show
0 96 moveto (5946   // Cannot unlink "." or "..".) show
0 84 moveto (5947   if\(namecmp\(name, "."\) == 0 || namecmp\(name, ".."\) == 0\)) show
0 72 moveto (5948     goto bad;) show
0 60 moveto (5949 ) show
0 24 moveto (Sheet 59) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 5) show
0 648 moveto (5950   if\(\(ip = dirlookup\(dp, name, &off\)\) == 0\)) show
0 636 moveto (5951     goto bad;) show
0 624 moveto (5952   ilock\(ip\);) show
0 612 moveto (5953 ) show
0 600 moveto (5954   if\(ip->nlink < 1\)) show
0 588 moveto (5955     panic\("unlink: nlink < 1"\);) show
0 576 moveto (5956   if\(ip->type == T_DIR && !isdirempty\(ip\)\){) show
0 564 moveto (5957     iunlockput\(ip\);) show
0 552 moveto (5958     goto bad;) show
0 540 moveto (5959   }) show
0 528 moveto (5960 ) show
0 516 moveto (5961   memset\(&de, 0, sizeof\(de\)\);) show
0 504 moveto (5962   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 492 moveto (5963     panic\("unlink: writei"\);) show
0 480 moveto (5964   if\(ip->type == T_DIR\){) show
0 468 moveto (5965     dp->nlink--;) show
0 456 moveto (5966     iupdate\(dp\);) show
0 444 moveto (5967   }) show
0 432 moveto (5968   iunlockput\(dp\);) show
0 420 moveto (5969 ) show
0 408 moveto (5970   ip->nlink--;) show
0 396 moveto (5971   iupdate\(ip\);) show
0 384 moveto (5972   iunlockput\(ip\);) show
0 372 moveto (5973 ) show
0 360 moveto (5974   end_op\(\);) show
0 348 moveto (5975 ) show
0 336 moveto (5976   return 0;) show
0 324 moveto (5977 ) show
0 312 moveto (5978 bad:) show
0 300 moveto (5979   iunlockput\(dp\);) show
0 288 moveto (5980   end_op\(\);) show
0 276 moveto (5981   return -1;) show
0 264 moveto (5982 }) show
0 252 moveto (5983 ) show
0 240 moveto (5984 static struct inode*) show
0 228 moveto (5985 create\(char *path, short type, short major, short minor\)) show
0 216 moveto (5986 {) show
0 204 moveto (5987   uint off;) show
0 192 moveto (5988   struct inode *ip, *dp;) show
0 180 moveto (5989   char name[DIRSIZ];) show
0 168 moveto (5990 ) show
0 156 moveto (5991   if\(\(dp = nameiparent\(path, name\)\) == 0\)) show
0 144 moveto (5992     return 0;) show
0 132 moveto (5993   ilock\(dp\);) show
0 120 moveto (5994 ) show
0 108 moveto (5995   if\(\(ip = dirlookup\(dp, name, &off\)\) != 0\){) show
0 96 moveto (5996     iunlockput\(dp\);) show
0 84 moveto (5997     ilock\(ip\);) show
0 72 moveto (5998     if\(type == T_FILE && ip->type == T_FILE\)) show
0 60 moveto (5999       return ip;) show
0 24 moveto (Sheet 59) show
grestore
restore
showpage
%%Page: 68 68
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 6) show
0 648 moveto (6000     iunlockput\(ip\);) show
0 636 moveto (6001     return 0;) show
0 624 moveto (6002   }) show
0 612 moveto (6003 ) show
0 600 moveto (6004   if\(\(ip = ialloc\(dp->dev, type\)\) == 0\)) show
0 588 moveto (6005     panic\("create: ialloc"\);) show
0 576 moveto (6006 ) show
0 564 moveto (6007   ilock\(ip\);) show
0 552 moveto (6008   ip->major = major;) show
0 540 moveto (6009   ip->minor = minor;) show
0 528 moveto (6010   ip->nlink = 1;) show
0 516 moveto (6011   iupdate\(ip\);) show
0 504 moveto (6012 ) show
0 492 moveto (6013   if\(type == T_DIR\){  // Create . and .. entries.) show
0 480 moveto (6014     dp->nlink++;  // for "..") show
0 468 moveto (6015     iupdate\(dp\);) show
0 456 moveto (6016     // No ip->nlink++ for ".": avoid cyclic ref count.) show
0 444 moveto (6017     if\(dirlink\(ip, ".", ip->inum\) < 0 || dirlink\(ip, "..", dp->inum\) < 0\)) show
0 432 moveto (6018       panic\("create dots"\);) show
0 420 moveto (6019   }) show
0 408 moveto (6020 ) show
0 396 moveto (6021   if\(dirlink\(dp, name, ip->inum\) < 0\)) show
0 384 moveto (6022     panic\("create: dirlink"\);) show
0 372 moveto (6023 ) show
0 360 moveto (6024   iunlockput\(dp\);) show
0 348 moveto (6025 ) show
0 336 moveto (6026   return ip;) show
0 324 moveto (6027 }) show
0 312 moveto (6028 ) show
0 300 moveto (6029 int) show
0 288 moveto (6030 sys_open\(void\)) show
0 276 moveto (6031 {) show
0 264 moveto (6032   char *path;) show
0 252 moveto (6033   int fd, omode;) show
0 240 moveto (6034   struct file *f;) show
0 228 moveto (6035   struct inode *ip;) show
0 216 moveto (6036 ) show
0 204 moveto (6037   if\(argstr\(0, &path\) < 0 || argint\(1, &omode\) < 0\)) show
0 192 moveto (6038     return -1;) show
0 180 moveto (6039 ) show
0 168 moveto (6040   begin_op\(\);) show
0 156 moveto (6041 ) show
0 144 moveto (6042   if\(omode & O_CREATE\){) show
0 132 moveto (6043     ip = create\(path, T_FILE, 0, 0\);) show
0 120 moveto (6044     if\(ip == 0\){) show
0 108 moveto (6045       end_op\(\);) show
0 96 moveto (6046       return -1;) show
0 84 moveto (6047     }) show
0 72 moveto (6048   } else {) show
0 60 moveto (6049     if\(\(ip = namei\(path\)\) == 0\){) show
0 24 moveto (Sheet 60) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 7) show
0 648 moveto (6050       end_op\(\);) show
0 636 moveto (6051       return -1;) show
0 624 moveto (6052     }) show
0 612 moveto (6053     ilock\(ip\);) show
0 600 moveto (6054     if\(ip->type == T_DIR && omode != O_RDONLY\){) show
0 588 moveto (6055       iunlockput\(ip\);) show
0 576 moveto (6056       end_op\(\);) show
0 564 moveto (6057       return -1;) show
0 552 moveto (6058     }) show
0 540 moveto (6059   }) show
0 528 moveto (6060 ) show
0 516 moveto (6061   if\(\(f = filealloc\(\)\) == 0 || \(fd = fdalloc\(f\)\) < 0\){) show
0 504 moveto (6062     if\(f\)) show
0 492 moveto (6063       fileclose\(f\);) show
0 480 moveto (6064     iunlockput\(ip\);) show
0 468 moveto (6065     end_op\(\);) show
0 456 moveto (6066     return -1;) show
0 444 moveto (6067   }) show
0 432 moveto (6068   iunlock\(ip\);) show
0 420 moveto (6069   end_op\(\);) show
0 408 moveto (6070 ) show
0 396 moveto (6071   f->type = FD_INODE;) show
0 384 moveto (6072   f->ip = ip;) show
0 372 moveto (6073   f->off = 0;) show
0 360 moveto (6074   f->readable = !\(omode & O_WRONLY\);) show
0 348 moveto (6075   f->writable = \(omode & O_WRONLY\) || \(omode & O_RDWR\);) show
0 336 moveto (6076   return fd;) show
0 324 moveto (6077 }) show
0 312 moveto (6078 ) show
0 300 moveto (6079 int) show
0 288 moveto (6080 sys_mkdir\(void\)) show
0 276 moveto (6081 {) show
0 264 moveto (6082   char *path;) show
0 252 moveto (6083   struct inode *ip;) show
0 240 moveto (6084 ) show
0 228 moveto (6085   begin_op\(\);) show
0 216 moveto (6086   if\(argstr\(0, &path\) < 0 || \(ip = create\(path, T_DIR, 0, 0\)\) == 0\){) show
0 204 moveto (6087     end_op\(\);) show
0 192 moveto (6088     return -1;) show
0 180 moveto (6089   }) show
0 168 moveto (6090   iunlockput\(ip\);) show
0 156 moveto (6091   end_op\(\);) show
0 144 moveto (6092   return 0;) show
0 132 moveto (6093 }) show
0 120 moveto (6094 ) show
0 108 moveto (6095 ) show
0 96 moveto (6096 ) show
0 84 moveto (6097 ) show
0 72 moveto (6098 ) show
0 60 moveto (6099 ) show
0 24 moveto (Sheet 60) show
grestore
restore
showpage
%%Page: 69 69
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 8) show
0 648 moveto (6100 int) show
0 636 moveto (6101 sys_mknod\(void\)) show
0 624 moveto (6102 {) show
0 612 moveto (6103   struct inode *ip;) show
0 600 moveto (6104   char *path;) show
0 588 moveto (6105   int len;) show
0 576 moveto (6106   int major, minor;) show
0 564 moveto (6107 ) show
0 552 moveto (6108   begin_op\(\);) show
0 540 moveto (6109   if\(\(len=argstr\(0, &path\)\) < 0 ||) show
0 528 moveto (6110      argint\(1, &major\) < 0 ||) show
0 516 moveto (6111      argint\(2, &minor\) < 0 ||) show
0 504 moveto (6112      \(ip = create\(path, T_DEV, major, minor\)\) == 0\){) show
0 492 moveto (6113     end_op\(\);) show
0 480 moveto (6114     return -1;) show
0 468 moveto (6115   }) show
0 456 moveto (6116   iunlockput\(ip\);) show
0 444 moveto (6117   end_op\(\);) show
0 432 moveto (6118   return 0;) show
0 420 moveto (6119 }) show
0 408 moveto (6120 ) show
0 396 moveto (6121 int) show
0 384 moveto (6122 sys_chdir\(void\)) show
0 372 moveto (6123 {) show
0 360 moveto (6124   char *path;) show
0 348 moveto (6125   struct inode *ip;) show
0 336 moveto (6126 ) show
0 324 moveto (6127   begin_op\(\);) show
0 312 moveto (6128   if\(argstr\(0, &path\) < 0 || \(ip = namei\(path\)\) == 0\){) show
0 300 moveto (6129     end_op\(\);) show
0 288 moveto (6130     return -1;) show
0 276 moveto (6131   }) show
0 264 moveto (6132   ilock\(ip\);) show
0 252 moveto (6133   if\(ip->type != T_DIR\){) show
0 240 moveto (6134     iunlockput\(ip\);) show
0 228 moveto (6135     end_op\(\);) show
0 216 moveto (6136     return -1;) show
0 204 moveto (6137   }) show
0 192 moveto (6138   iunlock\(ip\);) show
0 180 moveto (6139   iput\(proc->cwd\);) show
0 168 moveto (6140   end_op\(\);) show
0 156 moveto (6141   proc->cwd = ip;) show
0 144 moveto (6142   return 0;) show
0 132 moveto (6143 }) show
0 120 moveto (6144 ) show
0 108 moveto (6145 ) show
0 96 moveto (6146 ) show
0 84 moveto (6147 ) show
0 72 moveto (6148 ) show
0 60 moveto (6149 ) show
0 24 moveto (Sheet 61) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sysfile.c  Page 9) show
0 648 moveto (6150 int) show
0 636 moveto (6151 sys_exec\(void\)) show
0 624 moveto (6152 {) show
0 612 moveto (6153   char *path, *argv[MAXARG];) show
0 600 moveto (6154   int i;) show
0 588 moveto (6155   uint uargv, uarg;) show
0 576 moveto (6156 ) show
0 564 moveto (6157   if\(argstr\(0, &path\) < 0 || argint\(1, \(int*\)&uargv\) < 0\){) show
0 552 moveto (6158     return -1;) show
0 540 moveto (6159   }) show
0 528 moveto (6160   memset\(argv, 0, sizeof\(argv\)\);) show
0 516 moveto (6161   for\(i=0;; i++\){) show
0 504 moveto (6162     if\(i >= NELEM\(argv\)\)) show
0 492 moveto (6163       return -1;) show
0 480 moveto (6164     if\(fetchint\(uargv+4*i, \(int*\)&uarg\) < 0\)) show
0 468 moveto (6165       return -1;) show
0 456 moveto (6166     if\(uarg == 0\){) show
0 444 moveto (6167       argv[i] = 0;) show
0 432 moveto (6168       break;) show
0 420 moveto (6169     }) show
0 408 moveto (6170     if\(fetchstr\(uarg, &argv[i]\) < 0\)) show
0 396 moveto (6171       return -1;) show
0 384 moveto (6172   }) show
0 372 moveto (6173   return exec\(path, argv\);) show
0 360 moveto (6174 }) show
0 348 moveto (6175 ) show
0 336 moveto (6176 int) show
0 324 moveto (6177 sys_pipe\(void\)) show
0 312 moveto (6178 {) show
0 300 moveto (6179   int *fd;) show
0 288 moveto (6180   struct file *rf, *wf;) show
0 276 moveto (6181   int fd0, fd1;) show
0 264 moveto (6182 ) show
0 252 moveto (6183   if\(argptr\(0, \(void*\)&fd, 2*sizeof\(fd[0]\)\) < 0\)) show
0 240 moveto (6184     return -1;) show
0 228 moveto (6185   if\(pipealloc\(&rf, &wf\) < 0\)) show
0 216 moveto (6186     return -1;) show
0 204 moveto (6187   fd0 = -1;) show
0 192 moveto (6188   if\(\(fd0 = fdalloc\(rf\)\) < 0 || \(fd1 = fdalloc\(wf\)\) < 0\){) show
0 180 moveto (6189     if\(fd0 >= 0\)) show
0 168 moveto (6190       proc->ofile[fd0] = 0;) show
0 156 moveto (6191     fileclose\(rf\);) show
0 144 moveto (6192     fileclose\(wf\);) show
0 132 moveto (6193     return -1;) show
0 120 moveto (6194   }) show
0 108 moveto (6195   fd[0] = fd0;) show
0 96 moveto (6196   fd[1] = fd1;) show
0 84 moveto (6197   return 0;) show
0 72 moveto (6198 }) show
0 60 moveto (6199 ) show
0 24 moveto (Sheet 61) show
grestore
restore
showpage
%%Page: 70 70
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/exec.c  Page 1) show
0 648 moveto (6200 #include "types.h") show
0 636 moveto (6201 #include "param.h") show
0 624 moveto (6202 #include "memlayout.h") show
0 612 moveto (6203 #include "mmu.h") show
0 600 moveto (6204 #include "proc.h") show
0 588 moveto (6205 #include "defs.h") show
0 576 moveto (6206 #include "x86.h") show
0 564 moveto (6207 #include "elf.h") show
0 552 moveto (6208 ) show
0 540 moveto (6209 int) show
0 528 moveto (6210 exec\(char *path, char **argv\)) show
0 516 moveto (6211 {) show
0 504 moveto (6212   char *s, *last;) show
0 492 moveto (6213   int i, off;) show
0 480 moveto (6214   uint argc, sz, sp, ustack[3+MAXARG+1];) show
0 468 moveto (6215   struct elfhdr elf;) show
0 456 moveto (6216   struct inode *ip;) show
0 444 moveto (6217   struct proghdr ph;) show
0 432 moveto (6218   pde_t *pgdir, *oldpgdir;) show
0 420 moveto (6219 ) show
0 408 moveto (6220   begin_op\(\);) show
0 396 moveto (6221   if\(\(ip = namei\(path\)\) == 0\){) show
0 384 moveto (6222     end_op\(\);) show
0 372 moveto (6223     return -1;) show
0 360 moveto (6224   }) show
0 348 moveto (6225   ilock\(ip\);) show
0 336 moveto (6226   pgdir = 0;) show
0 324 moveto (6227 ) show
0 312 moveto (6228   // Check ELF header) show
0 300 moveto (6229   if\(readi\(ip, \(char*\)&elf, 0, sizeof\(elf\)\) < sizeof\(elf\)\)) show
0 288 moveto (6230     goto bad;) show
0 276 moveto (6231   if\(elf.magic != ELF_MAGIC\)) show
0 264 moveto (6232     goto bad;) show
0 252 moveto (6233 ) show
0 240 moveto (6234   if\(\(pgdir = setupkvm\(\)\) == 0\)) show
0 228 moveto (6235     goto bad;) show
0 216 moveto (6236 ) show
0 204 moveto (6237   // Load program into memory.) show
0 192 moveto (6238   sz = 0;) show
0 180 moveto (6239   for\(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof\(ph\)\){) show
0 168 moveto (6240     if\(readi\(ip, \(char*\)&ph, off, sizeof\(ph\)\) != sizeof\(ph\)\)) show
0 156 moveto (6241       goto bad;) show
0 144 moveto (6242     if\(ph.type != ELF_PROG_LOAD\)) show
0 132 moveto (6243       continue;) show
0 120 moveto (6244     if\(ph.memsz < ph.filesz\)) show
0 108 moveto (6245       goto bad;) show
0 96 moveto (6246     if\(\(sz = allocuvm\(pgdir, sz, ph.vaddr + ph.memsz\)\) == 0\)) show
0 84 moveto (6247       goto bad;) show
0 72 moveto (6248     if\(loaduvm\(pgdir, \(char*\)ph.vaddr, ip, ph.off, ph.filesz\) < 0\)) show
0 60 moveto (6249       goto bad;) show
0 24 moveto (Sheet 62) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/exec.c  Page 2) show
0 648 moveto (6250   }) show
0 636 moveto (6251   iunlockput\(ip\);) show
0 624 moveto (6252   end_op\(\);) show
0 612 moveto (6253   ip = 0;) show
0 600 moveto (6254 ) show
0 588 moveto (6255   // Allocate two pages at the next page boundary.) show
0 576 moveto (6256   // Make the first inaccessible.  Use the second as the user stack.) show
0 564 moveto (6257   sz = PGROUNDUP\(sz\);) show
0 552 moveto (6258   if\(\(sz = allocuvm\(pgdir, sz, sz + 2*PGSIZE\)\) == 0\)) show
0 540 moveto (6259     goto bad;) show
0 528 moveto (6260   clearpteu\(pgdir, \(char*\)\(sz - 2*PGSIZE\)\);) show
0 516 moveto (6261   sp = sz;) show
0 504 moveto (6262 ) show
0 492 moveto (6263   // Push argument strings, prepare rest of stack in ustack.) show
0 480 moveto (6264   for\(argc = 0; argv[argc]; argc++\) {) show
0 468 moveto (6265     if\(argc >= MAXARG\)) show
0 456 moveto (6266       goto bad;) show
0 444 moveto (6267     sp = \(sp - \(strlen\(argv[argc]\) + 1\)\) & ~3;) show
0 432 moveto (6268     if\(copyout\(pgdir, sp, argv[argc], strlen\(argv[argc]\) + 1\) < 0\)) show
0 420 moveto (6269       goto bad;) show
0 408 moveto (6270     ustack[3+argc] = sp;) show
0 396 moveto (6271   }) show
0 384 moveto (6272   ustack[3+argc] = 0;) show
0 372 moveto (6273 ) show
0 360 moveto (6274   ustack[0] = 0xffffffff;  // fake return PC) show
0 348 moveto (6275   ustack[1] = argc;) show
0 336 moveto (6276   ustack[2] = sp - \(argc+1\)*4;  // argv pointer) show
0 324 moveto (6277 ) show
0 312 moveto (6278   sp -= \(3+argc+1\) * 4;) show
0 300 moveto (6279   if\(copyout\(pgdir, sp, ustack, \(3+argc+1\)*4\) < 0\)) show
0 288 moveto (6280     goto bad;) show
0 276 moveto (6281 ) show
0 264 moveto (6282   // Save program name for debugging.) show
0 252 moveto (6283   for\(last=s=path; *s; s++\)) show
0 240 moveto (6284     if\(*s == '/'\)) show
0 228 moveto (6285       last = s+1;) show
0 216 moveto (6286   safestrcpy\(proc->name, last, sizeof\(proc->name\)\);) show
0 204 moveto (6287 ) show
0 192 moveto (6288   // Commit to the user image.) show
0 180 moveto (6289   oldpgdir = proc->pgdir;) show
0 168 moveto (6290   proc->pgdir = pgdir;) show
0 156 moveto (6291   proc->sz = sz;) show
0 144 moveto (6292   proc->tf->eip = elf.entry;  // main) show
0 132 moveto (6293   proc->tf->esp = sp;) show
0 120 moveto (6294   switchuvm\(proc\);) show
0 108 moveto (6295   freevm\(oldpgdir\);) show
0 96 moveto (6296   return 0;) show
0 84 moveto (6297 ) show
0 72 moveto (6298 ) show
0 60 moveto (6299 ) show
0 24 moveto (Sheet 62) show
grestore
restore
showpage
%%Page: 71 71
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/exec.c  Page 3) show
0 648 moveto (6300  bad:) show
0 636 moveto (6301   if\(pgdir\)) show
0 624 moveto (6302     freevm\(pgdir\);) show
0 612 moveto (6303   if\(ip\){) show
0 600 moveto (6304     iunlockput\(ip\);) show
0 588 moveto (6305     end_op\(\);) show
0 576 moveto (6306   }) show
0 564 moveto (6307   return -1;) show
0 552 moveto (6308 }) show
0 540 moveto (6309 ) show
0 528 moveto (6310 ) show
0 516 moveto (6311 ) show
0 504 moveto (6312 ) show
0 492 moveto (6313 ) show
0 480 moveto (6314 ) show
0 468 moveto (6315 ) show
0 456 moveto (6316 ) show
0 444 moveto (6317 ) show
0 432 moveto (6318 ) show
0 420 moveto (6319 ) show
0 408 moveto (6320 ) show
0 396 moveto (6321 ) show
0 384 moveto (6322 ) show
0 372 moveto (6323 ) show
0 360 moveto (6324 ) show
0 348 moveto (6325 ) show
0 336 moveto (6326 ) show
0 324 moveto (6327 ) show
0 312 moveto (6328 ) show
0 300 moveto (6329 ) show
0 288 moveto (6330 ) show
0 276 moveto (6331 ) show
0 264 moveto (6332 ) show
0 252 moveto (6333 ) show
0 240 moveto (6334 ) show
0 228 moveto (6335 ) show
0 216 moveto (6336 ) show
0 204 moveto (6337 ) show
0 192 moveto (6338 ) show
0 180 moveto (6339 ) show
0 168 moveto (6340 ) show
0 156 moveto (6341 ) show
0 144 moveto (6342 ) show
0 132 moveto (6343 ) show
0 120 moveto (6344 ) show
0 108 moveto (6345 ) show
0 96 moveto (6346 ) show
0 84 moveto (6347 ) show
0 72 moveto (6348 ) show
0 60 moveto (6349 ) show
0 24 moveto (Sheet 63) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/pipe.c  Page 1) show
0 648 moveto (6350 #include "types.h") show
0 636 moveto (6351 #include "defs.h") show
0 624 moveto (6352 #include "param.h") show
0 612 moveto (6353 #include "mmu.h") show
0 600 moveto (6354 #include "proc.h") show
0 588 moveto (6355 #include "fs.h") show
0 576 moveto (6356 #include "file.h") show
0 564 moveto (6357 #include "spinlock.h") show
0 552 moveto (6358 ) show
0 540 moveto (6359 #define PIPESIZE 512) show
0 528 moveto (6360 ) show
0 516 moveto (6361 struct pipe {) show
0 504 moveto (6362   struct spinlock lock;) show
0 492 moveto (6363   char data[PIPESIZE];) show
0 480 moveto (6364   uint nread;     // number of bytes read) show
0 468 moveto (6365   uint nwrite;    // number of bytes written) show
0 456 moveto (6366   int readopen;   // read fd is still open) show
0 444 moveto (6367   int writeopen;  // write fd is still open) show
0 432 moveto (6368 };) show
0 420 moveto (6369 ) show
0 408 moveto (6370 int) show
0 396 moveto (6371 pipealloc\(struct file **f0, struct file **f1\)) show
0 384 moveto (6372 {) show
0 372 moveto (6373   struct pipe *p;) show
0 360 moveto (6374 ) show
0 348 moveto (6375   p = 0;) show
0 336 moveto (6376   *f0 = *f1 = 0;) show
0 324 moveto (6377   if\(\(*f0 = filealloc\(\)\) == 0 || \(*f1 = filealloc\(\)\) == 0\)) show
0 312 moveto (6378     goto bad;) show
0 300 moveto (6379   if\(\(p = \(struct pipe*\)kalloc\(\)\) == 0\)) show
0 288 moveto (6380     goto bad;) show
0 276 moveto (6381   p->readopen = 1;) show
0 264 moveto (6382   p->writeopen = 1;) show
0 252 moveto (6383   p->nwrite = 0;) show
0 240 moveto (6384   p->nread = 0;) show
0 228 moveto (6385   initlock\(&p->lock, "pipe"\);) show
0 216 moveto (6386   \(*f0\)->type = FD_PIPE;) show
0 204 moveto (6387   \(*f0\)->readable = 1;) show
0 192 moveto (6388   \(*f0\)->writable = 0;) show
0 180 moveto (6389   \(*f0\)->pipe = p;) show
0 168 moveto (6390   \(*f1\)->type = FD_PIPE;) show
0 156 moveto (6391   \(*f1\)->readable = 0;) show
0 144 moveto (6392   \(*f1\)->writable = 1;) show
0 132 moveto (6393   \(*f1\)->pipe = p;) show
0 120 moveto (6394   return 0;) show
0 108 moveto (6395 ) show
0 96 moveto (6396 ) show
0 84 moveto (6397 ) show
0 72 moveto (6398 ) show
0 60 moveto (6399 ) show
0 24 moveto (Sheet 63) show
grestore
restore
showpage
%%Page: 72 72
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/pipe.c  Page 2) show
0 648 moveto (6400  bad:) show
0 636 moveto (6401   if\(p\)) show
0 624 moveto (6402     kfree\(\(char*\)p\);) show
0 612 moveto (6403   if\(*f0\)) show
0 600 moveto (6404     fileclose\(*f0\);) show
0 588 moveto (6405   if\(*f1\)) show
0 576 moveto (6406     fileclose\(*f1\);) show
0 564 moveto (6407   return -1;) show
0 552 moveto (6408 }) show
0 540 moveto (6409 ) show
0 528 moveto (6410 void) show
0 516 moveto (6411 pipeclose\(struct pipe *p, int writable\)) show
0 504 moveto (6412 {) show
0 492 moveto (6413   acquire\(&p->lock\);) show
0 480 moveto (6414   if\(writable\){) show
0 468 moveto (6415     p->writeopen = 0;) show
0 456 moveto (6416     wakeup\(&p->nread\);) show
0 444 moveto (6417   } else {) show
0 432 moveto (6418     p->readopen = 0;) show
0 420 moveto (6419     wakeup\(&p->nwrite\);) show
0 408 moveto (6420   }) show
0 396 moveto (6421   if\(p->readopen == 0 && p->writeopen == 0\){) show
0 384 moveto (6422     release\(&p->lock\);) show
0 372 moveto (6423     kfree\(\(char*\)p\);) show
0 360 moveto (6424   } else) show
0 348 moveto (6425     release\(&p->lock\);) show
0 336 moveto (6426 }) show
0 324 moveto (6427 ) show
0 312 moveto (6428 int) show
0 300 moveto (6429 pipewrite\(struct pipe *p, char *addr, int n\)) show
0 288 moveto (6430 {) show
0 276 moveto (6431   int i;) show
0 264 moveto (6432 ) show
0 252 moveto (6433   acquire\(&p->lock\);) show
0 240 moveto (6434   for\(i = 0; i < n; i++\){) show
0 228 moveto (6435     while\(p->nwrite == p->nread + PIPESIZE\){  ) show
0 216 moveto (6436       if\(p->readopen == 0 || proc->killed\){) show
0 204 moveto (6437         release\(&p->lock\);) show
0 192 moveto (6438         return -1;) show
0 180 moveto (6439       }) show
0 168 moveto (6440       wakeup\(&p->nread\);) show
0 156 moveto (6441       sleep\(&p->nwrite, &p->lock\);  ) show
0 144 moveto (6442     }) show
0 132 moveto (6443     p->data[p->nwrite++ % PIPESIZE] = addr[i];) show
0 120 moveto (6444   }) show
0 108 moveto (6445   wakeup\(&p->nread\);  ) show
0 96 moveto (6446   release\(&p->lock\);) show
0 84 moveto (6447   return n;) show
0 72 moveto (6448 }) show
0 60 moveto (6449 ) show
0 24 moveto (Sheet 64) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/pipe.c  Page 3) show
0 648 moveto (6450 int) show
0 636 moveto (6451 piperead\(struct pipe *p, char *addr, int n\)) show
0 624 moveto (6452 {) show
0 612 moveto (6453   int i;) show
0 600 moveto (6454 ) show
0 588 moveto (6455   acquire\(&p->lock\);) show
0 576 moveto (6456   while\(p->nread == p->nwrite && p->writeopen\){  ) show
0 564 moveto (6457     if\(proc->killed\){) show
0 552 moveto (6458       release\(&p->lock\);) show
0 540 moveto (6459       return -1;) show
0 528 moveto (6460     }) show
0 516 moveto (6461     sleep\(&p->nread, &p->lock\); ) show
0 504 moveto (6462   }) show
0 492 moveto (6463   for\(i = 0; i < n; i++\){  ) show
0 480 moveto (6464     if\(p->nread == p->nwrite\)) show
0 468 moveto (6465       break;) show
0 456 moveto (6466     addr[i] = p->data[p->nread++ % PIPESIZE];) show
0 444 moveto (6467   }) show
0 432 moveto (6468   wakeup\(&p->nwrite\);  ) show
0 420 moveto (6469   release\(&p->lock\);) show
0 408 moveto (6470   return i;) show
0 396 moveto (6471 }) show
0 384 moveto (6472 ) show
0 372 moveto (6473 ) show
0 360 moveto (6474 ) show
0 348 moveto (6475 ) show
0 336 moveto (6476 ) show
0 324 moveto (6477 ) show
0 312 moveto (6478 ) show
0 300 moveto (6479 ) show
0 288 moveto (6480 ) show
0 276 moveto (6481 ) show
0 264 moveto (6482 ) show
0 252 moveto (6483 ) show
0 240 moveto (6484 ) show
0 228 moveto (6485 ) show
0 216 moveto (6486 ) show
0 204 moveto (6487 ) show
0 192 moveto (6488 ) show
0 180 moveto (6489 ) show
0 168 moveto (6490 ) show
0 156 moveto (6491 ) show
0 144 moveto (6492 ) show
0 132 moveto (6493 ) show
0 120 moveto (6494 ) show
0 108 moveto (6495 ) show
0 96 moveto (6496 ) show
0 84 moveto (6497 ) show
0 72 moveto (6498 ) show
0 60 moveto (6499 ) show
0 24 moveto (Sheet 64) show
grestore
restore
showpage
%%Page: 73 73
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/string.c  Page 1) show
0 648 moveto (6500 #include "types.h") show
0 636 moveto (6501 #include "x86.h") show
0 624 moveto (6502 ) show
0 612 moveto (6503 void*) show
0 600 moveto (6504 memset\(void *dst, int c, uint n\)) show
0 588 moveto (6505 {) show
0 576 moveto (6506   if \(\(int\)dst%4 == 0 && n%4 == 0\){) show
0 564 moveto (6507     c &= 0xFF;) show
0 552 moveto (6508     stosl\(dst, \(c<<24\)|\(c<<16\)|\(c<<8\)|c, n/4\);) show
0 540 moveto (6509   } else) show
0 528 moveto (6510     stosb\(dst, c, n\);) show
0 516 moveto (6511   return dst;) show
0 504 moveto (6512 }) show
0 492 moveto (6513 ) show
0 480 moveto (6514 int) show
0 468 moveto (6515 memcmp\(const void *v1, const void *v2, uint n\)) show
0 456 moveto (6516 {) show
0 444 moveto (6517   const uchar *s1, *s2;) show
0 432 moveto (6518 ) show
0 420 moveto (6519   s1 = v1;) show
0 408 moveto (6520   s2 = v2;) show
0 396 moveto (6521   while\(n-- > 0\){) show
0 384 moveto (6522     if\(*s1 != *s2\)) show
0 372 moveto (6523       return *s1 - *s2;) show
0 360 moveto (6524     s1++, s2++;) show
0 348 moveto (6525   }) show
0 336 moveto (6526 ) show
0 324 moveto (6527   return 0;) show
0 312 moveto (6528 }) show
0 300 moveto (6529 ) show
0 288 moveto (6530 void*) show
0 276 moveto (6531 memmove\(void *dst, const void *src, uint n\)) show
0 264 moveto (6532 {) show
0 252 moveto (6533   const char *s;) show
0 240 moveto (6534   char *d;) show
0 228 moveto (6535 ) show
0 216 moveto (6536   s = src;) show
0 204 moveto (6537   d = dst;) show
0 192 moveto (6538   if\(s < d && s + n > d\){) show
0 180 moveto (6539     s += n;) show
0 168 moveto (6540     d += n;) show
0 156 moveto (6541     while\(n-- > 0\)) show
0 144 moveto (6542       *--d = *--s;) show
0 132 moveto (6543   } else) show
0 120 moveto (6544     while\(n-- > 0\)) show
0 108 moveto (6545       *d++ = *s++;) show
0 96 moveto (6546 ) show
0 84 moveto (6547   return dst;) show
0 72 moveto (6548 }) show
0 60 moveto (6549 ) show
0 24 moveto (Sheet 65) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/string.c  Page 2) show
0 648 moveto (6550 // memcpy exists to placate GCC.  Use memmove.) show
0 636 moveto (6551 void*) show
0 624 moveto (6552 memcpy\(void *dst, const void *src, uint n\)) show
0 612 moveto (6553 {) show
0 600 moveto (6554   return memmove\(dst, src, n\);) show
0 588 moveto (6555 }) show
0 576 moveto (6556 ) show
0 564 moveto (6557 int) show
0 552 moveto (6558 strncmp\(const char *p, const char *q, uint n\)) show
0 540 moveto (6559 {) show
0 528 moveto (6560   while\(n > 0 && *p && *p == *q\)) show
0 516 moveto (6561     n--, p++, q++;) show
0 504 moveto (6562   if\(n == 0\)) show
0 492 moveto (6563     return 0;) show
0 480 moveto (6564   return \(uchar\)*p - \(uchar\)*q;) show
0 468 moveto (6565 }) show
0 456 moveto (6566 ) show
0 444 moveto (6567 char*) show
0 432 moveto (6568 strncpy\(char *s, const char *t, int n\)) show
0 420 moveto (6569 {) show
0 408 moveto (6570   char *os;) show
0 396 moveto (6571 ) show
0 384 moveto (6572   os = s;) show
0 372 moveto (6573   while\(n-- > 0 && \(*s++ = *t++\) != 0\)) show
0 360 moveto (6574     ;) show
0 348 moveto (6575   while\(n-- > 0\)) show
0 336 moveto (6576     *s++ = 0;) show
0 324 moveto (6577   return os;) show
0 312 moveto (6578 }) show
0 300 moveto (6579 ) show
0 288 moveto (6580 // Like strncpy but guaranteed to NUL-terminate.) show
0 276 moveto (6581 char*) show
0 264 moveto (6582 safestrcpy\(char *s, const char *t, int n\)) show
0 252 moveto (6583 {) show
0 240 moveto (6584   char *os;) show
0 228 moveto (6585 ) show
0 216 moveto (6586   os = s;) show
0 204 moveto (6587   if\(n <= 0\)) show
0 192 moveto (6588     return os;) show
0 180 moveto (6589   while\(--n > 0 && \(*s++ = *t++\) != 0\)) show
0 168 moveto (6590     ;) show
0 156 moveto (6591   *s = 0;) show
0 144 moveto (6592   return os;) show
0 132 moveto (6593 }) show
0 120 moveto (6594 ) show
0 108 moveto (6595 ) show
0 96 moveto (6596 ) show
0 84 moveto (6597 ) show
0 72 moveto (6598 ) show
0 60 moveto (6599 ) show
0 24 moveto (Sheet 65) show
grestore
restore
showpage
%%Page: 74 74
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/string.c  Page 3) show
0 648 moveto (6600 int) show
0 636 moveto (6601 strlen\(const char *s\)) show
0 624 moveto (6602 {) show
0 612 moveto (6603   int n;) show
0 600 moveto (6604 ) show
0 588 moveto (6605   for\(n = 0; s[n]; n++\)) show
0 576 moveto (6606     ;) show
0 564 moveto (6607   return n;) show
0 552 moveto (6608 }) show
0 540 moveto (6609 ) show
0 528 moveto (6610 ) show
0 516 moveto (6611 ) show
0 504 moveto (6612 ) show
0 492 moveto (6613 ) show
0 480 moveto (6614 ) show
0 468 moveto (6615 ) show
0 456 moveto (6616 ) show
0 444 moveto (6617 ) show
0 432 moveto (6618 ) show
0 420 moveto (6619 ) show
0 408 moveto (6620 ) show
0 396 moveto (6621 ) show
0 384 moveto (6622 ) show
0 372 moveto (6623 ) show
0 360 moveto (6624 ) show
0 348 moveto (6625 ) show
0 336 moveto (6626 ) show
0 324 moveto (6627 ) show
0 312 moveto (6628 ) show
0 300 moveto (6629 ) show
0 288 moveto (6630 ) show
0 276 moveto (6631 ) show
0 264 moveto (6632 ) show
0 252 moveto (6633 ) show
0 240 moveto (6634 ) show
0 228 moveto (6635 ) show
0 216 moveto (6636 ) show
0 204 moveto (6637 ) show
0 192 moveto (6638 ) show
0 180 moveto (6639 ) show
0 168 moveto (6640 ) show
0 156 moveto (6641 ) show
0 144 moveto (6642 ) show
0 132 moveto (6643 ) show
0 120 moveto (6644 ) show
0 108 moveto (6645 ) show
0 96 moveto (6646 ) show
0 84 moveto (6647 ) show
0 72 moveto (6648 ) show
0 60 moveto (6649 ) show
0 24 moveto (Sheet 66) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mp.h  Page 1) show
0 648 moveto (6650 // See MultiProcessor Specification Version 1.[14]) show
0 636 moveto (6651 ) show
0 624 moveto (6652 struct mp {             // floating pointer) show
0 612 moveto (6653   uchar signature[4];           // "_MP_") show
0 600 moveto (6654   void *physaddr;               // phys addr of MP config table) show
0 588 moveto (6655   uchar length;                 // 1) show
0 576 moveto (6656   uchar specrev;                // [14]) show
0 564 moveto (6657   uchar checksum;               // all bytes must add up to 0) show
0 552 moveto (6658   uchar type;                   // MP system config type) show
0 540 moveto (6659   uchar imcrp;) show
0 528 moveto (6660   uchar reserved[3];) show
0 516 moveto (6661 };) show
0 504 moveto (6662 ) show
0 492 moveto (6663 struct mpconf {         // configuration table header) show
0 480 moveto (6664   uchar signature[4];           // "PCMP") show
0 468 moveto (6665   ushort length;                // total table length) show
0 456 moveto (6666   uchar version;                // [14]) show
0 444 moveto (6667   uchar checksum;               // all bytes must add up to 0) show
0 432 moveto (6668   uchar product[20];            // product id) show
0 420 moveto (6669   uint *oemtable;               // OEM table pointer) show
0 408 moveto (6670   ushort oemlength;             // OEM table length) show
0 396 moveto (6671   ushort entry;                 // entry count) show
0 384 moveto (6672   uint *lapicaddr;              // address of local APIC) show
0 372 moveto (6673   ushort xlength;               // extended table length) show
0 360 moveto (6674   uchar xchecksum;              // extended table checksum) show
0 348 moveto (6675   uchar reserved;) show
0 336 moveto (6676 };) show
0 324 moveto (6677 ) show
0 312 moveto (6678 struct mpproc {         // processor table entry) show
0 300 moveto (6679   uchar type;                   // entry type \(0\)) show
0 288 moveto (6680   uchar apicid;                 // local APIC id) show
0 276 moveto (6681   uchar version;                // local APIC verison) show
0 264 moveto (6682   uchar flags;                  // CPU flags) show
0 252 moveto (6683     #define MPBOOT 0x02           // This proc is the bootstrap processor.) show
0 240 moveto (6684   uchar signature[4];           // CPU signature) show
0 228 moveto (6685   uint feature;                 // feature flags from CPUID instruction) show
0 216 moveto (6686   uchar reserved[8];) show
0 204 moveto (6687 };) show
0 192 moveto (6688 ) show
0 180 moveto (6689 struct mpioapic {       // I/O APIC table entry) show
0 168 moveto (6690   uchar type;                   // entry type \(2\)) show
0 156 moveto (6691   uchar apicno;                 // I/O APIC id) show
0 144 moveto (6692   uchar version;                // I/O APIC version) show
0 132 moveto (6693   uchar flags;                  // I/O APIC flags) show
0 120 moveto (6694   uint *addr;                  // I/O APIC address) show
0 108 moveto (6695 };) show
0 96 moveto (6696 ) show
0 84 moveto (6697 ) show
0 72 moveto (6698 ) show
0 60 moveto (6699 ) show
0 24 moveto (Sheet 66) show
grestore
restore
showpage
%%Page: 75 75
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mp.h  Page 2) show
0 648 moveto (6700 // Table entry types) show
0 636 moveto (6701 #define MPPROC    0x00  // One per processor) show
0 624 moveto (6702 #define MPBUS     0x01  // One per bus) show
0 612 moveto (6703 #define MPIOAPIC  0x02  // One per I/O APIC) show
0 600 moveto (6704 #define MPIOINTR  0x03  // One per bus interrupt source) show
0 588 moveto (6705 #define MPLINTR   0x04  // One per system interrupt source) show
0 576 moveto (6706 ) show
0 564 moveto (6707 // Blank page.) show
0 552 moveto (6708 ) show
0 540 moveto (6709 ) show
0 528 moveto (6710 ) show
0 516 moveto (6711 ) show
0 504 moveto (6712 ) show
0 492 moveto (6713 ) show
0 480 moveto (6714 ) show
0 468 moveto (6715 ) show
0 456 moveto (6716 ) show
0 444 moveto (6717 ) show
0 432 moveto (6718 ) show
0 420 moveto (6719 ) show
0 408 moveto (6720 ) show
0 396 moveto (6721 ) show
0 384 moveto (6722 ) show
0 372 moveto (6723 ) show
0 360 moveto (6724 ) show
0 348 moveto (6725 ) show
0 336 moveto (6726 ) show
0 324 moveto (6727 ) show
0 312 moveto (6728 ) show
0 300 moveto (6729 ) show
0 288 moveto (6730 ) show
0 276 moveto (6731 ) show
0 264 moveto (6732 ) show
0 252 moveto (6733 ) show
0 240 moveto (6734 ) show
0 228 moveto (6735 ) show
0 216 moveto (6736 ) show
0 204 moveto (6737 ) show
0 192 moveto (6738 ) show
0 180 moveto (6739 ) show
0 168 moveto (6740 ) show
0 156 moveto (6741 ) show
0 144 moveto (6742 ) show
0 132 moveto (6743 ) show
0 120 moveto (6744 ) show
0 108 moveto (6745 ) show
0 96 moveto (6746 ) show
0 84 moveto (6747 ) show
0 72 moveto (6748 ) show
0 60 moveto (6749 ) show
0 24 moveto (Sheet 67) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mp.c  Page 1) show
0 648 moveto (6750 // Multiprocessor support) show
0 636 moveto (6751 // Search memory for MP description structures.) show
0 624 moveto (6752 // http://developer.intel.com/design/pentium/datashts/24201606.pdf) show
0 612 moveto (6753 ) show
0 600 moveto (6754 #include "types.h") show
0 588 moveto (6755 #include "defs.h") show
0 576 moveto (6756 #include "param.h") show
0 564 moveto (6757 #include "memlayout.h") show
0 552 moveto (6758 #include "mp.h") show
0 540 moveto (6759 #include "x86.h") show
0 528 moveto (6760 #include "mmu.h") show
0 516 moveto (6761 #include "proc.h") show
0 504 moveto (6762 ) show
0 492 moveto (6763 struct cpu cpus[NCPU];) show
0 480 moveto (6764 static struct cpu *bcpu;) show
0 468 moveto (6765 int ismp;) show
0 456 moveto (6766 int ncpu;) show
0 444 moveto (6767 uchar ioapicid;) show
0 432 moveto (6768 ) show
0 420 moveto (6769 int) show
0 408 moveto (6770 mpbcpu\(void\)) show
0 396 moveto (6771 {) show
0 384 moveto (6772   return bcpu-cpus;) show
0 372 moveto (6773 }) show
0 360 moveto (6774 ) show
0 348 moveto (6775 static uchar) show
0 336 moveto (6776 sum\(uchar *addr, int len\)) show
0 324 moveto (6777 {) show
0 312 moveto (6778   int i, sum;) show
0 300 moveto (6779 ) show
0 288 moveto (6780   sum = 0;) show
0 276 moveto (6781   for\(i=0; i<len; i++\)) show
0 264 moveto (6782     sum += addr[i];) show
0 252 moveto (6783   return sum;) show
0 240 moveto (6784 }) show
0 228 moveto (6785 ) show
0 216 moveto (6786 // Look for an MP structure in the len bytes at addr.) show
0 204 moveto (6787 static struct mp*) show
0 192 moveto (6788 mpsearch1\(uint a, int len\)) show
0 180 moveto (6789 {) show
0 168 moveto (6790   uchar *e, *p, *addr;) show
0 156 moveto (6791 ) show
0 144 moveto (6792   addr = p2v\(a\);) show
0 132 moveto (6793   e = addr+len;) show
0 120 moveto (6794   for\(p = addr; p < e; p += sizeof\(struct mp\)\)) show
0 108 moveto (6795     if\(memcmp\(p, "_MP_", 4\) == 0 && sum\(p, sizeof\(struct mp\)\) == 0\)) show
0 96 moveto (6796       return \(struct mp*\)p;) show
0 84 moveto (6797   return 0;) show
0 72 moveto (6798 }) show
0 60 moveto (6799 ) show
0 24 moveto (Sheet 67) show
grestore
restore
showpage
%%Page: 76 76
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mp.c  Page 2) show
0 648 moveto (6800 // Search for the MP Floating Pointer Structure, which according to the) show
0 636 moveto (6801 // spec is in one of the following three locations:) show
0 624 moveto (6802 // 1\) in the first KB of the EBDA;) show
0 612 moveto (6803 // 2\) in the last KB of system base memory;) show
0 600 moveto (6804 // 3\) in the BIOS ROM between 0xE0000 and 0xFFFFF.) show
0 588 moveto (6805 static struct mp*) show
0 576 moveto (6806 mpsearch\(void\)) show
0 564 moveto (6807 {) show
0 552 moveto (6808   uchar *bda;) show
0 540 moveto (6809   uint p;) show
0 528 moveto (6810   struct mp *mp;) show
0 516 moveto (6811 ) show
0 504 moveto (6812   bda = \(uchar *\) P2V\(0x400\);) show
0 492 moveto (6813   if\(\(p = \(\(bda[0x0F]<<8\)| bda[0x0E]\) << 4\)\){) show
0 480 moveto (6814     if\(\(mp = mpsearch1\(p, 1024\)\)\)) show
0 468 moveto (6815       return mp;) show
0 456 moveto (6816   } else {) show
0 444 moveto (6817     p = \(\(bda[0x14]<<8\)|bda[0x13]\)*1024;) show
0 432 moveto (6818     if\(\(mp = mpsearch1\(p-1024, 1024\)\)\)) show
0 420 moveto (6819       return mp;) show
0 408 moveto (6820   }) show
0 396 moveto (6821   return mpsearch1\(0xF0000, 0x10000\);) show
0 384 moveto (6822 }) show
0 372 moveto (6823 ) show
0 360 moveto (6824 // Search for an MP configuration table.  For now,) show
0 348 moveto (6825 // don't accept the default configurations \(physaddr == 0\).) show
0 336 moveto (6826 // Check for correct signature, calculate the checksum and,) show
0 324 moveto (6827 // if correct, check the version.) show
0 312 moveto (6828 // To do: check extended table checksum.) show
0 300 moveto (6829 static struct mpconf*) show
0 288 moveto (6830 mpconfig\(struct mp **pmp\)) show
0 276 moveto (6831 {) show
0 264 moveto (6832   struct mpconf *conf;) show
0 252 moveto (6833   struct mp *mp;) show
0 240 moveto (6834 ) show
0 228 moveto (6835   if\(\(mp = mpsearch\(\)\) == 0 || mp->physaddr == 0\)) show
0 216 moveto (6836     return 0;) show
0 204 moveto (6837   conf = \(struct mpconf*\) p2v\(\(uint\) mp->physaddr\);) show
0 192 moveto (6838   if\(memcmp\(conf, "PCMP", 4\) != 0\)) show
0 180 moveto (6839     return 0;) show
0 168 moveto (6840   if\(conf->version != 1 && conf->version != 4\)) show
0 156 moveto (6841     return 0;) show
0 144 moveto (6842   if\(sum\(\(uchar*\)conf, conf->length\) != 0\)) show
0 132 moveto (6843     return 0;) show
0 120 moveto (6844   *pmp = mp;) show
0 108 moveto (6845   return conf;) show
0 96 moveto (6846 }) show
0 84 moveto (6847 ) show
0 72 moveto (6848 ) show
0 60 moveto (6849 ) show
0 24 moveto (Sheet 68) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mp.c  Page 3) show
0 648 moveto (6850 void) show
0 636 moveto (6851 mpinit\(void\)) show
0 624 moveto (6852 {) show
0 612 moveto (6853   uchar *p, *e;) show
0 600 moveto (6854   struct mp *mp;) show
0 588 moveto (6855   struct mpconf *conf;) show
0 576 moveto (6856   struct mpproc *proc;) show
0 564 moveto (6857   struct mpioapic *ioapic;) show
0 552 moveto (6858 ) show
0 540 moveto (6859   bcpu = &cpus[0];) show
0 528 moveto (6860   if\(\(conf = mpconfig\(&mp\)\) == 0\)) show
0 516 moveto (6861     return;) show
0 504 moveto (6862   ismp = 1;) show
0 492 moveto (6863   lapic = \(uint*\)conf->lapicaddr;) show
0 480 moveto (6864   for\(p=\(uchar*\)\(conf+1\), e=\(uchar*\)conf+conf->length; p<e; \){) show
0 468 moveto (6865     switch\(*p\){) show
0 456 moveto (6866     case MPPROC:) show
0 444 moveto (6867       proc = \(struct mpproc*\)p;) show
0 432 moveto (6868       if\(ncpu != proc->apicid\){) show
0 420 moveto (6869         cprintf\("mpinit: ncpu=%d apicid=%d\\n", ncpu, proc->apicid\);) show
0 408 moveto (6870         ismp = 0;) show
0 396 moveto (6871       }) show
0 384 moveto (6872       if\(proc->flags & MPBOOT\)) show
0 372 moveto (6873         bcpu = &cpus[ncpu];) show
0 360 moveto (6874       cpus[ncpu].id = ncpu;) show
0 348 moveto (6875       ncpu++;) show
0 336 moveto (6876       p += sizeof\(struct mpproc\);) show
0 324 moveto (6877       continue;) show
0 312 moveto (6878     case MPIOAPIC:) show
0 300 moveto (6879       ioapic = \(struct mpioapic*\)p;) show
0 288 moveto (6880       ioapicid = ioapic->apicno;) show
0 276 moveto (6881       p += sizeof\(struct mpioapic\);) show
0 264 moveto (6882       continue;) show
0 252 moveto (6883     case MPBUS:) show
0 240 moveto (6884     case MPIOINTR:) show
0 228 moveto (6885     case MPLINTR:) show
0 216 moveto (6886       p += 8;) show
0 204 moveto (6887       continue;) show
0 192 moveto (6888     default:) show
0 180 moveto (6889       cprintf\("mpinit: unknown config type %x\\n", *p\);) show
0 168 moveto (6890       ismp = 0;) show
0 156 moveto (6891     }) show
0 144 moveto (6892   }) show
0 132 moveto (6893   if\(!ismp\){) show
0 120 moveto (6894     // Didn't like what we found; fall back to no MP.) show
0 108 moveto (6895     ncpu = 1;) show
0 96 moveto (6896     lapic = 0;) show
0 84 moveto (6897     ioapicid = 0;) show
0 72 moveto (6898     return;) show
0 60 moveto (6899   }) show
0 24 moveto (Sheet 68) show
grestore
restore
showpage
%%Page: 77 77
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/mp.c  Page 4) show
0 648 moveto (6900   if\(mp->imcrp\){) show
0 636 moveto (6901     // Bochs doesn't support IMCR, so this doesn't run on Bochs.) show
0 624 moveto (6902     // But it would on real hardware.) show
0 612 moveto (6903     outb\(0x22, 0x70\);   // Select IMCR) show
0 600 moveto (6904     outb\(0x23, inb\(0x23\) | 1\);  // Mask external interrupts.) show
0 588 moveto (6905   }) show
0 576 moveto (6906 }) show
0 564 moveto (6907 ) show
0 552 moveto (6908 ) show
0 540 moveto (6909 ) show
0 528 moveto (6910 ) show
0 516 moveto (6911 ) show
0 504 moveto (6912 ) show
0 492 moveto (6913 ) show
0 480 moveto (6914 ) show
0 468 moveto (6915 ) show
0 456 moveto (6916 ) show
0 444 moveto (6917 ) show
0 432 moveto (6918 ) show
0 420 moveto (6919 ) show
0 408 moveto (6920 ) show
0 396 moveto (6921 ) show
0 384 moveto (6922 ) show
0 372 moveto (6923 ) show
0 360 moveto (6924 ) show
0 348 moveto (6925 ) show
0 336 moveto (6926 ) show
0 324 moveto (6927 ) show
0 312 moveto (6928 ) show
0 300 moveto (6929 ) show
0 288 moveto (6930 ) show
0 276 moveto (6931 ) show
0 264 moveto (6932 ) show
0 252 moveto (6933 ) show
0 240 moveto (6934 ) show
0 228 moveto (6935 ) show
0 216 moveto (6936 ) show
0 204 moveto (6937 ) show
0 192 moveto (6938 ) show
0 180 moveto (6939 ) show
0 168 moveto (6940 ) show
0 156 moveto (6941 ) show
0 144 moveto (6942 ) show
0 132 moveto (6943 ) show
0 120 moveto (6944 ) show
0 108 moveto (6945 ) show
0 96 moveto (6946 ) show
0 84 moveto (6947 ) show
0 72 moveto (6948 ) show
0 60 moveto (6949 ) show
0 24 moveto (Sheet 69) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/lapic.c  Page 1) show
0 648 moveto (6950 // The local APIC manages internal \(non-I/O\) interrupts.) show
0 636 moveto (6951 // See Chapter 8 & Appendix C of Intel processor manual volume 3.) show
0 624 moveto (6952 // As of 7/26/2016, Intel processor manual Chapter 10 of Volume 3) show
0 612 moveto (6953 ) show
0 600 moveto (6954 #include "types.h") show
0 588 moveto (6955 #include "defs.h") show
0 576 moveto (6956 #include "date.h") show
0 564 moveto (6957 #include "memlayout.h") show
0 552 moveto (6958 #include "traps.h") show
0 540 moveto (6959 #include "mmu.h") show
0 528 moveto (6960 #include "x86.h") show
0 516 moveto (6961 ) show
0 504 moveto (6962 // Local APIC registers, divided by 4 for use as uint[] indices.) show
0 492 moveto (6963 #define ID      \(0x0020/4\)   // ID) show
0 480 moveto (6964 #define VER     \(0x0030/4\)   // Version) show
0 468 moveto (6965 #define TPR     \(0x0080/4\)   // Task Priority) show
0 456 moveto (6966 #define EOI     \(0x00B0/4\)   // EOI) show
0 444 moveto (6967 #define SVR     \(0x00F0/4\)   // Spurious Interrupt Vector) show
0 432 moveto (6968   #define ENABLE     0x00000100   // Unit Enable) show
0 420 moveto (6969 #define ESR     \(0x0280/4\)   // Error Status) show
0 408 moveto (6970 #define ICRLO   \(0x0300/4\)   // Interrupt Command) show
0 396 moveto (6971   #define INIT       0x00000500   // INIT/RESET) show
0 384 moveto (6972   #define STARTUP    0x00000600   // Startup IPI) show
0 372 moveto (6973   #define DELIVS     0x00001000   // Delivery status) show
0 360 moveto (6974   #define ASSERT     0x00004000   // Assert interrupt \(vs deassert\)) show
0 348 moveto (6975   #define DEASSERT   0x00000000) show
0 336 moveto (6976   #define LEVEL      0x00008000   // Level triggered) show
0 324 moveto (6977   #define BCAST      0x00080000   // Send to all APICs, including self.) show
0 312 moveto (6978   #define BUSY       0x00001000) show
0 300 moveto (6979   #define FIXED      0x00000000) show
0 288 moveto (6980 #define ICRHI   \(0x0310/4\)   // Interrupt Command [63:32]) show
0 276 moveto (6981 #define TIMER   \(0x0320/4\)   // Local Vector Table 0 \(TIMER\)) show
0 264 moveto (6982   #define X1         0x0000000B   // divide counts by 1) show
0 252 moveto (6983   #define PERIODIC   0x00020000   // Periodic) show
0 240 moveto (6984 #define PCINT   \(0x0340/4\)   // Performance Counter LVT) show
0 228 moveto (6985 #define LINT0   \(0x0350/4\)   // Local Vector Table 1 \(LINT0\)) show
0 216 moveto (6986 #define LINT1   \(0x0360/4\)   // Local Vector Table 2 \(LINT1\)) show
0 204 moveto (6987 #define ERROR   \(0x0370/4\)   // Local Vector Table 3 \(ERROR\)) show
0 192 moveto (6988   #define MASKED     0x00010000   // Interrupt masked) show
0 180 moveto (6989 #define TICR    \(0x0380/4\)   // Timer Initial Count) show
0 168 moveto (6990 #define TCCR    \(0x0390/4\)   // Timer Current Count) show
0 156 moveto (6991 #define TDCR    \(0x03E0/4\)   // Timer Divide Configuration) show
0 144 moveto (6992 ) show
0 132 moveto (6993 volatile uint *lapic;  // Initialized in mp.c) show
0 120 moveto (6994 ) show
0 108 moveto (6995 static void) show
0 96 moveto (6996 lapicw\(int index, int value\)) show
0 84 moveto (6997 {) show
0 72 moveto (6998   lapic[index] = value;) show
0 60 moveto (6999   lapic[ID];  // wait for write to finish, by reading) show
0 24 moveto (Sheet 69) show
grestore
restore
showpage
%%Page: 78 78
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/lapic.c  Page 2) show
0 648 moveto (7000 }) show
0 636 moveto (7001 ) show
0 624 moveto (7002 void) show
0 612 moveto (7003 lapicinit\(void\)) show
0 600 moveto (7004 {) show
0 588 moveto (7005   if\(!lapic\)) show
0 576 moveto (7006     return;) show
0 564 moveto (7007 ) show
0 552 moveto (7008   // Enable local APIC; set spurious interrupt vector.) show
0 540 moveto (7009   lapicw\(SVR, ENABLE | \(T_IRQ0 + IRQ_SPURIOUS\)\);) show
0 528 moveto (7010 ) show
0 516 moveto (7011   // The timer repeatedly counts down at bus frequency) show
0 504 moveto (7012   // from lapic[TICR] and then issues an interrupt.) show
0 492 moveto (7013   // If xv6 cared more about precise timekeeping,) show
0 480 moveto (7014   // TICR would be calibrated using an external time source.) show
0 468 moveto (7015   lapicw\(TDCR, X1\);) show
0 456 moveto (7016   lapicw\(TIMER, PERIODIC | \(T_IRQ0 + IRQ_TIMER\)\);) show
0 444 moveto (7017   lapicw\(TICR, 10000000\);) show
0 432 moveto (7018 ) show
0 420 moveto (7019   // Disable logical interrupt lines.) show
0 408 moveto (7020   lapicw\(LINT0, MASKED\);) show
0 396 moveto (7021   lapicw\(LINT1, MASKED\);) show
0 384 moveto (7022 ) show
0 372 moveto (7023   // Disable performance counter overflow interrupts) show
0 360 moveto (7024   // on machines that provide that interrupt entry.) show
0 348 moveto (7025   if\(\(\(lapic[VER]>>16\) & 0xFF\) >= 4\)) show
0 336 moveto (7026     lapicw\(PCINT, MASKED\);) show
0 324 moveto (7027 ) show
0 312 moveto (7028   // Map error interrupt to IRQ_ERROR.) show
0 300 moveto (7029   lapicw\(ERROR, T_IRQ0 + IRQ_ERROR\);) show
0 288 moveto (7030 ) show
0 276 moveto (7031   // Clear error status register \(requires back-to-back writes\).) show
0 264 moveto (7032   lapicw\(ESR, 0\);) show
0 252 moveto (7033   lapicw\(ESR, 0\);) show
0 240 moveto (7034 ) show
0 228 moveto (7035   // Ack any outstanding interrupts.) show
0 216 moveto (7036   lapicw\(EOI, 0\);) show
0 204 moveto (7037 ) show
0 192 moveto (7038   // Send an Init Level De-Assert to synchronise arbitration ID's.) show
0 180 moveto (7039   lapicw\(ICRHI, 0\);) show
0 168 moveto (7040   lapicw\(ICRLO, BCAST | INIT | LEVEL\);) show
0 156 moveto (7041   while\(lapic[ICRLO] & DELIVS\)) show
0 144 moveto (7042     ;) show
0 132 moveto (7043 ) show
0 120 moveto (7044   // Enable interrupts on the APIC \(but not on the processor\).) show
0 108 moveto (7045   lapicw\(TPR, 0\);) show
0 96 moveto (7046 }) show
0 84 moveto (7047 ) show
0 72 moveto (7048 ) show
0 60 moveto (7049 ) show
0 24 moveto (Sheet 70) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/lapic.c  Page 3) show
0 648 moveto (7050 int) show
0 636 moveto (7051 cpunum\(void\)) show
0 624 moveto (7052 {) show
0 612 moveto (7053   // Cannot call cpu when interrupts are enabled:) show
0 600 moveto (7054   // result not guaranteed to last long enough to be used!) show
0 588 moveto (7055   // Would prefer to panic but even printing is chancy here:) show
0 576 moveto (7056   // almost everything, including cprintf and panic, calls cpu,) show
0 564 moveto (7057   // often indirectly through acquire and release.) show
0 552 moveto (7058   if\(readeflags\(\)&FL_IF\){) show
0 540 moveto (7059     static int n;) show
0 528 moveto (7060     if\(n++ == 0\)) show
0 516 moveto (7061       cprintf\("cpu called from %x with interrupts enabled\\n",) show
0 504 moveto (7062         __builtin_return_address\(0\)\);) show
0 492 moveto (7063   }) show
0 480 moveto (7064 ) show
0 468 moveto (7065   if\(lapic\)) show
0 456 moveto (7066     return lapic[ID]>>24;) show
0 444 moveto (7067   return 0;) show
0 432 moveto (7068 }) show
0 420 moveto (7069 ) show
0 408 moveto (7070 // Acknowledge interrupt.) show
0 396 moveto (7071 void) show
0 384 moveto (7072 lapiceoi\(void\)) show
0 372 moveto (7073 {) show
0 360 moveto (7074   if\(lapic\)) show
0 348 moveto (7075     lapicw\(EOI, 0\);) show
0 336 moveto (7076 }) show
0 324 moveto (7077 ) show
0 312 moveto (7078 // Spin for a given number of microseconds.) show
0 300 moveto (7079 // On real hardware would want to tune this dynamically.) show
0 288 moveto (7080 void) show
0 276 moveto (7081 microdelay\(int us\)) show
0 264 moveto (7082 {) show
0 252 moveto (7083 }) show
0 240 moveto (7084 ) show
0 228 moveto (7085 #define CMOS_PORT    0x70) show
0 216 moveto (7086 #define CMOS_RETURN  0x71) show
0 204 moveto (7087 ) show
0 192 moveto (7088 // Start additional processor running entry code at addr.) show
0 180 moveto (7089 // See Appendix B of MultiProcessor Specification.) show
0 168 moveto (7090 void) show
0 156 moveto (7091 lapicstartap\(uchar apicid, uint addr\)) show
0 144 moveto (7092 {) show
0 132 moveto (7093   int i;) show
0 120 moveto (7094   ushort *wrv;) show
0 108 moveto (7095 ) show
0 96 moveto (7096   // "The BSP must initialize CMOS shutdown code to 0AH) show
0 84 moveto (7097   // and the warm reset vector \(DWORD based at 40:67\) to point at) show
0 72 moveto (7098   // the AP startup code prior to the [universal startup algorithm].") show
0 60 moveto (7099   outb\(CMOS_PORT, 0xF\);  // offset 0xF is shutdown code) show
0 24 moveto (Sheet 70) show
grestore
restore
showpage
%%Page: 79 79
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/lapic.c  Page 4) show
0 648 moveto (7100   outb\(CMOS_PORT+1, 0x0A\);) show
0 636 moveto (7101   wrv = \(ushort*\)P2V\(\(0x40<<4 | 0x67\)\);  // Warm reset vector) show
0 624 moveto (7102   wrv[0] = 0;) show
0 612 moveto (7103   wrv[1] = addr >> 4;) show
0 600 moveto (7104 ) show
0 588 moveto (7105   // "Universal startup algorithm.") show
0 576 moveto (7106   // Send INIT \(level-triggered\) interrupt to reset other CPU.) show
0 564 moveto (7107   lapicw\(ICRHI, apicid<<24\);) show
0 552 moveto (7108   lapicw\(ICRLO, INIT | LEVEL | ASSERT\);) show
0 540 moveto (7109   microdelay\(200\);) show
0 528 moveto (7110   lapicw\(ICRLO, INIT | LEVEL\);) show
0 516 moveto (7111   microdelay\(100\);    // should be 10ms, but too slow in Bochs!) show
0 504 moveto (7112 ) show
0 492 moveto (7113   // Send startup IPI \(twice!\) to enter code.) show
0 480 moveto (7114   // Regular hardware is supposed to only accept a STARTUP) show
0 468 moveto (7115   // when it is in the halted state due to an INIT.  So the second) show
0 456 moveto (7116   // should be ignored, but it is part of the official Intel algorithm.) show
0 444 moveto (7117   // Bochs complains about the second one.  Too bad for Bochs.) show
0 432 moveto (7118   for\(i = 0; i < 2; i++\){) show
0 420 moveto (7119     lapicw\(ICRHI, apicid<<24\);) show
0 408 moveto (7120     lapicw\(ICRLO, STARTUP | \(addr>>12\)\);) show
0 396 moveto (7121     microdelay\(200\);) show
0 384 moveto (7122   }) show
0 372 moveto (7123 }) show
0 360 moveto (7124 ) show
0 348 moveto (7125 #define CMOS_STATA   0x0a) show
0 336 moveto (7126 #define CMOS_STATB   0x0b) show
0 324 moveto (7127 #define CMOS_UIP    \(1 << 7\)        // RTC update in progress) show
0 312 moveto (7128 ) show
0 300 moveto (7129 #define SECS    0x00) show
0 288 moveto (7130 #define MINS    0x02) show
0 276 moveto (7131 #define HOURS   0x04) show
0 264 moveto (7132 #define DAY     0x07) show
0 252 moveto (7133 #define MONTH   0x08) show
0 240 moveto (7134 #define YEAR    0x09) show
0 228 moveto (7135 ) show
0 216 moveto (7136 static uint cmos_read\(uint reg\)) show
0 204 moveto (7137 {) show
0 192 moveto (7138   outb\(CMOS_PORT,  reg\);) show
0 180 moveto (7139   microdelay\(200\);) show
0 168 moveto (7140 ) show
0 156 moveto (7141   return inb\(CMOS_RETURN\);) show
0 144 moveto (7142 }) show
0 132 moveto (7143 ) show
0 120 moveto (7144 ) show
0 108 moveto (7145 ) show
0 96 moveto (7146 ) show
0 84 moveto (7147 ) show
0 72 moveto (7148 ) show
0 60 moveto (7149 ) show
0 24 moveto (Sheet 71) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/lapic.c  Page 5) show
0 648 moveto (7150 static void fill_rtcdate\(struct rtcdate *r\)) show
0 636 moveto (7151 {) show
0 624 moveto (7152   r->second = cmos_read\(SECS\);) show
0 612 moveto (7153   r->minute = cmos_read\(MINS\);) show
0 600 moveto (7154   r->hour   = cmos_read\(HOURS\);) show
0 588 moveto (7155   r->day    = cmos_read\(DAY\);) show
0 576 moveto (7156   r->month  = cmos_read\(MONTH\);) show
0 564 moveto (7157   r->year   = cmos_read\(YEAR\);) show
0 552 moveto (7158 }) show
0 540 moveto (7159 ) show
0 528 moveto (7160 // qemu seems to use 24-hour GWT and the values are BCD encoded) show
0 516 moveto (7161 void cmostime\(struct rtcdate *r\)) show
0 504 moveto (7162 {) show
0 492 moveto (7163   struct rtcdate t1, t2;) show
0 480 moveto (7164   int sb, bcd;) show
0 468 moveto (7165 ) show
0 456 moveto (7166   sb = cmos_read\(CMOS_STATB\);) show
0 444 moveto (7167 ) show
0 432 moveto (7168   bcd = \(sb & \(1 << 2\)\) == 0;) show
0 420 moveto (7169 ) show
0 408 moveto (7170   // make sure CMOS doesn't modify time while we read it) show
0 396 moveto (7171   for \(;;\) {) show
0 384 moveto (7172     fill_rtcdate\(&t1\);) show
0 372 moveto (7173     if \(cmos_read\(CMOS_STATA\) & CMOS_UIP\)) show
0 360 moveto (7174         continue;) show
0 348 moveto (7175     fill_rtcdate\(&t2\);) show
0 336 moveto (7176     if \(memcmp\(&t1, &t2, sizeof\(t1\)\) == 0\)) show
0 324 moveto (7177       break;) show
0 312 moveto (7178   }) show
0 300 moveto (7179 ) show
0 288 moveto (7180   // convert) show
0 276 moveto (7181   if \(bcd\) {) show
0 264 moveto (7182 #define    CONV\(x\)     \(t1.x = \(\(t1.x >> 4\) * 10\) + \(t1.x & 0xf\)\)) show
0 252 moveto (7183     CONV\(second\);) show
0 240 moveto (7184     CONV\(minute\);) show
0 228 moveto (7185     CONV\(hour  \);) show
0 216 moveto (7186     CONV\(day   \);) show
0 204 moveto (7187     CONV\(month \);) show
0 192 moveto (7188     CONV\(year  \);) show
0 180 moveto (7189 #undef     CONV) show
0 168 moveto (7190   }) show
0 156 moveto (7191 ) show
0 144 moveto (7192   *r = t1;) show
0 132 moveto (7193   r->year += 2000;) show
0 120 moveto (7194 }) show
0 108 moveto (7195 ) show
0 96 moveto (7196 ) show
0 84 moveto (7197 ) show
0 72 moveto (7198 ) show
0 60 moveto (7199 ) show
0 24 moveto (Sheet 71) show
grestore
restore
showpage
%%Page: 80 80
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/ioapic.c  Page 1) show
0 648 moveto (7200 // The I/O APIC manages hardware interrupts for an SMP system.) show
0 636 moveto (7201 // http://www.intel.com/design/chipsets/datashts/29056601.pdf) show
0 624 moveto (7202 // See also picirq.c.) show
0 612 moveto (7203 ) show
0 600 moveto (7204 #include "types.h") show
0 588 moveto (7205 #include "defs.h") show
0 576 moveto (7206 #include "traps.h") show
0 564 moveto (7207 ) show
0 552 moveto (7208 #define IOAPIC  0xFEC00000   // Default physical address of IO APIC) show
0 540 moveto (7209 ) show
0 528 moveto (7210 #define REG_ID     0x00  // Register index: ID) show
0 516 moveto (7211 #define REG_VER    0x01  // Register index: version) show
0 504 moveto (7212 #define REG_TABLE  0x10  // Redirection table base) show
0 492 moveto (7213 ) show
0 480 moveto (7214 // The redirection table starts at REG_TABLE and uses) show
0 468 moveto (7215 // two registers to configure each interrupt.) show
0 456 moveto (7216 // The first \(low\) register in a pair contains configuration bits.) show
0 444 moveto (7217 // The second \(high\) register contains a bitmask telling which) show
0 432 moveto (7218 // CPUs can serve that interrupt.) show
0 420 moveto (7219 #define INT_DISABLED   0x00010000  // Interrupt disabled) show
0 408 moveto (7220 #define INT_LEVEL      0x00008000  // Level-triggered \(vs edge-\)) show
0 396 moveto (7221 #define INT_ACTIVELOW  0x00002000  // Active low \(vs high\)) show
0 384 moveto (7222 #define INT_LOGICAL    0x00000800  // Destination is CPU id \(vs APIC ID\)) show
0 372 moveto (7223 ) show
0 360 moveto (7224 volatile struct ioapic *ioapic;) show
0 348 moveto (7225 ) show
0 336 moveto (7226 // IO APIC MMIO structure: write reg, then read or write data.) show
0 324 moveto (7227 struct ioapic {) show
0 312 moveto (7228   uint reg;) show
0 300 moveto (7229   uint pad[3];) show
0 288 moveto (7230   uint data;) show
0 276 moveto (7231 };) show
0 264 moveto (7232 ) show
0 252 moveto (7233 static uint) show
0 240 moveto (7234 ioapicread\(int reg\)) show
0 228 moveto (7235 {) show
0 216 moveto (7236   ioapic->reg = reg;) show
0 204 moveto (7237   return ioapic->data;) show
0 192 moveto (7238 }) show
0 180 moveto (7239 ) show
0 168 moveto (7240 static void) show
0 156 moveto (7241 ioapicwrite\(int reg, uint data\)) show
0 144 moveto (7242 {) show
0 132 moveto (7243   ioapic->reg = reg;) show
0 120 moveto (7244   ioapic->data = data;) show
0 108 moveto (7245 }) show
0 96 moveto (7246 ) show
0 84 moveto (7247 ) show
0 72 moveto (7248 ) show
0 60 moveto (7249 ) show
0 24 moveto (Sheet 72) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/ioapic.c  Page 2) show
0 648 moveto (7250 void) show
0 636 moveto (7251 ioapicinit\(void\)) show
0 624 moveto (7252 {) show
0 612 moveto (7253   int i, id, maxintr;) show
0 600 moveto (7254 ) show
0 588 moveto (7255   if\(!ismp\)) show
0 576 moveto (7256     return;) show
0 564 moveto (7257 ) show
0 552 moveto (7258   ioapic = \(volatile struct ioapic*\)IOAPIC;) show
0 540 moveto (7259   maxintr = \(ioapicread\(REG_VER\) >> 16\) & 0xFF;) show
0 528 moveto (7260   id = ioapicread\(REG_ID\) >> 24;) show
0 516 moveto (7261   if\(id != ioapicid\)) show
0 504 moveto (7262     cprintf\("ioapicinit: id isn't equal to ioapicid; not a MP\\n"\);) show
0 492 moveto (7263 ) show
0 480 moveto (7264   // Mark all interrupts edge-triggered, active high, disabled,) show
0 468 moveto (7265   // and not routed to any CPUs.) show
0 456 moveto (7266   for\(i = 0; i <= maxintr; i++\){) show
0 444 moveto (7267     ioapicwrite\(REG_TABLE+2*i, INT_DISABLED | \(T_IRQ0 + i\)\);) show
0 432 moveto (7268     ioapicwrite\(REG_TABLE+2*i+1, 0\);) show
0 420 moveto (7269   }) show
0 408 moveto (7270 }) show
0 396 moveto (7271 ) show
0 384 moveto (7272 void) show
0 372 moveto (7273 ioapicenable\(int irq, int cpunum\)) show
0 360 moveto (7274 {) show
0 348 moveto (7275   if\(!ismp\)) show
0 336 moveto (7276     return;) show
0 324 moveto (7277 ) show
0 312 moveto (7278   // Mark interrupt edge-triggered, active high,) show
0 300 moveto (7279   // enabled, and routed to the given cpunum,) show
0 288 moveto (7280   // which happens to be that cpu's APIC ID.) show
0 276 moveto (7281   ioapicwrite\(REG_TABLE+2*irq, T_IRQ0 + irq\);) show
0 264 moveto (7282   ioapicwrite\(REG_TABLE+2*irq+1, cpunum << 24\);) show
0 252 moveto (7283 }) show
0 240 moveto (7284 ) show
0 228 moveto (7285 ) show
0 216 moveto (7286 ) show
0 204 moveto (7287 ) show
0 192 moveto (7288 ) show
0 180 moveto (7289 ) show
0 168 moveto (7290 ) show
0 156 moveto (7291 ) show
0 144 moveto (7292 ) show
0 132 moveto (7293 ) show
0 120 moveto (7294 ) show
0 108 moveto (7295 ) show
0 96 moveto (7296 ) show
0 84 moveto (7297 ) show
0 72 moveto (7298 ) show
0 60 moveto (7299 ) show
0 24 moveto (Sheet 72) show
grestore
restore
showpage
%%Page: 81 81
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/picirq.c  Page 1) show
0 648 moveto (7300 // Intel 8259A programmable interrupt controllers.) show
0 636 moveto (7301 ) show
0 624 moveto (7302 #include "types.h") show
0 612 moveto (7303 #include "x86.h") show
0 600 moveto (7304 #include "traps.h") show
0 588 moveto (7305 ) show
0 576 moveto (7306 // I/O Addresses of the two programmable interrupt controllers) show
0 564 moveto (7307 #define IO_PIC1         0x20    // Master \(IRQs 0-7\)) show
0 552 moveto (7308 #define IO_PIC2         0xA0    // Slave \(IRQs 8-15\)) show
0 540 moveto (7309 ) show
0 528 moveto (7310 #define IRQ_SLAVE       2       // IRQ at which slave connects to master) show
0 516 moveto (7311 ) show
0 504 moveto (7312 // Current IRQ mask.) show
0 492 moveto (7313 // Initial IRQ mask has interrupt 2 enabled \(for slave 8259A\).) show
0 480 moveto (7314 static ushort irqmask = 0xFFFF & ~\(1<<IRQ_SLAVE\);) show
0 468 moveto (7315 ) show
0 456 moveto (7316 static void) show
0 444 moveto (7317 picsetmask\(ushort mask\)) show
0 432 moveto (7318 {) show
0 420 moveto (7319   irqmask = mask;) show
0 408 moveto (7320   outb\(IO_PIC1+1, mask\);) show
0 396 moveto (7321   outb\(IO_PIC2+1, mask >> 8\);) show
0 384 moveto (7322 }) show
0 372 moveto (7323 ) show
0 360 moveto (7324 void) show
0 348 moveto (7325 picenable\(int irq\)) show
0 336 moveto (7326 {) show
0 324 moveto (7327   picsetmask\(irqmask & ~\(1<<irq\)\);) show
0 312 moveto (7328 }) show
0 300 moveto (7329 ) show
0 288 moveto (7330 // Initialize the 8259A interrupt controllers.) show
0 276 moveto (7331 void) show
0 264 moveto (7332 picinit\(void\)) show
0 252 moveto (7333 {) show
0 240 moveto (7334   // mask all interrupts) show
0 228 moveto (7335   outb\(IO_PIC1+1, 0xFF\);) show
0 216 moveto (7336   outb\(IO_PIC2+1, 0xFF\);) show
0 204 moveto (7337 ) show
0 192 moveto (7338   // Set up master \(8259A-1\)) show
0 180 moveto (7339 ) show
0 168 moveto (7340   // ICW1:  0001g0hi) show
0 156 moveto (7341   //    g:  0 = edge triggering, 1 = level triggering) show
0 144 moveto (7342   //    h:  0 = cascaded PICs, 1 = master only) show
0 132 moveto (7343   //    i:  0 = no ICW4, 1 = ICW4 required) show
0 120 moveto (7344   outb\(IO_PIC1, 0x11\);) show
0 108 moveto (7345 ) show
0 96 moveto (7346   // ICW2:  Vector offset) show
0 84 moveto (7347   outb\(IO_PIC1+1, T_IRQ0\);) show
0 72 moveto (7348 ) show
0 60 moveto (7349 ) show
0 24 moveto (Sheet 73) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/picirq.c  Page 2) show
0 648 moveto (7350   // ICW3:  \(master PIC\) bit mask of IR lines connected to slaves) show
0 636 moveto (7351   //        \(slave PIC\) 3-bit # of slave's connection to master) show
0 624 moveto (7352   outb\(IO_PIC1+1, 1<<IRQ_SLAVE\);) show
0 612 moveto (7353 ) show
0 600 moveto (7354   // ICW4:  000nbmap) show
0 588 moveto (7355   //    n:  1 = special fully nested mode) show
0 576 moveto (7356   //    b:  1 = buffered mode) show
0 564 moveto (7357   //    m:  0 = slave PIC, 1 = master PIC) show
0 552 moveto (7358   //      \(ignored when b is 0, as the master/slave role) show
0 540 moveto (7359   //      can be hardwired\).) show
0 528 moveto (7360   //    a:  1 = Automatic EOI mode) show
0 516 moveto (7361   //    p:  0 = MCS-80/85 mode, 1 = intel x86 mode) show
0 504 moveto (7362   outb\(IO_PIC1+1, 0x3\);) show
0 492 moveto (7363 ) show
0 480 moveto (7364   // Set up slave \(8259A-2\)) show
0 468 moveto (7365   outb\(IO_PIC2, 0x11\);                  // ICW1) show
0 456 moveto (7366   outb\(IO_PIC2+1, T_IRQ0 + 8\);      // ICW2) show
0 444 moveto (7367   outb\(IO_PIC2+1, IRQ_SLAVE\);           // ICW3) show
0 432 moveto (7368   // NB Automatic EOI mode doesn't tend to work on the slave.) show
0 420 moveto (7369   // Linux source code says it's "to be investigated".) show
0 408 moveto (7370   outb\(IO_PIC2+1, 0x3\);                 // ICW4) show
0 396 moveto (7371 ) show
0 384 moveto (7372   // OCW3:  0ef01prs) show
0 372 moveto (7373   //   ef:  0x = NOP, 10 = clear specific mask, 11 = set specific mask) show
0 360 moveto (7374   //    p:  0 = no polling, 1 = polling mode) show
0 348 moveto (7375   //   rs:  0x = NOP, 10 = read IRR, 11 = read ISR) show
0 336 moveto (7376   outb\(IO_PIC1, 0x68\);             // clear specific mask) show
0 324 moveto (7377   outb\(IO_PIC1, 0x0a\);             // read IRR by default) show
0 312 moveto (7378 ) show
0 300 moveto (7379   outb\(IO_PIC2, 0x68\);             // OCW3) show
0 288 moveto (7380   outb\(IO_PIC2, 0x0a\);             // OCW3) show
0 276 moveto (7381 ) show
0 264 moveto (7382   if\(irqmask != 0xFFFF\)) show
0 252 moveto (7383     picsetmask\(irqmask\);) show
0 240 moveto (7384 }) show
0 228 moveto (7385 ) show
0 216 moveto (7386 ) show
0 204 moveto (7387 ) show
0 192 moveto (7388 ) show
0 180 moveto (7389 ) show
0 168 moveto (7390 ) show
0 156 moveto (7391 ) show
0 144 moveto (7392 ) show
0 132 moveto (7393 ) show
0 120 moveto (7394 ) show
0 108 moveto (7395 ) show
0 96 moveto (7396 ) show
0 84 moveto (7397 ) show
0 72 moveto (7398 ) show
0 60 moveto (7399 ) show
0 24 moveto (Sheet 73) show
grestore
restore
showpage
%%Page: 82 82
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/kbd.h  Page 1) show
0 648 moveto (7400 // PC keyboard interface constants) show
0 636 moveto (7401 ) show
0 624 moveto (7402 #define KBSTATP         0x64    // kbd controller status port\(I\)) show
0 612 moveto (7403 #define KBS_DIB         0x01    // kbd data in buffer) show
0 600 moveto (7404 #define KBDATAP         0x60    // kbd data port\(I\)) show
0 588 moveto (7405 ) show
0 576 moveto (7406 #define NO              0) show
0 564 moveto (7407 ) show
0 552 moveto (7408 #define SHIFT           \(1<<0\)) show
0 540 moveto (7409 #define CTL             \(1<<1\)) show
0 528 moveto (7410 #define ALT             \(1<<2\)) show
0 516 moveto (7411 ) show
0 504 moveto (7412 #define CAPSLOCK        \(1<<3\)) show
0 492 moveto (7413 #define NUMLOCK         \(1<<4\)) show
0 480 moveto (7414 #define SCROLLLOCK      \(1<<5\)) show
0 468 moveto (7415 ) show
0 456 moveto (7416 #define E0ESC           \(1<<6\)) show
0 444 moveto (7417 ) show
0 432 moveto (7418 // Special keycodes) show
0 420 moveto (7419 #define KEY_HOME        0xE0) show
0 408 moveto (7420 #define KEY_END         0xE1) show
0 396 moveto (7421 #define KEY_UP          0xE2) show
0 384 moveto (7422 #define KEY_DN          0xE3) show
0 372 moveto (7423 #define KEY_LF          0xE4) show
0 360 moveto (7424 #define KEY_RT          0xE5) show
0 348 moveto (7425 #define KEY_PGUP        0xE6) show
0 336 moveto (7426 #define KEY_PGDN        0xE7) show
0 324 moveto (7427 #define KEY_INS         0xE8) show
0 312 moveto (7428 #define KEY_DEL         0xE9) show
0 300 moveto (7429 ) show
0 288 moveto (7430 // C\('A'\) == Control-A) show
0 276 moveto (7431 #define C\(x\) \(x - '@'\)) show
0 264 moveto (7432 ) show
0 252 moveto (7433 static uchar shiftcode[256] =) show
0 240 moveto (7434 {) show
0 228 moveto (7435   [0x1D] CTL,) show
0 216 moveto (7436   [0x2A] SHIFT,) show
0 204 moveto (7437   [0x36] SHIFT,) show
0 192 moveto (7438   [0x38] ALT,) show
0 180 moveto (7439   [0x9D] CTL,) show
0 168 moveto (7440   [0xB8] ALT) show
0 156 moveto (7441 };) show
0 144 moveto (7442 ) show
0 132 moveto (7443 static uchar togglecode[256] =) show
0 120 moveto (7444 {) show
0 108 moveto (7445   [0x3A] CAPSLOCK,) show
0 96 moveto (7446   [0x45] NUMLOCK,) show
0 84 moveto (7447   [0x46] SCROLLLOCK) show
0 72 moveto (7448 };) show
0 60 moveto (7449 ) show
0 24 moveto (Sheet 74) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/kbd.h  Page 2) show
0 648 moveto (7450 static uchar normalmap[256] =) show
0 636 moveto (7451 {) show
0 624 moveto (7452   NO,   0x1B, '1',  '2',  '3',  '4',  '5',  '6',  // 0x00) show
0 612 moveto (7453   '7',  '8',  '9',  '0',  '-',  '=',  '\\b', '\\t',) show
0 600 moveto (7454   'q',  'w',  'e',  'r',  't',  'y',  'u',  'i',  // 0x10) show
0 588 moveto (7455   'o',  'p',  '[',  ']',  '\\n', NO,   'a',  's',) show
0 576 moveto (7456   'd',  'f',  'g',  'h',  'j',  'k',  'l',  ';',  // 0x20) show
0 564 moveto (7457   '\\'', '`',  NO,   '\\\\', 'z',  'x',  'c',  'v',) show
0 552 moveto (7458   'b',  'n',  'm',  ',',  '.',  '/',  NO,   '*',  // 0x30) show
0 540 moveto (7459   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 528 moveto (7460   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 516 moveto (7461   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 504 moveto (7462   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 492 moveto (7463   [0x9C] '\\n',      // KP_Enter) show
0 480 moveto (7464   [0xB5] '/',       // KP_Div) show
0 468 moveto (7465   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 456 moveto (7466   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 444 moveto (7467   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 432 moveto (7468   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 420 moveto (7469   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 408 moveto (7470 };) show
0 396 moveto (7471 ) show
0 384 moveto (7472 static uchar shiftmap[256] =) show
0 372 moveto (7473 {) show
0 360 moveto (7474   NO,   033,  '!',  '@',  '#',  '$',  '%',  '^',  // 0x00) show
0 348 moveto (7475   '&',  '*',  '\(',  '\)',  '_',  '+',  '\\b', '\\t',) show
0 336 moveto (7476   'Q',  'W',  'E',  'R',  'T',  'Y',  'U',  'I',  // 0x10) show
0 324 moveto (7477   'O',  'P',  '{',  '}',  '\\n', NO,   'A',  'S',) show
0 312 moveto (7478   'D',  'F',  'G',  'H',  'J',  'K',  'L',  ':',  // 0x20) show
0 300 moveto (7479   '"',  '~',  NO,   '|',  'Z',  'X',  'C',  'V',) show
0 288 moveto (7480   'B',  'N',  'M',  '<',  '>',  '?',  NO,   '*',  // 0x30) show
0 276 moveto (7481   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 264 moveto (7482   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 252 moveto (7483   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 240 moveto (7484   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 228 moveto (7485   [0x9C] '\\n',      // KP_Enter) show
0 216 moveto (7486   [0xB5] '/',       // KP_Div) show
0 204 moveto (7487   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 192 moveto (7488   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 180 moveto (7489   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 168 moveto (7490   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 156 moveto (7491   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 144 moveto (7492 };) show
0 132 moveto (7493 ) show
0 120 moveto (7494 ) show
0 108 moveto (7495 ) show
0 96 moveto (7496 ) show
0 84 moveto (7497 ) show
0 72 moveto (7498 ) show
0 60 moveto (7499 ) show
0 24 moveto (Sheet 74) show
grestore
restore
showpage
%%Page: 83 83
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/kbd.h  Page 3) show
0 648 moveto (7500 static uchar ctlmap[256] =) show
0 636 moveto (7501 {) show
0 624 moveto (7502   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 612 moveto (7503   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 600 moveto (7504   C\('Q'\),  C\('W'\),  C\('E'\),  C\('R'\),  C\('T'\),  C\('Y'\),  C\('U'\),  C\('I'\),) show
0 588 moveto (7505   C\('O'\),  C\('P'\),  NO,      NO,      '\\r',    NO,      C\('A'\),  C\('S'\),) show
0 576 moveto (7506   C\('D'\),  C\('F'\),  C\('G'\),  C\('H'\),  C\('J'\),  C\('K'\),  C\('L'\),  NO,) show
0 564 moveto (7507   NO,      NO,      NO,      C\('\\\\'\), C\('Z'\),  C\('X'\),  C\('C'\),  C\('V'\),) show
0 552 moveto (7508   C\('B'\),  C\('N'\),  C\('M'\),  NO,      NO,      C\('/'\),  NO,      NO,) show
0 540 moveto (7509   [0x9C] '\\r',      // KP_Enter) show
0 528 moveto (7510   [0xB5] C\('/'\),    // KP_Div) show
0 516 moveto (7511   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 504 moveto (7512   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 492 moveto (7513   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 480 moveto (7514   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 468 moveto (7515   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 456 moveto (7516 };) show
0 444 moveto (7517 ) show
0 432 moveto (7518 ) show
0 420 moveto (7519 ) show
0 408 moveto (7520 ) show
0 396 moveto (7521 ) show
0 384 moveto (7522 ) show
0 372 moveto (7523 ) show
0 360 moveto (7524 ) show
0 348 moveto (7525 ) show
0 336 moveto (7526 ) show
0 324 moveto (7527 ) show
0 312 moveto (7528 ) show
0 300 moveto (7529 ) show
0 288 moveto (7530 ) show
0 276 moveto (7531 ) show
0 264 moveto (7532 ) show
0 252 moveto (7533 ) show
0 240 moveto (7534 ) show
0 228 moveto (7535 ) show
0 216 moveto (7536 ) show
0 204 moveto (7537 ) show
0 192 moveto (7538 ) show
0 180 moveto (7539 ) show
0 168 moveto (7540 ) show
0 156 moveto (7541 ) show
0 144 moveto (7542 ) show
0 132 moveto (7543 ) show
0 120 moveto (7544 ) show
0 108 moveto (7545 ) show
0 96 moveto (7546 ) show
0 84 moveto (7547 ) show
0 72 moveto (7548 ) show
0 60 moveto (7549 ) show
0 24 moveto (Sheet 75) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/kbd.c  Page 1) show
0 648 moveto (7550 #include "types.h") show
0 636 moveto (7551 #include "x86.h") show
0 624 moveto (7552 #include "defs.h") show
0 612 moveto (7553 #include "kbd.h") show
0 600 moveto (7554 ) show
0 588 moveto (7555 int) show
0 576 moveto (7556 kbdgetc\(void\)) show
0 564 moveto (7557 {) show
0 552 moveto (7558   static uint shift;) show
0 540 moveto (7559   static uchar *charcode[4] = {) show
0 528 moveto (7560     normalmap, shiftmap, ctlmap, ctlmap) show
0 516 moveto (7561   };) show
0 504 moveto (7562   uint st, data, c;) show
0 492 moveto (7563 ) show
0 480 moveto (7564   st = inb\(KBSTATP\);) show
0 468 moveto (7565   if\(\(st & KBS_DIB\) == 0\)) show
0 456 moveto (7566     return -1;) show
0 444 moveto (7567   data = inb\(KBDATAP\);) show
0 432 moveto (7568 ) show
0 420 moveto (7569   if\(data == 0xE0\){) show
0 408 moveto (7570     shift |= E0ESC;) show
0 396 moveto (7571     return 0;) show
0 384 moveto (7572   } else if\(data & 0x80\){) show
0 372 moveto (7573     // Key released) show
0 360 moveto (7574     data = \(shift & E0ESC ? data : data & 0x7F\);) show
0 348 moveto (7575     shift &= ~\(shiftcode[data] | E0ESC\);) show
0 336 moveto (7576     return 0;) show
0 324 moveto (7577   } else if\(shift & E0ESC\){) show
0 312 moveto (7578     // Last character was an E0 escape; or with 0x80) show
0 300 moveto (7579     data |= 0x80;) show
0 288 moveto (7580     shift &= ~E0ESC;) show
0 276 moveto (7581   }) show
0 264 moveto (7582 ) show
0 252 moveto (7583   shift |= shiftcode[data];) show
0 240 moveto (7584   shift ^= togglecode[data];) show
0 228 moveto (7585   c = charcode[shift & \(CTL | SHIFT\)][data];) show
0 216 moveto (7586   if\(shift & CAPSLOCK\){) show
0 204 moveto (7587     if\('a' <= c && c <= 'z'\)) show
0 192 moveto (7588       c += 'A' - 'a';) show
0 180 moveto (7589     else if\('A' <= c && c <= 'Z'\)) show
0 168 moveto (7590       c += 'a' - 'A';) show
0 156 moveto (7591   }) show
0 144 moveto (7592   return c;) show
0 132 moveto (7593 }) show
0 120 moveto (7594 ) show
0 108 moveto (7595 void) show
0 96 moveto (7596 kbdintr\(void\)) show
0 84 moveto (7597 {) show
0 72 moveto (7598   consoleintr\(kbdgetc\);) show
0 60 moveto (7599 }) show
0 24 moveto (Sheet 75) show
grestore
restore
showpage
%%Page: 84 84
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/console.c  Page 1) show
0 648 moveto (7600 // Console input and output.) show
0 636 moveto (7601 // Input is from the keyboard or serial port.) show
0 624 moveto (7602 // Output is written to the screen and serial port.) show
0 612 moveto (7603 ) show
0 600 moveto (7604 #include "types.h") show
0 588 moveto (7605 #include "defs.h") show
0 576 moveto (7606 #include "param.h") show
0 564 moveto (7607 #include "traps.h") show
0 552 moveto (7608 #include "spinlock.h") show
0 540 moveto (7609 #include "fs.h") show
0 528 moveto (7610 #include "file.h") show
0 516 moveto (7611 #include "memlayout.h") show
0 504 moveto (7612 #include "mmu.h") show
0 492 moveto (7613 #include "proc.h") show
0 480 moveto (7614 #include "x86.h") show
0 468 moveto (7615 ) show
0 456 moveto (7616 static void consputc\(int\);) show
0 444 moveto (7617 ) show
0 432 moveto (7618 static int panicked = 0;) show
0 420 moveto (7619 ) show
0 408 moveto (7620 static struct {) show
0 396 moveto (7621   struct spinlock lock;) show
0 384 moveto (7622   int locking;) show
0 372 moveto (7623 } cons;) show
0 360 moveto (7624 ) show
0 348 moveto (7625 static void) show
0 336 moveto (7626 printint\(int xx, int base, int sign\)) show
0 324 moveto (7627 {) show
0 312 moveto (7628   static char digits[] = "0123456789abcdef";) show
0 300 moveto (7629   char buf[16];) show
0 288 moveto (7630   int i;) show
0 276 moveto (7631   uint x;) show
0 264 moveto (7632 ) show
0 252 moveto (7633   if\(sign && \(sign = xx < 0\)\)) show
0 240 moveto (7634     x = -xx;) show
0 228 moveto (7635   else) show
0 216 moveto (7636     x = xx;) show
0 204 moveto (7637 ) show
0 192 moveto (7638   i = 0;) show
0 180 moveto (7639   do{) show
0 168 moveto (7640     buf[i++] = digits[x % base];) show
0 156 moveto (7641   }while\(\(x /= base\) != 0\);) show
0 144 moveto (7642 ) show
0 132 moveto (7643   if\(sign\)) show
0 120 moveto (7644     buf[i++] = '-';) show
0 108 moveto (7645 ) show
0 96 moveto (7646   while\(--i >= 0\)) show
0 84 moveto (7647     consputc\(buf[i]\);) show
0 72 moveto (7648 }) show
0 60 moveto (7649 ) show
0 24 moveto (Sheet 76) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/console.c  Page 2) show
0 648 moveto (7650 // Print to the console. only understands %d, %x, %p, %s.) show
0 636 moveto (7651 void) show
0 624 moveto (7652 cprintf\(char *fmt, ...\)) show
0 612 moveto (7653 {) show
0 600 moveto (7654   int i, c, locking;) show
0 588 moveto (7655   uint *argp;) show
0 576 moveto (7656   char *s;) show
0 564 moveto (7657 ) show
0 552 moveto (7658   locking = cons.locking;) show
0 540 moveto (7659   if\(locking\)) show
0 528 moveto (7660     acquire\(&cons.lock\);) show
0 516 moveto (7661 ) show
0 504 moveto (7662   if \(fmt == 0\)) show
0 492 moveto (7663     panic\("null fmt"\);) show
0 480 moveto (7664 ) show
0 468 moveto (7665   argp = \(uint*\)\(void*\)\(&fmt + 1\);) show
0 456 moveto (7666   for\(i = 0; \(c = fmt[i] & 0xff\) != 0; i++\){) show
0 444 moveto (7667     if\(c != '%'\){) show
0 432 moveto (7668       consputc\(c\);) show
0 420 moveto (7669       continue;) show
0 408 moveto (7670     }) show
0 396 moveto (7671     c = fmt[++i] & 0xff;) show
0 384 moveto (7672     if\(c == 0\)) show
0 372 moveto (7673       break;) show
0 360 moveto (7674     switch\(c\){) show
0 348 moveto (7675     case 'd':) show
0 336 moveto (7676       printint\(*argp++, 10, 1\);) show
0 324 moveto (7677       break;) show
0 312 moveto (7678     case 'x':) show
0 300 moveto (7679     case 'p':) show
0 288 moveto (7680       printint\(*argp++, 16, 0\);) show
0 276 moveto (7681       break;) show
0 264 moveto (7682     case 's':) show
0 252 moveto (7683       if\(\(s = \(char*\)*argp++\) == 0\)) show
0 240 moveto (7684         s = "\(null\)";) show
0 228 moveto (7685       for\(; *s; s++\)) show
0 216 moveto (7686         consputc\(*s\);) show
0 204 moveto (7687       break;) show
0 192 moveto (7688     case '%':) show
0 180 moveto (7689       consputc\('%'\);) show
0 168 moveto (7690       break;) show
0 156 moveto (7691     default:) show
0 144 moveto (7692       // Print unknown % sequence to draw attention.) show
0 132 moveto (7693       consputc\('%'\);) show
0 120 moveto (7694       consputc\(c\);) show
0 108 moveto (7695       break;) show
0 96 moveto (7696     }) show
0 84 moveto (7697   }) show
0 72 moveto (7698 ) show
0 60 moveto (7699 ) show
0 24 moveto (Sheet 76) show
grestore
restore
showpage
%%Page: 85 85
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/console.c  Page 3) show
0 648 moveto (7700   if\(locking\)) show
0 636 moveto (7701     release\(&cons.lock\);) show
0 624 moveto (7702 }) show
0 612 moveto (7703 ) show
0 600 moveto (7704 void) show
0 588 moveto (7705 panic\(char *s\)) show
0 576 moveto (7706 {) show
0 564 moveto (7707   int i;) show
0 552 moveto (7708   uint pcs[10];) show
0 540 moveto (7709 ) show
0 528 moveto (7710   cli\(\);) show
0 516 moveto (7711   cons.locking = 0;) show
0 504 moveto (7712   cprintf\("cpu%d: panic: ", cpu->id\);) show
0 492 moveto (7713   cprintf\(s\);) show
0 480 moveto (7714   cprintf\("\\n"\);) show
0 468 moveto (7715   getcallerpcs\(&s, pcs\);) show
0 456 moveto (7716   for\(i=0; i<10; i++\)) show
0 444 moveto (7717     cprintf\(" %p", pcs[i]\);) show
0 432 moveto (7718   panicked = 1; // freeze other CPU) show
0 420 moveto (7719   for\(;;\)) show
0 408 moveto (7720     ;) show
0 396 moveto (7721 }) show
0 384 moveto (7722 ) show
0 372 moveto (7723 #define BACKSPACE 0x100) show
0 360 moveto (7724 #define CRTPORT 0x3d4) show
0 348 moveto (7725 static ushort *crt = \(ushort*\)P2V\(0xb8000\);  // CGA memory) show
0 336 moveto (7726 ) show
0 324 moveto (7727 static void) show
0 312 moveto (7728 cgaputc\(int c\)) show
0 300 moveto (7729 {) show
0 288 moveto (7730   int pos;) show
0 276 moveto (7731 ) show
0 264 moveto (7732   // Cursor position: col + 80*row.) show
0 252 moveto (7733   outb\(CRTPORT, 14\);) show
0 240 moveto (7734   pos = inb\(CRTPORT+1\) << 8;) show
0 228 moveto (7735   outb\(CRTPORT, 15\);) show
0 216 moveto (7736   pos |= inb\(CRTPORT+1\);) show
0 204 moveto (7737 ) show
0 192 moveto (7738   if\(c == '\\n'\)) show
0 180 moveto (7739     pos += 80 - pos%80;) show
0 168 moveto (7740   else if\(c == BACKSPACE\){) show
0 156 moveto (7741     if\(pos > 0\) --pos;) show
0 144 moveto (7742   } else) show
0 132 moveto (7743     crt[pos++] = \(c&0xff\) | 0x0700;  // black on white) show
0 120 moveto (7744 ) show
0 108 moveto (7745   if\(pos < 0 || pos > 25*80\)) show
0 96 moveto (7746     panic\("pos under/overflow"\);) show
0 84 moveto (7747 ) show
0 72 moveto (7748 ) show
0 60 moveto (7749 ) show
0 24 moveto (Sheet 77) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/console.c  Page 4) show
0 648 moveto (7750   if\(\(pos/80\) >= 24\){  // Scroll up.) show
0 636 moveto (7751     memmove\(crt, crt+80, sizeof\(crt[0]\)*23*80\);) show
0 624 moveto (7752     pos -= 80;) show
0 612 moveto (7753     memset\(crt+pos, 0, sizeof\(crt[0]\)*\(24*80 - pos\)\);) show
0 600 moveto (7754   }) show
0 588 moveto (7755 ) show
0 576 moveto (7756   outb\(CRTPORT, 14\);) show
0 564 moveto (7757   outb\(CRTPORT+1, pos>>8\);) show
0 552 moveto (7758   outb\(CRTPORT, 15\);) show
0 540 moveto (7759   outb\(CRTPORT+1, pos\);) show
0 528 moveto (7760   crt[pos] = ' ' | 0x0700;) show
0 516 moveto (7761 }) show
0 504 moveto (7762 ) show
0 492 moveto (7763 void) show
0 480 moveto (7764 consputc\(int c\)) show
0 468 moveto (7765 {) show
0 456 moveto (7766   if\(panicked\){) show
0 444 moveto (7767     cli\(\);) show
0 432 moveto (7768     for\(;;\)) show
0 420 moveto (7769       ;) show
0 408 moveto (7770   }) show
0 396 moveto (7771 ) show
0 384 moveto (7772   if\(c == BACKSPACE\){) show
0 372 moveto (7773     uartputc\('\\b'\); uartputc\(' '\); uartputc\('\\b'\);) show
0 360 moveto (7774   } else) show
0 348 moveto (7775     uartputc\(c\);) show
0 336 moveto (7776   cgaputc\(c\);) show
0 324 moveto (7777 }) show
0 312 moveto (7778 ) show
0 300 moveto (7779 #define INPUT_BUF 128) show
0 288 moveto (7780 struct {) show
0 276 moveto (7781   char buf[INPUT_BUF];) show
0 264 moveto (7782   uint r;  // Read index) show
0 252 moveto (7783   uint w;  // Write index) show
0 240 moveto (7784   uint e;  // Edit index) show
0 228 moveto (7785 } input;) show
0 216 moveto (7786 ) show
0 204 moveto (7787 #define C\(x\)  \(\(x\)-'@'\)  // Control-x) show
0 192 moveto (7788 ) show
0 180 moveto (7789 void) show
0 168 moveto (7790 consoleintr\(int \(*getc\)\(void\)\)) show
0 156 moveto (7791 {) show
0 144 moveto (7792   int c, doprocdump = 0;) show
0 132 moveto (7793 ) show
0 120 moveto (7794   acquire\(&cons.lock\);) show
0 108 moveto (7795   while\(\(c = getc\(\)\) >= 0\){) show
0 96 moveto (7796     switch\(c\){) show
0 84 moveto (7797     case C\('P'\):  // Process listing.) show
0 72 moveto (7798       doprocdump = 1;   // procdump\(\) locks cons.lock indirectly; invoke later) show
0 60 moveto (7799       break;) show
0 24 moveto (Sheet 77) show
grestore
restore
showpage
%%Page: 86 86
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/console.c  Page 5) show
0 648 moveto (7800     case C\('U'\):  // Kill line.) show
0 636 moveto (7801       while\(input.e != input.w &&) show
0 624 moveto (7802             input.buf[\(input.e-1\) % INPUT_BUF] != '\\n'\){) show
0 612 moveto (7803         input.e--;) show
0 600 moveto (7804         consputc\(BACKSPACE\);) show
0 588 moveto (7805       }) show
0 576 moveto (7806       break;) show
0 564 moveto (7807     case C\('H'\): case '\\x7f':  // Backspace) show
0 552 moveto (7808       if\(input.e != input.w\){) show
0 540 moveto (7809         input.e--;) show
0 528 moveto (7810         consputc\(BACKSPACE\);) show
0 516 moveto (7811       }) show
0 504 moveto (7812       break;) show
0 492 moveto (7813     default:) show
0 480 moveto (7814       if\(c != 0 && input.e-input.r < INPUT_BUF\){) show
0 468 moveto (7815         c = \(c == '\\r'\) ? '\\n' : c;) show
0 456 moveto (7816         input.buf[input.e++ % INPUT_BUF] = c;) show
0 444 moveto (7817         consputc\(c\);) show
0 432 moveto (7818         if\(c == '\\n' || c == C\('D'\) || input.e == input.r+INPUT_BUF\){) show
0 420 moveto (7819           input.w = input.e;) show
0 408 moveto (7820           wakeup\(&input.r\);) show
0 396 moveto (7821         }) show
0 384 moveto (7822       }) show
0 372 moveto (7823       break;) show
0 360 moveto (7824     }) show
0 348 moveto (7825   }) show
0 336 moveto (7826   release\(&cons.lock\);) show
0 324 moveto (7827   if\(doprocdump\) {) show
0 312 moveto (7828     procdump\(\);  // now call procdump\(\) wo. cons.lock held) show
0 300 moveto (7829   }) show
0 288 moveto (7830 }) show
0 276 moveto (7831 ) show
0 264 moveto (7832 int) show
0 252 moveto (7833 consoleread\(struct inode *ip, char *dst, int n\)) show
0 240 moveto (7834 {) show
0 228 moveto (7835   uint target;) show
0 216 moveto (7836   int c;) show
0 204 moveto (7837 ) show
0 192 moveto (7838   iunlock\(ip\);) show
0 180 moveto (7839   target = n;) show
0 168 moveto (7840   acquire\(&cons.lock\);) show
0 156 moveto (7841   while\(n > 0\){) show
0 144 moveto (7842     while\(input.r == input.w\){) show
0 132 moveto (7843       if\(proc->killed\){) show
0 120 moveto (7844         release\(&cons.lock\);) show
0 108 moveto (7845         ilock\(ip\);) show
0 96 moveto (7846         return -1;) show
0 84 moveto (7847       }) show
0 72 moveto (7848       sleep\(&input.r, &cons.lock\);) show
0 60 moveto (7849     }) show
0 24 moveto (Sheet 78) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/console.c  Page 6) show
0 648 moveto (7850     c = input.buf[input.r++ % INPUT_BUF];) show
0 636 moveto (7851     if\(c == C\('D'\)\){  // EOF) show
0 624 moveto (7852       if\(n < target\){) show
0 612 moveto (7853         // Save ^D for next time, to make sure) show
0 600 moveto (7854         // caller gets a 0-byte result.) show
0 588 moveto (7855         input.r--;) show
0 576 moveto (7856       }) show
0 564 moveto (7857       break;) show
0 552 moveto (7858     }) show
0 540 moveto (7859     *dst++ = c;) show
0 528 moveto (7860     --n;) show
0 516 moveto (7861     if\(c == '\\n'\)) show
0 504 moveto (7862       break;) show
0 492 moveto (7863   }) show
0 480 moveto (7864   release\(&cons.lock\);) show
0 468 moveto (7865   ilock\(ip\);) show
0 456 moveto (7866 ) show
0 444 moveto (7867   return target - n;) show
0 432 moveto (7868 }) show
0 420 moveto (7869 ) show
0 408 moveto (7870 int) show
0 396 moveto (7871 consolewrite\(struct inode *ip, char *buf, int n\)) show
0 384 moveto (7872 {) show
0 372 moveto (7873   int i;) show
0 360 moveto (7874 ) show
0 348 moveto (7875   iunlock\(ip\);) show
0 336 moveto (7876   acquire\(&cons.lock\);) show
0 324 moveto (7877   for\(i = 0; i < n; i++\)) show
0 312 moveto (7878     consputc\(buf[i] & 0xff\);) show
0 300 moveto (7879   release\(&cons.lock\);) show
0 288 moveto (7880   ilock\(ip\);) show
0 276 moveto (7881 ) show
0 264 moveto (7882   return n;) show
0 252 moveto (7883 }) show
0 240 moveto (7884 ) show
0 228 moveto (7885 void) show
0 216 moveto (7886 consoleinit\(void\)) show
0 204 moveto (7887 {) show
0 192 moveto (7888   initlock\(&cons.lock, "console"\);) show
0 180 moveto (7889 ) show
0 168 moveto (7890   devsw[CONSOLE].write = consolewrite;) show
0 156 moveto (7891   devsw[CONSOLE].read = consoleread;) show
0 144 moveto (7892   cons.locking = 1;) show
0 132 moveto (7893 ) show
0 120 moveto (7894   picenable\(IRQ_KBD\);) show
0 108 moveto (7895   ioapicenable\(IRQ_KBD, 0\);) show
0 96 moveto (7896 }) show
0 84 moveto (7897 ) show
0 72 moveto (7898 ) show
0 60 moveto (7899 ) show
0 24 moveto (Sheet 78) show
grestore
restore
showpage
%%Page: 87 87
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/timer.c  Page 1) show
0 648 moveto (7900 // Intel 8253/8254/82C54 Programmable Interval Timer \(PIT\).) show
0 636 moveto (7901 // Only used on uniprocessors;) show
0 624 moveto (7902 // SMP machines use the local APIC timer.) show
0 612 moveto (7903 ) show
0 600 moveto (7904 #include "types.h") show
0 588 moveto (7905 #include "defs.h") show
0 576 moveto (7906 #include "traps.h") show
0 564 moveto (7907 #include "x86.h") show
0 552 moveto (7908 ) show
0 540 moveto (7909 #define IO_TIMER1       0x040           // 8253 Timer #1) show
0 528 moveto (7910 ) show
0 516 moveto (7911 // Frequency of all three count-down timers;) show
0 504 moveto (7912 // \(TIMER_FREQ/freq\) is the appropriate count) show
0 492 moveto (7913 // to generate a frequency of freq Hz.) show
0 480 moveto (7914 ) show
0 468 moveto (7915 #define TIMER_FREQ      1193182) show
0 456 moveto (7916 #define TIMER_DIV\(x\)    \(\(TIMER_FREQ+\(x\)/2\)/\(x\)\)) show
0 444 moveto (7917 ) show
0 432 moveto (7918 #define TIMER_MODE      \(IO_TIMER1 + 3\) // timer mode port) show
0 420 moveto (7919 #define TIMER_SEL0      0x00    // select counter 0) show
0 408 moveto (7920 #define TIMER_RATEGEN   0x04    // mode 2, rate generator) show
0 396 moveto (7921 #define TIMER_16BIT     0x30    // r/w counter 16 bits, LSB first) show
0 384 moveto (7922 ) show
0 372 moveto (7923 void) show
0 360 moveto (7924 timerinit\(void\)) show
0 348 moveto (7925 {) show
0 336 moveto (7926   // Interrupt 100 times/sec.) show
0 324 moveto (7927   outb\(TIMER_MODE, TIMER_SEL0 | TIMER_RATEGEN | TIMER_16BIT\);) show
0 312 moveto (7928   outb\(IO_TIMER1, TIMER_DIV\(100\) % 256\);) show
0 300 moveto (7929   outb\(IO_TIMER1, TIMER_DIV\(100\) / 256\);) show
0 288 moveto (7930   picenable\(IRQ_TIMER\);) show
0 276 moveto (7931 }) show
0 264 moveto (7932 ) show
0 252 moveto (7933 ) show
0 240 moveto (7934 ) show
0 228 moveto (7935 ) show
0 216 moveto (7936 ) show
0 204 moveto (7937 ) show
0 192 moveto (7938 ) show
0 180 moveto (7939 ) show
0 168 moveto (7940 ) show
0 156 moveto (7941 ) show
0 144 moveto (7942 ) show
0 132 moveto (7943 ) show
0 120 moveto (7944 ) show
0 108 moveto (7945 ) show
0 96 moveto (7946 ) show
0 84 moveto (7947 ) show
0 72 moveto (7948 ) show
0 60 moveto (7949 ) show
0 24 moveto (Sheet 79) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/uart.c  Page 1) show
0 648 moveto (7950 // Intel 8250 serial port \(UART\).) show
0 636 moveto (7951 ) show
0 624 moveto (7952 #include "types.h") show
0 612 moveto (7953 #include "defs.h") show
0 600 moveto (7954 #include "param.h") show
0 588 moveto (7955 #include "traps.h") show
0 576 moveto (7956 #include "spinlock.h") show
0 564 moveto (7957 #include "fs.h") show
0 552 moveto (7958 #include "file.h") show
0 540 moveto (7959 #include "mmu.h") show
0 528 moveto (7960 #include "proc.h") show
0 516 moveto (7961 #include "x86.h") show
0 504 moveto (7962 ) show
0 492 moveto (7963 #define COM1    0x3f8) show
0 480 moveto (7964 ) show
0 468 moveto (7965 static int uart;    // is there a uart?) show
0 456 moveto (7966 ) show
0 444 moveto (7967 void) show
0 432 moveto (7968 uartinit\(void\)) show
0 420 moveto (7969 {) show
0 408 moveto (7970   char *p;) show
0 396 moveto (7971 ) show
0 384 moveto (7972   // Turn off the FIFO) show
0 372 moveto (7973   outb\(COM1+2, 0\);) show
0 360 moveto (7974 ) show
0 348 moveto (7975   // 9600 baud, 8 data bits, 1 stop bit, parity off.) show
0 336 moveto (7976   outb\(COM1+3, 0x80\);    // Unlock divisor) show
0 324 moveto (7977   outb\(COM1+0, 115200/9600\);) show
0 312 moveto (7978   outb\(COM1+1, 0\);) show
0 300 moveto (7979   outb\(COM1+3, 0x03\);    // Lock divisor, 8 data bits.) show
0 288 moveto (7980   outb\(COM1+4, 0\);) show
0 276 moveto (7981   outb\(COM1+1, 0x01\);    // Enable receive interrupts.) show
0 264 moveto (7982 ) show
0 252 moveto (7983   // If status is 0xFF, no serial port.) show
0 240 moveto (7984   if\(inb\(COM1+5\) == 0xFF\)) show
0 228 moveto (7985     return;) show
0 216 moveto (7986   uart = 1;) show
0 204 moveto (7987 ) show
0 192 moveto (7988   // Acknowledge pre-existing interrupt conditions;) show
0 180 moveto (7989   // enable interrupts.) show
0 168 moveto (7990   inb\(COM1+2\);) show
0 156 moveto (7991   inb\(COM1+0\);) show
0 144 moveto (7992   picenable\(IRQ_COM1\);) show
0 132 moveto (7993   ioapicenable\(IRQ_COM1, 0\);) show
0 120 moveto (7994 ) show
0 108 moveto (7995   // Announce that we're here.) show
0 96 moveto (7996   for\(p="xv6...\\n"; *p; p++\)) show
0 84 moveto (7997     uartputc\(*p\);) show
0 72 moveto (7998 }) show
0 60 moveto (7999 ) show
0 24 moveto (Sheet 79) show
grestore
restore
showpage
%%Page: 88 88
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/uart.c  Page 2) show
0 648 moveto (8000 void) show
0 636 moveto (8001 uartputc\(int c\)) show
0 624 moveto (8002 {) show
0 612 moveto (8003   int i;) show
0 600 moveto (8004 ) show
0 588 moveto (8005   if\(!uart\)) show
0 576 moveto (8006     return;) show
0 564 moveto (8007   for\(i = 0; i < 128 && !\(inb\(COM1+5\) & 0x20\); i++\)) show
0 552 moveto (8008     microdelay\(10\);) show
0 540 moveto (8009   outb\(COM1+0, c\);) show
0 528 moveto (8010 }) show
0 516 moveto (8011 ) show
0 504 moveto (8012 static int) show
0 492 moveto (8013 uartgetc\(void\)) show
0 480 moveto (8014 {) show
0 468 moveto (8015   if\(!uart\)) show
0 456 moveto (8016     return -1;) show
0 444 moveto (8017   if\(!\(inb\(COM1+5\) & 0x01\)\)) show
0 432 moveto (8018     return -1;) show
0 420 moveto (8019   return inb\(COM1+0\);) show
0 408 moveto (8020 }) show
0 396 moveto (8021 ) show
0 384 moveto (8022 void) show
0 372 moveto (8023 uartintr\(void\)) show
0 360 moveto (8024 {) show
0 348 moveto (8025   consoleintr\(uartgetc\);) show
0 336 moveto (8026 }) show
0 324 moveto (8027 ) show
0 312 moveto (8028 ) show
0 300 moveto (8029 ) show
0 288 moveto (8030 ) show
0 276 moveto (8031 ) show
0 264 moveto (8032 ) show
0 252 moveto (8033 ) show
0 240 moveto (8034 ) show
0 228 moveto (8035 ) show
0 216 moveto (8036 ) show
0 204 moveto (8037 ) show
0 192 moveto (8038 ) show
0 180 moveto (8039 ) show
0 168 moveto (8040 ) show
0 156 moveto (8041 ) show
0 144 moveto (8042 ) show
0 132 moveto (8043 ) show
0 120 moveto (8044 ) show
0 108 moveto (8045 ) show
0 96 moveto (8046 ) show
0 84 moveto (8047 ) show
0 72 moveto (8048 ) show
0 60 moveto (8049 ) show
0 24 moveto (Sheet 80) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/initcode.S  Page 1) show
0 648 moveto (8050 # Initial process execs /init.) show
0 636 moveto (8051 ) show
0 624 moveto (8052 #include "syscall.h") show
0 612 moveto (8053 #include "traps.h") show
0 600 moveto (8054 ) show
0 588 moveto (8055 ) show
0 576 moveto (8056 # exec\(init, argv\)) show
0 564 moveto (8057 .globl start) show
0 552 moveto (8058 start:) show
0 540 moveto (8059   pushl $argv) show
0 528 moveto (8060   pushl $init) show
0 516 moveto (8061   pushl $0  // where caller pc would be) show
0 504 moveto (8062   movl $SYS_exec, %eax) show
0 492 moveto (8063   int $T_SYSCALL) show
0 480 moveto (8064 ) show
0 468 moveto (8065 # for\(;;\) exit\(\);) show
0 456 moveto (8066 exit:) show
0 444 moveto (8067   movl $SYS_exit, %eax) show
0 432 moveto (8068   int $T_SYSCALL) show
0 420 moveto (8069   jmp exit) show
0 408 moveto (8070 ) show
0 396 moveto (8071 # char init[] = "/init\\0";) show
0 384 moveto (8072 init:) show
0 372 moveto (8073   .string "/init\\0") show
0 360 moveto (8074 ) show
0 348 moveto (8075 # char *argv[] = { init, 0 };) show
0 336 moveto (8076 .p2align 2) show
0 324 moveto (8077 argv:) show
0 312 moveto (8078   .long init) show
0 300 moveto (8079   .long 0) show
0 288 moveto (8080 ) show
0 276 moveto (8081 ) show
0 264 moveto (8082 ) show
0 252 moveto (8083 ) show
0 240 moveto (8084 ) show
0 228 moveto (8085 ) show
0 216 moveto (8086 ) show
0 204 moveto (8087 ) show
0 192 moveto (8088 ) show
0 180 moveto (8089 ) show
0 168 moveto (8090 ) show
0 156 moveto (8091 ) show
0 144 moveto (8092 ) show
0 132 moveto (8093 ) show
0 120 moveto (8094 ) show
0 108 moveto (8095 ) show
0 96 moveto (8096 ) show
0 84 moveto (8097 ) show
0 72 moveto (8098 ) show
0 60 moveto (8099 ) show
0 24 moveto (Sheet 80) show
grestore
restore
showpage
%%Page: 89 89
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/usys.S  Page 1) show
0 648 moveto (8100 #include "syscall.h") show
0 636 moveto (8101 #include "traps.h") show
0 624 moveto (8102 ) show
0 612 moveto (8103 #define SYSCALL\(name\) \\) show
0 600 moveto (8104   .globl name; \\) show
0 588 moveto (8105   name: \\) show
0 576 moveto (8106     movl $SYS_ ## name, %eax; \\) show
0 564 moveto (8107     int $T_SYSCALL; \\) show
0 552 moveto (8108     ret) show
0 540 moveto (8109 ) show
0 528 moveto (8110 SYSCALL\(fork\)) show
0 516 moveto (8111 SYSCALL\(exit\)) show
0 504 moveto (8112 SYSCALL\(wait\)) show
0 492 moveto (8113 SYSCALL\(pipe\)) show
0 480 moveto (8114 SYSCALL\(read\)) show
0 468 moveto (8115 SYSCALL\(write\)) show
0 456 moveto (8116 SYSCALL\(close\)) show
0 444 moveto (8117 SYSCALL\(kill\)) show
0 432 moveto (8118 SYSCALL\(exec\)) show
0 420 moveto (8119 SYSCALL\(open\)) show
0 408 moveto (8120 SYSCALL\(mknod\)) show
0 396 moveto (8121 SYSCALL\(unlink\)) show
0 384 moveto (8122 SYSCALL\(fstat\)) show
0 372 moveto (8123 SYSCALL\(link\)) show
0 360 moveto (8124 SYSCALL\(mkdir\)) show
0 348 moveto (8125 SYSCALL\(chdir\)) show
0 336 moveto (8126 SYSCALL\(dup\)) show
0 324 moveto (8127 SYSCALL\(getpid\)) show
0 312 moveto (8128 SYSCALL\(sbrk\)) show
0 300 moveto (8129 SYSCALL\(sleep\)) show
0 288 moveto (8130 SYSCALL\(uptime\)) show
0 276 moveto (8131 SYSCALL\(halt\)) show
0 264 moveto (8132 //Student Implementations) show
0 252 moveto (8133 SYSCALL\(date\)) show
0 240 moveto (8134 ) show
0 228 moveto (8135 SYSCALL\(getuid\)) show
0 216 moveto (8136 SYSCALL\(getgid\)) show
0 204 moveto (8137 SYSCALL\(getppid\)) show
0 192 moveto (8138 ) show
0 180 moveto (8139 SYSCALL\(setuid\)) show
0 168 moveto (8140 SYSCALL\(setgid\)) show
0 156 moveto (8141 SYSCALL\(getprocs\)) show
0 144 moveto (8142 // Project 3) show
0 132 moveto (8143 SYSCALL\(setpriority\)) show
0 120 moveto (8144 ) show
0 108 moveto (8145 ) show
0 96 moveto (8146 ) show
0 84 moveto (8147 ) show
0 72 moveto (8148 ) show
0 60 moveto (8149 ) show
0 24 moveto (Sheet 81) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/init.c  Page 1) show
0 648 moveto (8150 // init: The initial user-level program) show
0 636 moveto (8151 ) show
0 624 moveto (8152 #include "types.h") show
0 612 moveto (8153 #include "stat.h") show
0 600 moveto (8154 #include "user.h") show
0 588 moveto (8155 #include "fcntl.h") show
0 576 moveto (8156 ) show
0 564 moveto (8157 char *argv[] = { "sh", 0 };) show
0 552 moveto (8158 ) show
0 540 moveto (8159 int) show
0 528 moveto (8160 main\(void \){) show
0 516 moveto (8161 ) show
0 504 moveto (8162   int pid, wpid;) show
0 492 moveto (8163 ) show
0 480 moveto (8164   if\(open\("console", O_RDWR\) < 0\){) show
0 468 moveto (8165     mknod\("console", 1, 1\);) show
0 456 moveto (8166     open\("console", O_RDWR\);) show
0 444 moveto (8167   }) show
0 432 moveto (8168   dup\(0\);  // stdout) show
0 420 moveto (8169   dup\(0\);  // stderr) show
0 408 moveto (8170 ) show
0 396 moveto (8171   for\(;;\){) show
0 384 moveto (8172     printf\(1, "init: starting sh\\n"\);) show
0 372 moveto (8173     pid = fork\(\);) show
0 360 moveto (8174     if\(pid < 0\){) show
0 348 moveto (8175       printf\(1, "init: fork failed\\n"\);) show
0 336 moveto (8176       exit\(\);) show
0 324 moveto (8177     }) show
0 312 moveto (8178     if\(pid == 0\){) show
0 300 moveto (8179       exec\("sh", argv\);) show
0 288 moveto (8180       printf\(1, "init: exec sh failed\\n"\);) show
0 276 moveto (8181       exit\(\);) show
0 264 moveto (8182     }) show
0 252 moveto (8183     while\(\(wpid=wait\(\)\) >= 0 && wpid != pid\)) show
0 240 moveto (8184       printf\(1, "zombie!\\n"\);) show
0 228 moveto (8185   }) show
0 216 moveto (8186 }) show
0 204 moveto (8187 ) show
0 192 moveto (8188 ) show
0 180 moveto (8189 ) show
0 168 moveto (8190 ) show
0 156 moveto (8191 ) show
0 144 moveto (8192 ) show
0 132 moveto (8193 ) show
0 120 moveto (8194 ) show
0 108 moveto (8195 ) show
0 96 moveto (8196 ) show
0 84 moveto (8197 ) show
0 72 moveto (8198 ) show
0 60 moveto (8199 ) show
0 24 moveto (Sheet 81) show
grestore
restore
showpage
%%Page: 90 90
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 1) show
0 648 moveto (8200 // Shell.) show
0 636 moveto (8201 // 2015-12-21. Added very simple processing for builtin commands) show
0 624 moveto (8202 ) show
0 612 moveto (8203 #include "types.h") show
0 600 moveto (8204 #include "user.h") show
0 588 moveto (8205 #include "fcntl.h") show
0 576 moveto (8206 ) show
0 564 moveto (8207 // Parsed command representation) show
0 552 moveto (8208 #define EXEC  1) show
0 540 moveto (8209 #define REDIR 2) show
0 528 moveto (8210 #define PIPE  3) show
0 516 moveto (8211 #define LIST  4) show
0 504 moveto (8212 #define BACK  5) show
0 492 moveto (8213 ) show
0 480 moveto (8214 #define MAXARGS 10) show
0 468 moveto (8215 ) show
0 456 moveto (8216 struct cmd {) show
0 444 moveto (8217   int type;) show
0 432 moveto (8218 };) show
0 420 moveto (8219 ) show
0 408 moveto (8220 struct execcmd {) show
0 396 moveto (8221   int type;) show
0 384 moveto (8222   char *argv[MAXARGS];) show
0 372 moveto (8223   char *eargv[MAXARGS];) show
0 360 moveto (8224 };) show
0 348 moveto (8225 ) show
0 336 moveto (8226 struct redircmd {) show
0 324 moveto (8227   int type;) show
0 312 moveto (8228   struct cmd *cmd;) show
0 300 moveto (8229   char *file;) show
0 288 moveto (8230   char *efile;) show
0 276 moveto (8231   int mode;) show
0 264 moveto (8232   int fd;) show
0 252 moveto (8233 };) show
0 240 moveto (8234 ) show
0 228 moveto (8235 struct pipecmd {) show
0 216 moveto (8236   int type;) show
0 204 moveto (8237   struct cmd *left;) show
0 192 moveto (8238   struct cmd *right;) show
0 180 moveto (8239 };) show
0 168 moveto (8240 ) show
0 156 moveto (8241 struct listcmd {) show
0 144 moveto (8242   int type;) show
0 132 moveto (8243   struct cmd *left;) show
0 120 moveto (8244   struct cmd *right;) show
0 108 moveto (8245 };) show
0 96 moveto (8246 ) show
0 84 moveto (8247 ) show
0 72 moveto (8248 ) show
0 60 moveto (8249 ) show
0 24 moveto (Sheet 82) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 2) show
0 648 moveto (8250 struct backcmd {) show
0 636 moveto (8251   int type;) show
0 624 moveto (8252   struct cmd *cmd;) show
0 612 moveto (8253 };) show
0 600 moveto (8254 ) show
0 588 moveto (8255 int fork1\(void\);  // Fork but panics on failure.) show
0 576 moveto (8256 void panic\(char*\);) show
0 564 moveto (8257 struct cmd *parsecmd\(char*\);) show
0 552 moveto (8258 ) show
0 540 moveto (8259 // Execute cmd.  Never returns.) show
0 528 moveto (8260 void) show
0 516 moveto (8261 runcmd\(struct cmd *cmd\)) show
0 504 moveto (8262 {) show
0 492 moveto (8263   int p[2];) show
0 480 moveto (8264   struct backcmd *bcmd;) show
0 468 moveto (8265   struct execcmd *ecmd;) show
0 456 moveto (8266   struct listcmd *lcmd;) show
0 444 moveto (8267   struct pipecmd *pcmd;) show
0 432 moveto (8268   struct redircmd *rcmd;) show
0 420 moveto (8269 ) show
0 408 moveto (8270   if\(cmd == 0\)) show
0 396 moveto (8271     exit\(\);) show
0 384 moveto (8272 ) show
0 372 moveto (8273   switch\(cmd->type\){) show
0 360 moveto (8274   default:) show
0 348 moveto (8275     panic\("runcmd"\);) show
0 336 moveto (8276 ) show
0 324 moveto (8277   case EXEC:) show
0 312 moveto (8278     ecmd = \(struct execcmd*\)cmd;) show
0 300 moveto (8279     if\(ecmd->argv[0] == 0\)) show
0 288 moveto (8280       exit\(\);) show
0 276 moveto (8281     exec\(ecmd->argv[0], ecmd->argv\);) show
0 264 moveto (8282     printf\(2, "exec %s failed\\n", ecmd->argv[0]\);) show
0 252 moveto (8283     break;) show
0 240 moveto (8284 ) show
0 228 moveto (8285   case REDIR:) show
0 216 moveto (8286     rcmd = \(struct redircmd*\)cmd;) show
0 204 moveto (8287     close\(rcmd->fd\);) show
0 192 moveto (8288     if\(open\(rcmd->file, rcmd->mode\) < 0\){) show
0 180 moveto (8289       printf\(2, "open %s failed\\n", rcmd->file\);) show
0 168 moveto (8290       exit\(\);) show
0 156 moveto (8291     }) show
0 144 moveto (8292     runcmd\(rcmd->cmd\);) show
0 132 moveto (8293     break;) show
0 120 moveto (8294 ) show
0 108 moveto (8295   case LIST:) show
0 96 moveto (8296     lcmd = \(struct listcmd*\)cmd;) show
0 84 moveto (8297     if\(fork1\(\) == 0\)) show
0 72 moveto (8298       runcmd\(lcmd->left\);) show
0 60 moveto (8299     wait\(\);) show
0 24 moveto (Sheet 82) show
grestore
restore
showpage
%%Page: 91 91
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 3) show
0 648 moveto (8300     runcmd\(lcmd->right\);) show
0 636 moveto (8301     break;) show
0 624 moveto (8302 ) show
0 612 moveto (8303   case PIPE:) show
0 600 moveto (8304     pcmd = \(struct pipecmd*\)cmd;) show
0 588 moveto (8305     if\(pipe\(p\) < 0\)) show
0 576 moveto (8306       panic\("pipe"\);) show
0 564 moveto (8307     if\(fork1\(\) == 0\){) show
0 552 moveto (8308       close\(1\);) show
0 540 moveto (8309       dup\(p[1]\);) show
0 528 moveto (8310       close\(p[0]\);) show
0 516 moveto (8311       close\(p[1]\);) show
0 504 moveto (8312       runcmd\(pcmd->left\);) show
0 492 moveto (8313     }) show
0 480 moveto (8314     if\(fork1\(\) == 0\){) show
0 468 moveto (8315       close\(0\);) show
0 456 moveto (8316       dup\(p[0]\);) show
0 444 moveto (8317       close\(p[0]\);) show
0 432 moveto (8318       close\(p[1]\);) show
0 420 moveto (8319       runcmd\(pcmd->right\);) show
0 408 moveto (8320     }) show
0 396 moveto (8321     close\(p[0]\);) show
0 384 moveto (8322     close\(p[1]\);) show
0 372 moveto (8323     wait\(\);) show
0 360 moveto (8324     wait\(\);) show
0 348 moveto (8325     break;) show
0 336 moveto (8326 ) show
0 324 moveto (8327   case BACK:) show
0 312 moveto (8328     bcmd = \(struct backcmd*\)cmd;) show
0 300 moveto (8329     if\(fork1\(\) == 0\)) show
0 288 moveto (8330       runcmd\(bcmd->cmd\);) show
0 276 moveto (8331     break;) show
0 264 moveto (8332   }) show
0 252 moveto (8333   exit\(\);) show
0 240 moveto (8334 }) show
0 228 moveto (8335 ) show
0 216 moveto (8336 int) show
0 204 moveto (8337 getcmd\(char *buf, int nbuf\)) show
0 192 moveto (8338 {) show
0 180 moveto (8339   printf\(2, "$ "\);) show
0 168 moveto (8340   memset\(buf, 0, nbuf\);) show
0 156 moveto (8341   gets\(buf, nbuf\);) show
0 144 moveto (8342   if\(buf[0] == 0\) // EOF) show
0 132 moveto (8343     return -1;) show
0 120 moveto (8344   return 0;) show
0 108 moveto (8345 }) show
0 96 moveto (8346 ) show
0 84 moveto (8347 ) show
0 72 moveto (8348 ) show
0 60 moveto (8349 ) show
0 24 moveto (Sheet 83) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 4) show
0 648 moveto (8350 #ifdef USE_BUILTINS) show
0 636 moveto (8351 // ***** processing for shell builtins begins here *****) show
0 624 moveto (8352 ) show
0 612 moveto (8353 int) show
0 600 moveto (8354 strncmp\(const char *p, const char *q, uint n\)) show
0 588 moveto (8355 {) show
0 576 moveto (8356     while\(n > 0 && *p && *p == *q\)) show
0 564 moveto (8357       n--, p++, q++;) show
0 552 moveto (8358     if\(n == 0\)) show
0 540 moveto (8359       return 0;) show
0 528 moveto (8360     return \(uchar\)*p - \(uchar\)*q;) show
0 516 moveto (8361 }) show
0 504 moveto (8362 ) show
0 492 moveto (8363 int) show
0 480 moveto (8364 makeint\(char *p\)) show
0 468 moveto (8365 {) show
0 456 moveto (8366   int val = 0;) show
0 444 moveto (8367 ) show
0 432 moveto (8368   while \(\(*p >= '0'\) && \(*p <= '9'\)\) {) show
0 420 moveto (8369     val = 10*val + \(*p-'0'\);) show
0 408 moveto (8370     ++p;) show
0 396 moveto (8371   }) show
0 384 moveto (8372   return val;) show
0 372 moveto (8373 }) show
0 360 moveto (8374 ) show
0 348 moveto (8375 int) show
0 336 moveto (8376 setbuiltin\(char *p\)) show
0 324 moveto (8377 {) show
0 312 moveto (8378   int i;) show
0 300 moveto (8379 ) show
0 288 moveto (8380   p += strlen\("_set"\);) show
0 276 moveto (8381   while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 264 moveto (8382   if \(strncmp\("uid", p, 3\) == 0\) {) show
0 252 moveto (8383     p += strlen\("uid"\);) show
0 240 moveto (8384     while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 228 moveto (8385     i = makeint\(p\); // ugly) show
0 216 moveto (8386     return \(setuid\(i\)\);) show
0 204 moveto (8387   } else) show
0 192 moveto (8388   if \(strncmp\("gid", p, 3\) == 0\) {) show
0 180 moveto (8389     p += strlen\("gid"\);) show
0 168 moveto (8390     while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 156 moveto (8391     i = makeint\(p\); // ugly) show
0 144 moveto (8392     return \(setgid\(i\)\);) show
0 132 moveto (8393   }) show
0 120 moveto (8394   printf\(2, "Invalid _set parameter\\n"\);) show
0 108 moveto (8395   return -1;) show
0 96 moveto (8396 }) show
0 84 moveto (8397 ) show
0 72 moveto (8398 ) show
0 60 moveto (8399 ) show
0 24 moveto (Sheet 83) show
grestore
restore
showpage
%%Page: 92 92
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 5) show
0 648 moveto (8400 int) show
0 636 moveto (8401 getbuiltin\(char *p\)) show
0 624 moveto (8402 {) show
0 612 moveto (8403   p += strlen\("_get"\);) show
0 600 moveto (8404   while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 588 moveto (8405   if \(strncmp\("uid", p, 3\) == 0\) {) show
0 576 moveto (8406     printf\(2, "%d\\n", getuid\(\)\);) show
0 564 moveto (8407     return 0;) show
0 552 moveto (8408   }) show
0 540 moveto (8409   if \(strncmp\("gid", p, 3\) == 0\) {) show
0 528 moveto (8410     printf\(2, "%d\\n", getgid\(\)\);) show
0 516 moveto (8411     return 0;) show
0 504 moveto (8412   }) show
0 492 moveto (8413   printf\(2, "Invalid _get parameter\\n"\);) show
0 480 moveto (8414   return -1;) show
0 468 moveto (8415 }) show
0 456 moveto (8416 ) show
0 444 moveto (8417 typedef int funcPtr_t\(char *\);) show
0 432 moveto (8418 typedef struct {) show
0 420 moveto (8419   char       *cmd;) show
0 408 moveto (8420   funcPtr_t  *name;) show
0 396 moveto (8421 } dispatchTableEntry_t;) show
0 384 moveto (8422 ) show
0 372 moveto (8423 // Use a simple function dispatch table \(FDT\) to process builtin commands) show
0 360 moveto (8424 dispatchTableEntry_t fdt[] = {) show
0 348 moveto (8425   {"_set", setbuiltin},) show
0 336 moveto (8426   {"_get", getbuiltin}) show
0 324 moveto (8427 };) show
0 312 moveto (8428 int FDTcount = sizeof\(fdt\) / sizeof\(fdt[0]\); // # entris in FDT) show
0 300 moveto (8429 ) show
0 288 moveto (8430 void) show
0 276 moveto (8431 dobuiltin\(char *cmd\) {) show
0 264 moveto (8432   int i;) show
0 252 moveto (8433 ) show
0 240 moveto (8434   for \(i=0; i<FDTcount; i++\)) show
0 228 moveto (8435     if \(strncmp\(cmd, fdt[i].cmd, strlen\(fdt[i].cmd\)\) == 0\)) show
0 216 moveto (8436      \(*fdt[i].name\)\(cmd\);) show
0 204 moveto (8437 }) show
0 192 moveto (8438 ) show
0 180 moveto (8439 ) show
0 168 moveto (8440 ) show
0 156 moveto (8441 ) show
0 144 moveto (8442 ) show
0 132 moveto (8443 ) show
0 120 moveto (8444 ) show
0 108 moveto (8445 ) show
0 96 moveto (8446 ) show
0 84 moveto (8447 ) show
0 72 moveto (8448 ) show
0 60 moveto (8449 ) show
0 24 moveto (Sheet 84) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 6) show
0 648 moveto (8450 // ***** processing for shell builtins ends here *****) show
0 636 moveto (8451 #endif) show
0 624 moveto (8452 ) show
0 612 moveto (8453 int) show
0 600 moveto (8454 main\(void\)) show
0 588 moveto (8455 {) show
0 576 moveto (8456   static char buf[100];) show
0 564 moveto (8457   int fd;) show
0 552 moveto (8458 ) show
0 540 moveto (8459   // Assumes three file descriptors open.) show
0 528 moveto (8460   while\(\(fd = open\("console", O_RDWR\)\) >= 0\){) show
0 516 moveto (8461     if\(fd >= 3\){) show
0 504 moveto (8462       close\(fd\);) show
0 492 moveto (8463       break;) show
0 480 moveto (8464     }) show
0 468 moveto (8465   }) show
0 456 moveto (8466 ) show
0 444 moveto (8467   // Read and run input commands.) show
0 432 moveto (8468   while\(getcmd\(buf, sizeof\(buf\)\) >= 0\){) show
0 420 moveto (8469 // add support for built-ins here. cd is a built-in) show
0 408 moveto (8470     if\(buf[0] == 'c' && buf[1] == 'd' && buf[2] == ' '\){) show
0 396 moveto (8471       // Clumsy but will have to do for now.) show
0 384 moveto (8472       // Chdir has no effect on the parent if run in the child.) show
0 372 moveto (8473       buf[strlen\(buf\)-1] = 0;  // chop \\n) show
0 360 moveto (8474       if\(chdir\(buf+3\) < 0\)) show
0 348 moveto (8475         printf\(2, "cannot cd %s\\n", buf+3\);) show
0 336 moveto (8476       continue;) show
0 324 moveto (8477     }) show
0 312 moveto (8478 #ifdef USE_BUILTINS) show
0 300 moveto (8479     if \(buf[0]=='_'\) {     // assume it is a builtin command) show
0 288 moveto (8480       dobuiltin\(buf\);) show
0 276 moveto (8481       continue;) show
0 264 moveto (8482     }) show
0 252 moveto (8483 #endif) show
0 240 moveto (8484     if\(fork1\(\) == 0\)) show
0 228 moveto (8485       runcmd\(parsecmd\(buf\)\);) show
0 216 moveto (8486     wait\(\);) show
0 204 moveto (8487   }) show
0 192 moveto (8488   exit\(\);) show
0 180 moveto (8489 }) show
0 168 moveto (8490 ) show
0 156 moveto (8491 void) show
0 144 moveto (8492 panic\(char *s\)) show
0 132 moveto (8493 {) show
0 120 moveto (8494   printf\(2, "%s\\n", s\);) show
0 108 moveto (8495   exit\(\);) show
0 96 moveto (8496 }) show
0 84 moveto (8497 ) show
0 72 moveto (8498 ) show
0 60 moveto (8499 ) show
0 24 moveto (Sheet 84) show
grestore
restore
showpage
%%Page: 93 93
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 7) show
0 648 moveto (8500 int) show
0 636 moveto (8501 fork1\(void\)) show
0 624 moveto (8502 {) show
0 612 moveto (8503   int pid;) show
0 600 moveto (8504 ) show
0 588 moveto (8505   pid = fork\(\);) show
0 576 moveto (8506   if\(pid == -1\)) show
0 564 moveto (8507     panic\("fork"\);) show
0 552 moveto (8508   return pid;) show
0 540 moveto (8509 }) show
0 528 moveto (8510 ) show
0 516 moveto (8511 // Constructors) show
0 504 moveto (8512 ) show
0 492 moveto (8513 struct cmd*) show
0 480 moveto (8514 execcmd\(void\)) show
0 468 moveto (8515 {) show
0 456 moveto (8516   struct execcmd *cmd;) show
0 444 moveto (8517 ) show
0 432 moveto (8518   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8519   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8520   cmd->type = EXEC;) show
0 396 moveto (8521   return \(struct cmd*\)cmd;) show
0 384 moveto (8522 }) show
0 372 moveto (8523 ) show
0 360 moveto (8524 struct cmd*) show
0 348 moveto (8525 redircmd\(struct cmd *subcmd, char *file, char *efile, int mode, int fd\)) show
0 336 moveto (8526 {) show
0 324 moveto (8527   struct redircmd *cmd;) show
0 312 moveto (8528 ) show
0 300 moveto (8529   cmd = malloc\(sizeof\(*cmd\)\);) show
0 288 moveto (8530   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 276 moveto (8531   cmd->type = REDIR;) show
0 264 moveto (8532   cmd->cmd = subcmd;) show
0 252 moveto (8533   cmd->file = file;) show
0 240 moveto (8534   cmd->efile = efile;) show
0 228 moveto (8535   cmd->mode = mode;) show
0 216 moveto (8536   cmd->fd = fd;) show
0 204 moveto (8537   return \(struct cmd*\)cmd;) show
0 192 moveto (8538 }) show
0 180 moveto (8539 ) show
0 168 moveto (8540 ) show
0 156 moveto (8541 ) show
0 144 moveto (8542 ) show
0 132 moveto (8543 ) show
0 120 moveto (8544 ) show
0 108 moveto (8545 ) show
0 96 moveto (8546 ) show
0 84 moveto (8547 ) show
0 72 moveto (8548 ) show
0 60 moveto (8549 ) show
0 24 moveto (Sheet 85) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 8) show
0 648 moveto (8550 struct cmd*) show
0 636 moveto (8551 pipecmd\(struct cmd *left, struct cmd *right\)) show
0 624 moveto (8552 {) show
0 612 moveto (8553   struct pipecmd *cmd;) show
0 600 moveto (8554 ) show
0 588 moveto (8555   cmd = malloc\(sizeof\(*cmd\)\);) show
0 576 moveto (8556   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 564 moveto (8557   cmd->type = PIPE;) show
0 552 moveto (8558   cmd->left = left;) show
0 540 moveto (8559   cmd->right = right;) show
0 528 moveto (8560   return \(struct cmd*\)cmd;) show
0 516 moveto (8561 }) show
0 504 moveto (8562 ) show
0 492 moveto (8563 struct cmd*) show
0 480 moveto (8564 listcmd\(struct cmd *left, struct cmd *right\)) show
0 468 moveto (8565 {) show
0 456 moveto (8566   struct listcmd *cmd;) show
0 444 moveto (8567 ) show
0 432 moveto (8568   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8569   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8570   cmd->type = LIST;) show
0 396 moveto (8571   cmd->left = left;) show
0 384 moveto (8572   cmd->right = right;) show
0 372 moveto (8573   return \(struct cmd*\)cmd;) show
0 360 moveto (8574 }) show
0 348 moveto (8575 ) show
0 336 moveto (8576 struct cmd*) show
0 324 moveto (8577 backcmd\(struct cmd *subcmd\)) show
0 312 moveto (8578 {) show
0 300 moveto (8579   struct backcmd *cmd;) show
0 288 moveto (8580 ) show
0 276 moveto (8581   cmd = malloc\(sizeof\(*cmd\)\);) show
0 264 moveto (8582   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 252 moveto (8583   cmd->type = BACK;) show
0 240 moveto (8584   cmd->cmd = subcmd;) show
0 228 moveto (8585   return \(struct cmd*\)cmd;) show
0 216 moveto (8586 }) show
0 204 moveto (8587 ) show
0 192 moveto (8588 ) show
0 180 moveto (8589 ) show
0 168 moveto (8590 ) show
0 156 moveto (8591 ) show
0 144 moveto (8592 ) show
0 132 moveto (8593 ) show
0 120 moveto (8594 ) show
0 108 moveto (8595 ) show
0 96 moveto (8596 ) show
0 84 moveto (8597 ) show
0 72 moveto (8598 ) show
0 60 moveto (8599 ) show
0 24 moveto (Sheet 85) show
grestore
restore
showpage
%%Page: 94 94
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 9) show
0 648 moveto (8600 // Parsing) show
0 636 moveto (8601 ) show
0 624 moveto (8602 char whitespace[] = " \\t\\r\\n\\v";) show
0 612 moveto (8603 char symbols[] = "<|>&;\(\)";) show
0 600 moveto (8604 ) show
0 588 moveto (8605 int) show
0 576 moveto (8606 gettoken\(char **ps, char *es, char **q, char **eq\)) show
0 564 moveto (8607 {) show
0 552 moveto (8608   char *s;) show
0 540 moveto (8609   int ret;) show
0 528 moveto (8610 ) show
0 516 moveto (8611   s = *ps;) show
0 504 moveto (8612   while\(s < es && strchr\(whitespace, *s\)\)) show
0 492 moveto (8613     s++;) show
0 480 moveto (8614   if\(q\)) show
0 468 moveto (8615     *q = s;) show
0 456 moveto (8616   ret = *s;) show
0 444 moveto (8617   switch\(*s\){) show
0 432 moveto (8618   case 0:) show
0 420 moveto (8619     break;) show
0 408 moveto (8620   case '|':) show
0 396 moveto (8621   case '\(':) show
0 384 moveto (8622   case '\)':) show
0 372 moveto (8623   case ';':) show
0 360 moveto (8624   case '&':) show
0 348 moveto (8625   case '<':) show
0 336 moveto (8626     s++;) show
0 324 moveto (8627     break;) show
0 312 moveto (8628   case '>':) show
0 300 moveto (8629     s++;) show
0 288 moveto (8630     if\(*s == '>'\){) show
0 276 moveto (8631       ret = '+';) show
0 264 moveto (8632       s++;) show
0 252 moveto (8633     }) show
0 240 moveto (8634     break;) show
0 228 moveto (8635   default:) show
0 216 moveto (8636     ret = 'a';) show
0 204 moveto (8637     while\(s < es && !strchr\(whitespace, *s\) && !strchr\(symbols, *s\)\)) show
0 192 moveto (8638       s++;) show
0 180 moveto (8639     break;) show
0 168 moveto (8640   }) show
0 156 moveto (8641   if\(eq\)) show
0 144 moveto (8642     *eq = s;) show
0 132 moveto (8643 ) show
0 120 moveto (8644   while\(s < es && strchr\(whitespace, *s\)\)) show
0 108 moveto (8645     s++;) show
0 96 moveto (8646   *ps = s;) show
0 84 moveto (8647   return ret;) show
0 72 moveto (8648 }) show
0 60 moveto (8649 ) show
0 24 moveto (Sheet 86) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 10) show
0 648 moveto (8650 int) show
0 636 moveto (8651 peek\(char **ps, char *es, char *toks\)) show
0 624 moveto (8652 {) show
0 612 moveto (8653   char *s;) show
0 600 moveto (8654 ) show
0 588 moveto (8655   s = *ps;) show
0 576 moveto (8656   while\(s < es && strchr\(whitespace, *s\)\)) show
0 564 moveto (8657     s++;) show
0 552 moveto (8658   *ps = s;) show
0 540 moveto (8659   return *s && strchr\(toks, *s\);) show
0 528 moveto (8660 }) show
0 516 moveto (8661 ) show
0 504 moveto (8662 struct cmd *parseline\(char**, char*\);) show
0 492 moveto (8663 struct cmd *parsepipe\(char**, char*\);) show
0 480 moveto (8664 struct cmd *parseexec\(char**, char*\);) show
0 468 moveto (8665 struct cmd *nulterminate\(struct cmd*\);) show
0 456 moveto (8666 ) show
0 444 moveto (8667 struct cmd*) show
0 432 moveto (8668 parsecmd\(char *s\)) show
0 420 moveto (8669 {) show
0 408 moveto (8670   char *es;) show
0 396 moveto (8671   struct cmd *cmd;) show
0 384 moveto (8672 ) show
0 372 moveto (8673   es = s + strlen\(s\);) show
0 360 moveto (8674   cmd = parseline\(&s, es\);) show
0 348 moveto (8675   peek\(&s, es, ""\);) show
0 336 moveto (8676   if\(s != es\){) show
0 324 moveto (8677     printf\(2, "leftovers: %s\\n", s\);) show
0 312 moveto (8678     panic\("syntax"\);) show
0 300 moveto (8679   }) show
0 288 moveto (8680   nulterminate\(cmd\);) show
0 276 moveto (8681   return cmd;) show
0 264 moveto (8682 }) show
0 252 moveto (8683 ) show
0 240 moveto (8684 struct cmd*) show
0 228 moveto (8685 parseline\(char **ps, char *es\)) show
0 216 moveto (8686 {) show
0 204 moveto (8687   struct cmd *cmd;) show
0 192 moveto (8688 ) show
0 180 moveto (8689   cmd = parsepipe\(ps, es\);) show
0 168 moveto (8690   while\(peek\(ps, es, "&"\)\){) show
0 156 moveto (8691     gettoken\(ps, es, 0, 0\);) show
0 144 moveto (8692     cmd = backcmd\(cmd\);) show
0 132 moveto (8693   }) show
0 120 moveto (8694   if\(peek\(ps, es, ";"\)\){) show
0 108 moveto (8695     gettoken\(ps, es, 0, 0\);) show
0 96 moveto (8696     cmd = listcmd\(cmd, parseline\(ps, es\)\);) show
0 84 moveto (8697   }) show
0 72 moveto (8698   return cmd;) show
0 60 moveto (8699 }) show
0 24 moveto (Sheet 86) show
grestore
restore
showpage
%%Page: 95 95
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 11) show
0 648 moveto (8700 struct cmd*) show
0 636 moveto (8701 parsepipe\(char **ps, char *es\)) show
0 624 moveto (8702 {) show
0 612 moveto (8703   struct cmd *cmd;) show
0 600 moveto (8704 ) show
0 588 moveto (8705   cmd = parseexec\(ps, es\);) show
0 576 moveto (8706   if\(peek\(ps, es, "|"\)\){) show
0 564 moveto (8707     gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8708     cmd = pipecmd\(cmd, parsepipe\(ps, es\)\);) show
0 540 moveto (8709   }) show
0 528 moveto (8710   return cmd;) show
0 516 moveto (8711 }) show
0 504 moveto (8712 ) show
0 492 moveto (8713 struct cmd*) show
0 480 moveto (8714 parseredirs\(struct cmd *cmd, char **ps, char *es\)) show
0 468 moveto (8715 {) show
0 456 moveto (8716   int tok;) show
0 444 moveto (8717   char *q, *eq;) show
0 432 moveto (8718 ) show
0 420 moveto (8719   while\(peek\(ps, es, "<>"\)\){) show
0 408 moveto (8720     tok = gettoken\(ps, es, 0, 0\);) show
0 396 moveto (8721     if\(gettoken\(ps, es, &q, &eq\) != 'a'\)) show
0 384 moveto (8722       panic\("missing file for redirection"\);) show
0 372 moveto (8723     switch\(tok\){) show
0 360 moveto (8724     case '<':) show
0 348 moveto (8725       cmd = redircmd\(cmd, q, eq, O_RDONLY, 0\);) show
0 336 moveto (8726       break;) show
0 324 moveto (8727     case '>':) show
0 312 moveto (8728       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 300 moveto (8729       break;) show
0 288 moveto (8730     case '+':  // >>) show
0 276 moveto (8731       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 264 moveto (8732       break;) show
0 252 moveto (8733     }) show
0 240 moveto (8734   }) show
0 228 moveto (8735   return cmd;) show
0 216 moveto (8736 }) show
0 204 moveto (8737 ) show
0 192 moveto (8738 ) show
0 180 moveto (8739 ) show
0 168 moveto (8740 ) show
0 156 moveto (8741 ) show
0 144 moveto (8742 ) show
0 132 moveto (8743 ) show
0 120 moveto (8744 ) show
0 108 moveto (8745 ) show
0 96 moveto (8746 ) show
0 84 moveto (8747 ) show
0 72 moveto (8748 ) show
0 60 moveto (8749 ) show
0 24 moveto (Sheet 87) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 12) show
0 648 moveto (8750 struct cmd*) show
0 636 moveto (8751 parseblock\(char **ps, char *es\)) show
0 624 moveto (8752 {) show
0 612 moveto (8753   struct cmd *cmd;) show
0 600 moveto (8754 ) show
0 588 moveto (8755   if\(!peek\(ps, es, "\("\)\)) show
0 576 moveto (8756     panic\("parseblock"\);) show
0 564 moveto (8757   gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8758   cmd = parseline\(ps, es\);) show
0 540 moveto (8759   if\(!peek\(ps, es, "\)"\)\)) show
0 528 moveto (8760     panic\("syntax - missing \)"\);) show
0 516 moveto (8761   gettoken\(ps, es, 0, 0\);) show
0 504 moveto (8762   cmd = parseredirs\(cmd, ps, es\);) show
0 492 moveto (8763   return cmd;) show
0 480 moveto (8764 }) show
0 468 moveto (8765 ) show
0 456 moveto (8766 struct cmd*) show
0 444 moveto (8767 parseexec\(char **ps, char *es\)) show
0 432 moveto (8768 {) show
0 420 moveto (8769   char *q, *eq;) show
0 408 moveto (8770   int tok, argc;) show
0 396 moveto (8771   struct execcmd *cmd;) show
0 384 moveto (8772   struct cmd *ret;) show
0 372 moveto (8773 ) show
0 360 moveto (8774   if\(peek\(ps, es, "\("\)\)) show
0 348 moveto (8775     return parseblock\(ps, es\);) show
0 336 moveto (8776 ) show
0 324 moveto (8777   ret = execcmd\(\);) show
0 312 moveto (8778   cmd = \(struct execcmd*\)ret;) show
0 300 moveto (8779 ) show
0 288 moveto (8780   argc = 0;) show
0 276 moveto (8781   ret = parseredirs\(ret, ps, es\);) show
0 264 moveto (8782   while\(!peek\(ps, es, "|\)&;"\)\){) show
0 252 moveto (8783     if\(\(tok=gettoken\(ps, es, &q, &eq\)\) == 0\)) show
0 240 moveto (8784       break;) show
0 228 moveto (8785     if\(tok != 'a'\)) show
0 216 moveto (8786       panic\("syntax"\);) show
0 204 moveto (8787     cmd->argv[argc] = q;) show
0 192 moveto (8788     cmd->eargv[argc] = eq;) show
0 180 moveto (8789     argc++;) show
0 168 moveto (8790     if\(argc >= MAXARGS\)) show
0 156 moveto (8791       panic\("too many args"\);) show
0 144 moveto (8792     ret = parseredirs\(ret, ps, es\);) show
0 132 moveto (8793   }) show
0 120 moveto (8794   cmd->argv[argc] = 0;) show
0 108 moveto (8795   cmd->eargv[argc] = 0;) show
0 96 moveto (8796   return ret;) show
0 84 moveto (8797 }) show
0 72 moveto (8798 ) show
0 60 moveto (8799 ) show
0 24 moveto (Sheet 87) show
grestore
restore
showpage
%%Page: 96 96
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/sh.c  Page 13) show
0 648 moveto (8800 // NUL-terminate all the counted strings.) show
0 636 moveto (8801 struct cmd*) show
0 624 moveto (8802 nulterminate\(struct cmd *cmd\)) show
0 612 moveto (8803 {) show
0 600 moveto (8804   int i;) show
0 588 moveto (8805   struct backcmd *bcmd;) show
0 576 moveto (8806   struct execcmd *ecmd;) show
0 564 moveto (8807   struct listcmd *lcmd;) show
0 552 moveto (8808   struct pipecmd *pcmd;) show
0 540 moveto (8809   struct redircmd *rcmd;) show
0 528 moveto (8810 ) show
0 516 moveto (8811   if\(cmd == 0\)) show
0 504 moveto (8812     return 0;) show
0 492 moveto (8813 ) show
0 480 moveto (8814   switch\(cmd->type\){) show
0 468 moveto (8815   case EXEC:) show
0 456 moveto (8816     ecmd = \(struct execcmd*\)cmd;) show
0 444 moveto (8817     for\(i=0; ecmd->argv[i]; i++\)) show
0 432 moveto (8818       *ecmd->eargv[i] = 0;) show
0 420 moveto (8819     break;) show
0 408 moveto (8820 ) show
0 396 moveto (8821   case REDIR:) show
0 384 moveto (8822     rcmd = \(struct redircmd*\)cmd;) show
0 372 moveto (8823     nulterminate\(rcmd->cmd\);) show
0 360 moveto (8824     *rcmd->efile = 0;) show
0 348 moveto (8825     break;) show
0 336 moveto (8826 ) show
0 324 moveto (8827   case PIPE:) show
0 312 moveto (8828     pcmd = \(struct pipecmd*\)cmd;) show
0 300 moveto (8829     nulterminate\(pcmd->left\);) show
0 288 moveto (8830     nulterminate\(pcmd->right\);) show
0 276 moveto (8831     break;) show
0 264 moveto (8832 ) show
0 252 moveto (8833   case LIST:) show
0 240 moveto (8834     lcmd = \(struct listcmd*\)cmd;) show
0 228 moveto (8835     nulterminate\(lcmd->left\);) show
0 216 moveto (8836     nulterminate\(lcmd->right\);) show
0 204 moveto (8837     break;) show
0 192 moveto (8838 ) show
0 180 moveto (8839   case BACK:) show
0 168 moveto (8840     bcmd = \(struct backcmd*\)cmd;) show
0 156 moveto (8841     nulterminate\(bcmd->cmd\);) show
0 144 moveto (8842     break;) show
0 132 moveto (8843   }) show
0 120 moveto (8844   return cmd;) show
0 108 moveto (8845 }) show
0 96 moveto (8846 ) show
0 84 moveto (8847 ) show
0 72 moveto (8848 ) show
0 60 moveto (8849 ) show
0 24 moveto (Sheet 88) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/bootasm.S  Page 1) show
0 648 moveto (8850 #include "asm.h") show
0 636 moveto (8851 #include "memlayout.h") show
0 624 moveto (8852 #include "mmu.h") show
0 612 moveto (8853 ) show
0 600 moveto (8854 # Start the first CPU: switch to 32-bit protected mode, jump into C.) show
0 588 moveto (8855 # The BIOS loads this code from the first sector of the hard disk into) show
0 576 moveto (8856 # memory at physical address 0x7c00 and starts executing in real mode) show
0 564 moveto (8857 # with %cs=0 %ip=7c00.) show
0 552 moveto (8858 ) show
0 540 moveto (8859 .code16                       # Assemble for 16-bit mode) show
0 528 moveto (8860 .globl start) show
0 516 moveto (8861 start:) show
0 504 moveto (8862   cli                         # BIOS enabled interrupts; disable) show
0 492 moveto (8863 ) show
0 480 moveto (8864   # Zero data segment registers DS, ES, and SS.) show
0 468 moveto (8865   xorw    %ax,%ax             # Set %ax to zero) show
0 456 moveto (8866   movw    %ax,%ds             # -> Data Segment) show
0 444 moveto (8867   movw    %ax,%es             # -> Extra Segment) show
0 432 moveto (8868   movw    %ax,%ss             # -> Stack Segment) show
0 420 moveto (8869 ) show
0 408 moveto (8870   # Physical address line A20 is tied to zero so that the first PCs) show
0 396 moveto (8871   # with 2 MB would run software that assumed 1 MB.  Undo that.) show
0 384 moveto (8872 seta20.1:) show
0 372 moveto (8873   inb     $0x64,%al               # Wait for not busy) show
0 360 moveto (8874   testb   $0x2,%al) show
0 348 moveto (8875   jnz     seta20.1) show
0 336 moveto (8876 ) show
0 324 moveto (8877   movb    $0xd1,%al               # 0xd1 -> port 0x64) show
0 312 moveto (8878   outb    %al,$0x64) show
0 300 moveto (8879 ) show
0 288 moveto (8880 seta20.2:) show
0 276 moveto (8881   inb     $0x64,%al               # Wait for not busy) show
0 264 moveto (8882   testb   $0x2,%al) show
0 252 moveto (8883   jnz     seta20.2) show
0 240 moveto (8884 ) show
0 228 moveto (8885   movb    $0xdf,%al               # 0xdf -> port 0x60) show
0 216 moveto (8886   outb    %al,$0x60) show
0 204 moveto (8887 ) show
0 192 moveto (8888   # Switch from real to protected mode.  Use a bootstrap GDT that makes) show
0 180 moveto (8889   # virtual addresses map directly to physical addresses so that the) show
0 168 moveto (8890   # effective memory map doesn't change during the transition.) show
0 156 moveto (8891   lgdt    gdtdesc) show
0 144 moveto (8892   movl    %cr0, %eax) show
0 132 moveto (8893   orl     $CR0_PE, %eax) show
0 120 moveto (8894   movl    %eax, %cr0) show
0 108 moveto (8895 ) show
0 96 moveto (8896   # Complete transition to 32-bit protected mode by using long jmp) show
0 84 moveto (8897   # to reload %cs and %eip.  The segment descriptors are set up with no) show
0 72 moveto (8898   # translation, so that the mapping is still the identity mapping.) show
0 60 moveto (8899   ljmp    $\(SEG_KCODE<<3\), $start32) show
0 24 moveto (Sheet 88) show
grestore
restore
showpage
%%Page: 97 97
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/bootasm.S  Page 2) show
0 648 moveto (8900 .code32  # Tell assembler to generate 32-bit code now.) show
0 636 moveto (8901 start32:) show
0 624 moveto (8902   # Set up the protected-mode data segment registers) show
0 612 moveto (8903   movw    $\(SEG_KDATA<<3\), %ax    # Our data segment selector) show
0 600 moveto (8904   movw    %ax, %ds                # -> DS: Data Segment) show
0 588 moveto (8905   movw    %ax, %es                # -> ES: Extra Segment) show
0 576 moveto (8906   movw    %ax, %ss                # -> SS: Stack Segment) show
0 564 moveto (8907   movw    $0, %ax                 # Zero segments not ready for use) show
0 552 moveto (8908   movw    %ax, %fs                # -> FS) show
0 540 moveto (8909   movw    %ax, %gs                # -> GS) show
0 528 moveto (8910 ) show
0 516 moveto (8911   # Set up the stack pointer and call into C.) show
0 504 moveto (8912   movl    $start, %esp) show
0 492 moveto (8913   call    bootmain) show
0 480 moveto (8914 ) show
0 468 moveto (8915   # If bootmain returns \(it shouldn't\), trigger a Bochs) show
0 456 moveto (8916   # breakpoint if running under Bochs, then loop.) show
0 444 moveto (8917   movw    $0x8a00, %ax            # 0x8a00 -> port 0x8a00) show
0 432 moveto (8918   movw    %ax, %dx) show
0 420 moveto (8919   outw    %ax, %dx) show
0 408 moveto (8920   movw    $0x8ae0, %ax            # 0x8ae0 -> port 0x8a00) show
0 396 moveto (8921   outw    %ax, %dx) show
0 384 moveto (8922 spin:) show
0 372 moveto (8923   jmp     spin) show
0 360 moveto (8924 ) show
0 348 moveto (8925 # Bootstrap GDT) show
0 336 moveto (8926 .p2align 2                                # force 4 byte alignment) show
0 324 moveto (8927 gdt:) show
0 312 moveto (8928   SEG_NULLASM                             # null seg) show
0 300 moveto (8929   SEG_ASM\(STA_X|STA_R, 0x0, 0xffffffff\)   # code seg) show
0 288 moveto (8930   SEG_ASM\(STA_W, 0x0, 0xffffffff\)         # data seg) show
0 276 moveto (8931 ) show
0 264 moveto (8932 gdtdesc:) show
0 252 moveto (8933   .word   \(gdtdesc - gdt - 1\)             # sizeof\(gdt\) - 1) show
0 240 moveto (8934   .long   gdt                             # address gdt) show
0 228 moveto (8935 ) show
0 216 moveto (8936 ) show
0 204 moveto (8937 ) show
0 192 moveto (8938 ) show
0 180 moveto (8939 ) show
0 168 moveto (8940 ) show
0 156 moveto (8941 ) show
0 144 moveto (8942 ) show
0 132 moveto (8943 ) show
0 120 moveto (8944 ) show
0 108 moveto (8945 ) show
0 96 moveto (8946 ) show
0 84 moveto (8947 ) show
0 72 moveto (8948 ) show
0 60 moveto (8949 ) show
0 24 moveto (Sheet 89) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/bootmain.c  Page 1) show
0 648 moveto (8950 // Boot loader.) show
0 636 moveto (8951 //) show
0 624 moveto (8952 // Part of the boot block, along with bootasm.S, which calls bootmain\(\).) show
0 612 moveto (8953 // bootasm.S has put the processor into protected 32-bit mode.) show
0 600 moveto (8954 // bootmain\(\) loads an ELF kernel image from the disk starting at) show
0 588 moveto (8955 // sector 1 and then jumps to the kernel entry routine.) show
0 576 moveto (8956 ) show
0 564 moveto (8957 #include "types.h") show
0 552 moveto (8958 #include "elf.h") show
0 540 moveto (8959 #include "x86.h") show
0 528 moveto (8960 #include "memlayout.h") show
0 516 moveto (8961 ) show
0 504 moveto (8962 #define SECTSIZE  512) show
0 492 moveto (8963 ) show
0 480 moveto (8964 void readseg\(uchar*, uint, uint\);) show
0 468 moveto (8965 ) show
0 456 moveto (8966 void) show
0 444 moveto (8967 bootmain\(void\)) show
0 432 moveto (8968 {) show
0 420 moveto (8969   struct elfhdr *elf;) show
0 408 moveto (8970   struct proghdr *ph, *eph;) show
0 396 moveto (8971   void \(*entry\)\(void\);) show
0 384 moveto (8972   uchar* pa;) show
0 372 moveto (8973 ) show
0 360 moveto (8974   elf = \(struct elfhdr*\)0x10000;  // scratch space) show
0 348 moveto (8975 ) show
0 336 moveto (8976   // Read 1st page off disk) show
0 324 moveto (8977   readseg\(\(uchar*\)elf, 4096, 0\);) show
0 312 moveto (8978 ) show
0 300 moveto (8979   // Is this an ELF executable?) show
0 288 moveto (8980   if\(elf->magic != ELF_MAGIC\)) show
0 276 moveto (8981     return;  // let bootasm.S handle error) show
0 264 moveto (8982 ) show
0 252 moveto (8983   // Load each program segment \(ignores ph flags\).) show
0 240 moveto (8984   ph = \(struct proghdr*\)\(\(uchar*\)elf + elf->phoff\);) show
0 228 moveto (8985   eph = ph + elf->phnum;) show
0 216 moveto (8986   for\(; ph < eph; ph++\){) show
0 204 moveto (8987     pa = \(uchar*\)ph->paddr;) show
0 192 moveto (8988     readseg\(pa, ph->filesz, ph->off\);) show
0 180 moveto (8989     if\(ph->memsz > ph->filesz\)) show
0 168 moveto (8990       stosb\(pa + ph->filesz, 0, ph->memsz - ph->filesz\);) show
0 156 moveto (8991   }) show
0 144 moveto (8992 ) show
0 132 moveto (8993   // Call the entry point from the ELF header.) show
0 120 moveto (8994   // Does not return!) show
0 108 moveto (8995   entry = \(void\(*\)\(void\)\)\(elf->entry\);) show
0 96 moveto (8996   entry\(\);) show
0 84 moveto (8997 }) show
0 72 moveto (8998 ) show
0 60 moveto (8999 ) show
0 24 moveto (Sheet 89) show
grestore
restore
showpage
%%Page: 98 98
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/bootmain.c  Page 2) show
0 648 moveto (9000 void) show
0 636 moveto (9001 waitdisk\(void\)) show
0 624 moveto (9002 {) show
0 612 moveto (9003   // Wait for disk ready.) show
0 600 moveto (9004   while\(\(inb\(0x1F7\) & 0xC0\) != 0x40\)) show
0 588 moveto (9005     ;) show
0 576 moveto (9006 }) show
0 564 moveto (9007 ) show
0 552 moveto (9008 // Read a single sector at offset into dst.) show
0 540 moveto (9009 void) show
0 528 moveto (9010 readsect\(void *dst, uint offset\)) show
0 516 moveto (9011 {) show
0 504 moveto (9012   // Issue command.) show
0 492 moveto (9013   waitdisk\(\);) show
0 480 moveto (9014   outb\(0x1F2, 1\);   // count = 1) show
0 468 moveto (9015   outb\(0x1F3, offset\);) show
0 456 moveto (9016   outb\(0x1F4, offset >> 8\);) show
0 444 moveto (9017   outb\(0x1F5, offset >> 16\);) show
0 432 moveto (9018   outb\(0x1F6, \(offset >> 24\) | 0xE0\);) show
0 420 moveto (9019   outb\(0x1F7, 0x20\);  // cmd 0x20 - read sectors) show
0 408 moveto (9020 ) show
0 396 moveto (9021   // Read data.) show
0 384 moveto (9022   waitdisk\(\);) show
0 372 moveto (9023   insl\(0x1F0, dst, SECTSIZE/4\);) show
0 360 moveto (9024 }) show
0 348 moveto (9025 ) show
0 336 moveto (9026 // Read 'count' bytes at 'offset' from kernel into physical address 'pa'.) show
0 324 moveto (9027 // Might copy more than asked.) show
0 312 moveto (9028 void) show
0 300 moveto (9029 readseg\(uchar* pa, uint count, uint offset\)) show
0 288 moveto (9030 {) show
0 276 moveto (9031   uchar* epa;) show
0 264 moveto (9032 ) show
0 252 moveto (9033   epa = pa + count;) show
0 240 moveto (9034 ) show
0 228 moveto (9035   // Round down to sector boundary.) show
0 216 moveto (9036   pa -= offset % SECTSIZE;) show
0 204 moveto (9037 ) show
0 192 moveto (9038   // Translate from bytes to sectors; kernel starts at sector 1.) show
0 180 moveto (9039   offset = \(offset / SECTSIZE\) + 1;) show
0 168 moveto (9040 ) show
0 156 moveto (9041   // If this is too slow, we could read lots of sectors at a time.) show
0 144 moveto (9042   // We'd write more to memory than asked, but it doesn't matter --) show
0 132 moveto (9043   // we load in increasing order.) show
0 120 moveto (9044   for\(; pa < epa; pa += SECTSIZE, offset++\)) show
0 108 moveto (9045     readsect\(pa, offset\);) show
0 96 moveto (9046 }) show
0 84 moveto (9047 ) show
0 72 moveto (9048 ) show
0 60 moveto (9049 ) show
0 24 moveto (Sheet 90) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/print_mode.c  Page 1) show
0 648 moveto (9050 #ifdef CS333_P4) show
0 636 moveto (9051 // this is an ugly series of if statements but it works) show
0 624 moveto (9052 void) show
0 612 moveto (9053 print_mode\(struct stat* st\)) show
0 600 moveto (9054 {) show
0 588 moveto (9055   switch \(st->type\) {) show
0 576 moveto (9056     case T_DIR: printf\(1, "d"\); break;) show
0 564 moveto (9057     case T_FILE: printf\(1, "-"\); break;) show
0 552 moveto (9058     case T_DEV: printf\(1, "c"\); break;) show
0 540 moveto (9059     default: printf\(1, "?"\);) show
0 528 moveto (9060   }) show
0 516 moveto (9061 ) show
0 504 moveto (9062   if \(st->mode.flags.u_r\)) show
0 492 moveto (9063     printf\(1, "r"\);) show
0 480 moveto (9064   else) show
0 468 moveto (9065     printf\(1, "-"\);) show
0 456 moveto (9066 ) show
0 444 moveto (9067   if \(st->mode.flags.u_w\)) show
0 432 moveto (9068     printf\(1, "w"\);) show
0 420 moveto (9069   else) show
0 408 moveto (9070     printf\(1, "-"\);) show
0 396 moveto (9071 ) show
0 384 moveto (9072   if \(\(st->mode.flags.u_x\) & \(st->mode.flags.setuid\)\)) show
0 372 moveto (9073     printf\(1, "S"\);) show
0 360 moveto (9074   else if \(st->mode.flags.u_x\)) show
0 348 moveto (9075     printf\(1, "x"\);) show
0 336 moveto (9076   else) show
0 324 moveto (9077     printf\(1, "-"\);) show
0 312 moveto (9078 ) show
0 300 moveto (9079   if \(st->mode.flags.g_r\)) show
0 288 moveto (9080     printf\(1, "r"\);) show
0 276 moveto (9081   else) show
0 264 moveto (9082     printf\(1, "-"\);) show
0 252 moveto (9083 ) show
0 240 moveto (9084   if \(st->mode.flags.g_w\)) show
0 228 moveto (9085     printf\(1, "w"\);) show
0 216 moveto (9086   else) show
0 204 moveto (9087     printf\(1, "-"\);) show
0 192 moveto (9088 ) show
0 180 moveto (9089   if \(st->mode.flags.g_x\)) show
0 168 moveto (9090     printf\(1, "x"\);) show
0 156 moveto (9091   else) show
0 144 moveto (9092     printf\(1, "-"\);) show
0 132 moveto (9093 ) show
0 120 moveto (9094   if \(st->mode.flags.o_r\)) show
0 108 moveto (9095     printf\(1, "r"\);) show
0 96 moveto (9096   else) show
0 84 moveto (9097     printf\(1, "-"\);) show
0 72 moveto (9098 ) show
0 60 moveto (9099 ) show
0 24 moveto (Sheet 90) show
grestore
restore
showpage
%%Page: 99 99
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/print_mode.c  Page 2) show
0 648 moveto (9100   if \(st->mode.flags.o_w\)) show
0 636 moveto (9101     printf\(1, "w"\);) show
0 624 moveto (9102   else) show
0 612 moveto (9103     printf\(1, "-"\);) show
0 600 moveto (9104 ) show
0 588 moveto (9105   if \(st->mode.flags.o_x\)) show
0 576 moveto (9106     printf\(1, "x"\);) show
0 564 moveto (9107   else) show
0 552 moveto (9108     printf\(1, "-"\);) show
0 540 moveto (9109 ) show
0 528 moveto (9110   return;) show
0 516 moveto (9111 }) show
0 504 moveto (9112 #endif) show
0 492 moveto (9113 ) show
0 480 moveto (9114 ) show
0 468 moveto (9115 ) show
0 456 moveto (9116 ) show
0 444 moveto (9117 ) show
0 432 moveto (9118 ) show
0 420 moveto (9119 ) show
0 408 moveto (9120 ) show
0 396 moveto (9121 ) show
0 384 moveto (9122 ) show
0 372 moveto (9123 ) show
0 360 moveto (9124 ) show
0 348 moveto (9125 ) show
0 336 moveto (9126 ) show
0 324 moveto (9127 ) show
0 312 moveto (9128 ) show
0 300 moveto (9129 ) show
0 288 moveto (9130 ) show
0 276 moveto (9131 ) show
0 264 moveto (9132 ) show
0 252 moveto (9133 ) show
0 240 moveto (9134 ) show
0 228 moveto (9135 ) show
0 216 moveto (9136 ) show
0 204 moveto (9137 ) show
0 192 moveto (9138 ) show
0 180 moveto (9139 ) show
0 168 moveto (9140 ) show
0 156 moveto (9141 ) show
0 144 moveto (9142 ) show
0 132 moveto (9143 ) show
0 120 moveto (9144 ) show
0 108 moveto (9145 ) show
0 96 moveto (9146 ) show
0 84 moveto (9147 ) show
0 72 moveto (9148 ) show
0 60 moveto (9149 ) show
0 24 moveto (Sheet 91) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/date.c  Page 1) show
0 648 moveto (9150 #include "types.h") show
0 636 moveto (9151 #include "user.h") show
0 624 moveto (9152 #include "date.h") show
0 612 moveto (9153 ) show
0 600 moveto (9154 //This is a SHELL PROGRAM that should only) show
0 588 moveto (9155 //be used to EXECUTE SYSTEM CALLS) show
0 576 moveto (9156 ) show
0 564 moveto (9157 int main \(int argc, char* argv[]\){) show
0 552 moveto (9158 ) show
0 540 moveto (9159 ) show
0 528 moveto (9160     //contains all the pieces of time) show
0 516 moveto (9161     //with resolution of one second) show
0 504 moveto (9162     struct rtcdate r;) show
0 492 moveto (9163 ) show
0 480 moveto (9164     if \(date\(&r\)\) {) show
0 468 moveto (9165 ) show
0 456 moveto (9166         printf\(2, "Date_failed\\n"\);) show
0 444 moveto (9167         exit\(\);) show
0 432 moveto (9168     }) show
0 420 moveto (9169 ) show
0 408 moveto (9170     if\( date\(&r\) == 0\){) show
0 396 moveto (9171         printf\(1, "day: %d month: %d year: %d \\t hour: %d minute: %d second: %d \\n", r.day, r.month, r.year, r.hour, r.minute, r.second\);) show
0 384 moveto (9172         exit\(\);) show
0 372 moveto (9173     }) show
0 360 moveto (9174 }) show
0 348 moveto (9175 ) show
0 336 moveto (9176 ) show
0 324 moveto (9177 ) show
0 312 moveto (9178 ) show
0 300 moveto (9179 ) show
0 288 moveto (9180 ) show
0 276 moveto (9181 ) show
0 264 moveto (9182 ) show
0 252 moveto (9183 ) show
0 240 moveto (9184 ) show
0 228 moveto (9185 ) show
0 216 moveto (9186 ) show
0 204 moveto (9187 ) show
0 192 moveto (9188 ) show
0 180 moveto (9189 ) show
0 168 moveto (9190 ) show
0 156 moveto (9191 ) show
0 144 moveto (9192 ) show
0 132 moveto (9193 ) show
0 120 moveto (9194 ) show
0 108 moveto (9195 ) show
0 96 moveto (9196 ) show
0 84 moveto (9197 ) show
0 72 moveto (9198 ) show
0 60 moveto (9199 ) show
0 24 moveto (Sheet 91) show
grestore
restore
showpage
%%Page: 100 100
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/time.c  Page 1) show
0 648 moveto (9200 #include "types.h") show
0 636 moveto (9201 #include "user.h") show
0 624 moveto (9202 ) show
0 612 moveto (9203 //This is a SHELL PROGRAM that should only) show
0 600 moveto (9204 //be used to EXECUTE SYSTEM CALLS) show
0 588 moveto (9205 ) show
0 576 moveto (9206 int main \(int argc, char* argv[]\){) show
0 564 moveto (9207 ) show
0 552 moveto (9208 ) show
0 540 moveto (9209   if\( argc < 2\)) show
0 528 moveto (9210       printf\(1, "Usage: Report runtime of programs provided as arguments, no arguments provided\\n"\);) show
0 516 moveto (9211 ) show
0 504 moveto (9212 ) show
0 492 moveto (9213   uint start = \(uint\)uptime\(\);) show
0 480 moveto (9214   uint finish = 0;) show
0 468 moveto (9215   uint pid = fork\(\);) show
0 456 moveto (9216 ) show
0 444 moveto (9217   if\(pid == 0 \){) show
0 432 moveto (9218 ) show
0 420 moveto (9219       if\(exec\(argv[1], argv +1\)\){) show
0 408 moveto (9220           printf\(1, "Exec Failed"\);) show
0 396 moveto (9221           exit\(\);) show
0 384 moveto (9222       }) show
0 372 moveto (9223   }) show
0 360 moveto (9224   else{) show
0 348 moveto (9225     wait\(\);) show
0 336 moveto (9226   }) show
0 324 moveto (9227 ) show
0 312 moveto (9228     finish  = \(uint\)uptime\(\);) show
0 300 moveto (9229     printf\(1, "%s took %d.%d time to run\\n", argv[1], \(finish - start\) / 100, \(finish - start\) % 100\);) show
0 288 moveto (9230 ) show
0 276 moveto (9231   exit\(\);) show
0 264 moveto (9232 }) show
0 252 moveto (9233 ) show
0 240 moveto (9234 ) show
0 228 moveto (9235 ) show
0 216 moveto (9236 ) show
0 204 moveto (9237 ) show
0 192 moveto (9238 ) show
0 180 moveto (9239 ) show
0 168 moveto (9240 ) show
0 156 moveto (9241 ) show
0 144 moveto (9242 ) show
0 132 moveto (9243 ) show
0 120 moveto (9244 ) show
0 108 moveto (9245 ) show
0 96 moveto (9246 ) show
0 84 moveto (9247 ) show
0 72 moveto (9248 ) show
0 60 moveto (9249 ) show
0 24 moveto (Sheet 92) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/ps.c  Page 1) show
0 648 moveto (9250 #include "types.h") show
0 636 moveto (9251 #include "user.h") show
0 624 moveto (9252 #include "uproc.h") show
0 612 moveto (9253 ) show
0 600 moveto (9254 //This is a SHELL PROGRAM that should only) show
0 588 moveto (9255 //be used to EXECUTE SYSTEM CALLS) show
0 576 moveto (9256 ) show
0 564 moveto (9257 int main \(int argc, char* argv[]\){) show
0 552 moveto (9258 ) show
0 540 moveto (9259 ) show
0 528 moveto (9260     //contains all the pieces of time) show
0 516 moveto (9261     //with resolution of one second) show
0 504 moveto (9262     struct uproc* up;) show
0 492 moveto (9263     int MAX = 64;) show
0 480 moveto (9264     char  *n = "Name",) show
0 468 moveto (9265           *p = "PID",) show
0 456 moveto (9266           *u = "UID",) show
0 444 moveto (9267           *g = "GID",) show
0 432 moveto (9268           *pp = "PPID",) show
0 420 moveto (9269           *tot = "CPU \(s\)",) show
0 408 moveto (9270           *e = "Elapsed \(s\)",) show
0 396 moveto (9271           *st = "State",) show
0 384 moveto (9272           *si = "Size";) show
0 372 moveto (9273 //          *pr = "Priority";) show
0 360 moveto (9274 ) show
0 348 moveto (9275     up =  malloc\( sizeof\(&up\) * MAX\);) show
0 336 moveto (9276     MAX =  getprocs\(MAX, up\);) show
0 324 moveto (9277 ) show
0 312 moveto (9278     if\(MAX < 0\){) show
0 300 moveto (9279         printf\(1, "getprocs failed\\n"\);) show
0 288 moveto (9280     exit\(\);) show
0 276 moveto (9281     }) show
0 264 moveto (9282 ) show
0 252 moveto (9283 ) show
0 240 moveto (9284     printf\(1, "%s\\t | %s\\t | %s\\t | %s\\t | %s\\t | %s | %s | %s\\t | %s\\t | \\n",) show
0 228 moveto (9285                 n, p,u,g,pp, tot,e,st,si\);) show
0 216 moveto (9286     for\(int  i = 0; i < MAX; i++\){) show
0 204 moveto (9287 ) show
0 192 moveto (9288        printf\(1, " %s\\t | %d\\t | %d\\t | %d\\t | %d\\t |  %d.%d\\t | %d.%d\\t | %s\\t | %d\\t | \\n",) show
0 180 moveto (9289                      up[i].name, up[i].pid, up[i].uid, up[i].gid,) show
0 168 moveto (9290                      up[i].ppid,  up[i].CPU_total_ticks / 100, up[i].CPU_total_ticks % 100,) show
0 156 moveto (9291                      up[i].elapsed_ticks / 100, up[i].elapsed_ticks % 100,) show
0 144 moveto (9292                      up[i].state, up[i].size\);) show
0 132 moveto (9293 ) show
0 120 moveto (9294     }) show
0 108 moveto (9295 ) show
0 96 moveto (9296     exit\(\);) show
0 84 moveto (9297 }) show
0 72 moveto (9298 ) show
0 60 moveto (9299 ) show
0 24 moveto (Sheet 92) show
grestore
restore
showpage
%%Page: 101 101
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  6 23:34 2016  xv6/queue.h  Page 1) show
0 648 moveto (9300 struct queue {) show
0 636 moveto (9301 ) show
0 624 moveto (9302     struct proc *head;      // Head, Take Process from here) show
0 612 moveto (9303     struct proc *tail;      // Tail, Add Proccess to here) show
0 600 moveto (9304 };) show
0 588 moveto (9305 ) show
0 576 moveto (9306 ) show
0 564 moveto (9307 ) show
0 552 moveto (9308 ) show
0 540 moveto (9309 ) show
0 528 moveto (9310 ) show
0 516 moveto (9311 ) show
0 504 moveto (9312 ) show
0 492 moveto (9313 ) show
0 480 moveto (9314 ) show
0 468 moveto (9315 ) show
0 456 moveto (9316 ) show
0 444 moveto (9317 ) show
0 432 moveto (9318 ) show
0 420 moveto (9319 ) show
0 408 moveto (9320 ) show
0 396 moveto (9321 ) show
0 384 moveto (9322 ) show
0 372 moveto (9323 ) show
0 360 moveto (9324 ) show
0 348 moveto (9325 ) show
0 336 moveto (9326 ) show
0 324 moveto (9327 ) show
0 312 moveto (9328 ) show
0 300 moveto (9329 ) show
0 288 moveto (9330 ) show
0 276 moveto (9331 ) show
0 264 moveto (9332 ) show
0 252 moveto (9333 ) show
0 240 moveto (9334 ) show
0 228 moveto (9335 ) show
0 216 moveto (9336 ) show
0 204 moveto (9337 ) show
0 192 moveto (9338 ) show
0 180 moveto (9339 ) show
0 168 moveto (9340 ) show
0 156 moveto (9341 ) show
0 144 moveto (9342 ) show
0 132 moveto (9343 ) show
0 120 moveto (9344 ) show
0 108 moveto (9345 ) show
0 96 moveto (9346 ) show
0 84 moveto (9347 ) show
0 72 moveto (9348 ) show
0 60 moveto (9349 ) show
0 24 moveto (Sheet 93) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
grestore
restore
showpage
%%Trailer
%%Pages: 101
